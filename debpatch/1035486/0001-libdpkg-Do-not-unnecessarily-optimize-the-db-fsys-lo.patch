From b93783b16b75eea334d82221cf5a71af5ba1ff99 Mon Sep 17 00:00:00 2001
From: Guillem Jover <guillem@debian.org>
Date: Mon, 22 May 2023 01:26:15 +0200
Subject: [PATCH] libdpkg: Do not unnecessarily optimize the db-fsys load for
 loaded files

If the files list file is valid and will not be reloaded there is no
point in including it in the optimization load logic. Skip them as
we do when trying to (re)load these files. For the posix_fadvise() case
this is a clear fix, for the fiemap case we are supposedly already
caching the physical offset, so in case we already found it these
packages should have been skipped, but if we failed to fetch the
fiemap information then that might cause the wasted operations for
all packages.

FIXME: check why the caching might not be currently effecting.

Closes: #1035486
---
 lib/dpkg/db-fsys-files.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/lib/dpkg/db-fsys-files.c b/lib/dpkg/db-fsys-files.c
index fc67d1d20..c16b69487 100644
--- a/lib/dpkg/db-fsys-files.c
+++ b/lib/dpkg/db-fsys-files.c
@@ -194,6 +194,9 @@ pkg_files_optimize_load(struct pkg_array *array)
     const char *listfile;
     int fd;
 
+    if (pkg->files_list_valid)
+      continue;
+
     if (pkg->status == PKG_STAT_NOTINSTALLED ||
         pkg->files_list_phys_offs != 0)
       continue;
@@ -233,6 +236,9 @@ pkg_files_optimize_load(struct pkg_array *array)
     const char *listfile;
     int fd;
 
+    if (pkg->files_list_valid)
+      continue;
+
     listfile = pkg_infodb_get_file(pkg, &pkg->installed, LISTFILE);
 
     fd = open(listfile, O_RDONLY | O_NONBLOCK);
-- 
2.40.1

