--- 08_i18nl10n.txt	2014-01-26 21:32:19.031513070 +0100
+++ 08_i18nl10n_proposal.txt	2014-02-10 19:12:53.816714848 +0100
@@ -78,6 +78,10 @@
 
 ==== Disabling the input method
 
+### HW: From reading this document, I cannot say what this XIM thing is, which is
+### HW: mentioned here, it is not mentioned in this document before. 
+### HW: Maybe that is clear to Japanese/Chinese/Korean users?
+### HW: Otherwise a short description probably makes sense?
 If you wish to input without going through XIM, set "`$XMODIFIERS`" value to "none" while starting a program. This may be the case if you use Japanese input infrastructure `egg` on `emacs`(1). From shell, execute as the following.
 
 --------------------
@@ -113,12 +117,17 @@
 
 ==== Rationale for UTF-8 locale
 
-The http://en.wikipedia.org/wiki/UTF-8[UTF-8] encoding is the modern and sensible text encoding system for I18N and enables to represent http://en.wikipedia.org/wiki/Unicode[Unicode] characters, i.e., practically all characters known to human. **UTF** stands for Unicode Transformation Format (UTF) schemes.
+### HW: the sentence here is a description of the abbreviation UTF, so it does not make
+### HW: sense, to add the same abbreviation again in brackets at the end.
+### HW: Probably the "schemes" can also be skipped when describing the abbreviation?
+The http://en.wikipedia.org/wiki/UTF-8[UTF-8] encoding is the modern and sensible text encoding system for I18N and enables to represent http://en.wikipedia.org/wiki/Unicode[Unicode] characters, i.e., practically all characters known to human. **UTF** stands for Unicode Transformation Format.
 
 I recommend to use http://en.wikipedia.org/wiki/UTF-8[UTF-8] locale for your desktop, e.g.,  "`LANG=en_US.UTF-8`".  The first part of the locale determines messages presented by applications.  For example, `gedit`(1) (text editor for the GNOME Desktop) under "`LANG=fr_FR.UTF-8`" locale can display and edit Chinese character text data while presenting menus in French, as long as required fonts and input methods are installed.
 
 I also recommend to set the locale only using the "`$LANG`" environment variable. I do not see much benefit of setting a complicated combination of "`LC_\*`" variables (see `locale`(1)) under UTF-8 locale.
 
+### HW: Are both, the single and double quotation marks not available in ASCII, or only
+### HW: one of both? That's not clear. Also, the following example does not explain it.
 Even plain English text may contain non-ASCII characters, e.g. left and right quotation marks are not available in ASCII.
 
 --------------------
@@ -134,7 +143,7 @@
 
 ==== The reconfiguration of the locale
 
-In order for the system to access a particular locale, the locale data must be compiled from the locale database. (The Debian system does **not** come with all available locales pre-compiled unless you installed the `locales-all` package.) The full list of supported locales available for compiling are listed in "`/usr/share/i18n/SUPPORTED`". This lists all the proper locale names.  The following lists all the available UTF-8 locales already compiled to the binary form.
+In order for the system to access a particular locale, the locale data must be compiled from the locale database. (The Debian system does **not** come with all available locales pre-compiled unless you installed the `locales-all` package.) The full list of supported locales available for compiling is available in "`/usr/share/i18n/SUPPORTED`". This lists all the proper locale names.  The following lists all the available UTF-8 locales already compiled to the binary form.
 
 --------------------
 $ locale -a | grep utf8
@@ -150,7 +159,7 @@
 
 1. Update the list of available locales
 2. Compile them into the binary form
-3. Set the system wide default locale value in the "`/etc/default/locale`" for use by PAM (see <<_pam_and_nss>>)
+3. Set the system wide default locale value in "`/etc/default/locale`" for use by PAM (see <<_pam_and_nss>>)
 
 The list of available locale should include "`en_US.UTF-8`" and all the interesting languages with "`UTF-8`".
 
@@ -166,6 +175,7 @@
 - Set initially by the PAM mechanism of the display manager for all X programs
 - Set initially by the PAM mechanism of `ssh`(1) for the remote console programs
 - Changed by some display manager such as `gdm3`(1) for all X programs
+### HW: is the lenny condition here still relevant? Or can it be skipped?
 - Changed by the X session startup code via "`\~/.xsessionrc`" for all X programs (`lenny` feature)
 - Changed by the shell startup code, e.g. "`\~/.bashrc`", for all console programs
 
@@ -222,7 +232,7 @@
 
 Translations exist for many of the text messages and documents that are displayed in the Debian system, such as error messages, standard program output, menus, and manual pages.  http://en.wikipedia.org/wiki/Gettext[GNU gettext(1) command tool chain] is used as the backend tool for most translation activities.
 
-`aptitude`(8) lists under "Tasks" -> "Localization" provide extensive list of useful binary packages which add localized messages to applications and provide translated documentation.
+Under "Tasks" -> "Localization" `aptitude`(8) provides an extensive list of useful binary packages which add localized messages to applications and provide translated documentation.
 
 For example, you can obtain the localized message for manpage by installing the `manpages-<LANG>` package. To read the Italian-language manpage for <programname> from "`/usr/share/man/it/`", execute as the following.
 
