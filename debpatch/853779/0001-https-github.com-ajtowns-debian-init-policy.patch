Subject: [PATCH 1/2] https://github.com/ajtowns/debian-init-policy

commit d1df4275b18cfa90f53d468d836a0a2f6c7e61f5
Author: Anthony Towns <aj@erisian.com.au>
Date:   Tue Nov 18 04:35:51 2014 +1000

    update policy-rc.d docs
---
 policy/ch-opersys.rst | 104 +++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 99 insertions(+), 5 deletions(-)

diff --git a/policy/ch-opersys.rst b/policy/ch-opersys.rst
index 59c92ec..cd1c080 100644
--- a/policy/ch-opersys.rst
+++ b/policy/ch-opersys.rst
@@ -1008,13 +1008,107 @@ may be required for an implementation-specific equivalent of the
 ``/etc/rcS.d/`` scripts and may not have a one-to-one correspondence
 with the init scripts.
 
-.. _s-upstart:
+.. _s-using-rc.d:
 
-Event-based boot with upstart
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Using update-rc.d and invoke-rc.d commands
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+     To set a service to run at boot-time, the command `update-rc.d' should
+     be used:
+
+        * `update-rc.d ssh enable'
+
+        * `update-rc.d ssh disable'
+
+     On Debian systems, all services default to being enabled immediately
+     upon installation.
+
+     The package maintainer scripts must use `invoke-rc.d' to invoke the
+     `/etc/init.d/*' initscripts, instead of calling them directly or using
+     the `service' command or similar.
+
+     The `start', `stop', `restart', `force-reload', and `status' options
+     should be supported by all scripts in `/etc/init.d'; the `reload'
+     option is optional.
+
+     The `init.d' scripts must ensure that they will behave sensibly (i.e.,
+     returning success and not starting multiple copies of a service) if
+     invoked with `start' when the service is already running, or with
+     `stop' when it isn't, and that they don't kill unfortunately-named
+     user processes.  The best way to achieve this is usually to use
+     `start-stop-daemon' with the `--oknodo' option.
+
+     If a service reloads its configuration automatically (as in the case
+     of `cron', for example), the `reload' option of the `init.d' script
+     should behave as if the configuration has been reloaded successfully.
+
+2.3.4.2. Running initscripts
+----------------------------
+
+     The program `invoke-rc.d' is provided to make it easier for package
+     maintainers to properly invoke an initscript, obeying runlevel and
+     other locally-defined constraints that might limit a package's right
+     to start, stop and otherwise manage services.  This program may be
+     used by maintainers in their packages' scripts.
+
+     The package maintainer scripts must use `invoke-rc.d' to invoke the
+     `/etc/init.d/*' initscripts, instead of calling them directly or using
+     the `service' command or similar.
+
+     A package should register its initscript services using `update-rc.d'
+     before it tries to invoke them using `invoke-rc.d'.  Invocation of
+     unregistered services may fail.
+
+     By default, `invoke-rc.d' will pass any action requests (start, stop,
+     reload, restart...) to the `/etc/init.d' script, filtering out
+     requests to start or restart a service out of its intended runlevels.
+
+     Most packages will simply need to change:
+          /etc/init.d/<package> <action>
+     in their `postinst' and `prerm' scripts to:
+          invoke-rc.d <package> <action>
+
+     A package should register its initscript services using `update-rc.d'
+     before it tries to invoke them using `invoke-rc.d'.  Invocation of
+     unregistered services may fail.
+
+     For more information about using `invoke-rc.d', please consult its man
+     page invoke-rc.d(8).
+
+     Init scripts may wish to use the LSB exit status codes[3].  These are:
+
+     0
+          program is running or service is OK
+
+     1
+          program is dead and /var/run pid file exists
+
+     2
+          program is dead and /var/lock lock file exists
+
+     3
+          program is not running
+
+     4
+          program or service status is unknown
+
+     Note however that when the service is removed but not purged the init
+     script should exit with an error status of 0 on `start' or `stop'.
+
+     Error codes 100-149 are reserved for distribution use, so may be used
+     by packages if needed, however maintainers should discuss the
+     introduction of such codes first, eg on the `debian-devel' or
+     `debian-policy' lists.  All other codes are reserved, and should not
+     be used by Debian packages.
+
+[1]  A service is running if the result of the `start' action is in effect.
+
+[2]  Packages are encouraged to use the specific non-zero exit statuses
+     defined by LSB, but policy currently does not require their use.  It
+     is only required to distinguish between 0 for running and not 0 for
+     not running.
 
-The ``upstart`` event-based boot system is no longer maintained in
-Debian, so this section has been removed.
+[3]  http://refspecs.linuxfoundation.org/LSB_4.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html
 
 .. [#]
    This is necessary in order to reserve the directories for use in
-- 
2.11.0

