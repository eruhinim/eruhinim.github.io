Subject: [PATCH 2/2] Subject: Bug#853779: debian-policy: Clarify requirements
 about update-rc.d and invoke-rc.d usage in maintainer scripts

---
 policy/ch-opersys.rst | 90 ++++++++++++---------------------------------------
 1 file changed, 21 insertions(+), 69 deletions(-)

diff --git a/policy/ch-opersys.rst b/policy/ch-opersys.rst
index cd1c080..1711d66 100644
--- a/policy/ch-opersys.rst
+++ b/policy/ch-opersys.rst
@@ -502,14 +502,10 @@ information.
 Interfacing with init systems
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-Maintainers should use the abstraction layer provided by the
+Maintainers use the abstraction layer provided by the
 ``update-rc.d`` and ``invoke-rc.d`` programs to deal with initscripts in
 their packages' scripts such as ``postinst``, ``prerm`` and ``postrm``.
 
-Directly managing the /etc/rc?.d links and directly invoking the
-``/etc/init.d/`` initscripts should be done only by packages providing
-the initscript subsystem (such as ``sysv-rc`` and ``file-rc``).
-
 .. _s9.3.3.1:
 
 Managing the links
@@ -517,15 +513,13 @@ Managing the links
 
 The program ``update-rc.d`` is provided for package maintainers to
 arrange for the proper creation and removal of ``/etc/rcn.d`` symbolic
-links, or their functional equivalent if another method is being used.
-This may be used by maintainers in their packages' ``postinst`` and
-``postrm`` scripts.
+links in their packages' ``postinst`` and ``postrm`` scripts.
 
-You must not include any ``/etc/rcn.d`` symbolic links in the actual
+Packages must not include any ``/etc/rcn.d`` symbolic links in the actual
 archive or manually create or remove the symbolic links in maintainer
-scripts; you must use the ``update-rc.d`` program instead. (The former
+scripts; Maintainers must use the ``update-rc.d`` program instead. (The former
 will fail if an alternative method of maintaining runlevel information
-is being used.) You must not include the ``/etc/rcn.d`` directories
+is being used.) Packages must not include the ``/etc/rcn.d`` directories
 themselves in the archive either. (Only the ``sysvinit`` package may do
 so.)
 
@@ -995,87 +989,45 @@ used in place of sysvinit. Alternative init implementations must support
 running SysV init scripts as described at
 :ref:`s-sysvinit` for compatibility.
 
-Packages may integrate with these replacement init systems by providing
-implementation-specific configuration information about how and when to
-start a service or in what order to run certain tasks at boot time.
-However, any package integrating with other init systems must also be
-backwards-compatible with sysvinit by providing a SysV-style init script
-with the same name as and equivalent functionality to any init-specific
-job, as this is the only start-up configuration method guaranteed to be
-supported by all init implementations. An exception to this rule is
-scripts or jobs provided by the init implementation itself; such jobs
-may be required for an implementation-specific equivalent of the
-``/etc/rcS.d/`` scripts and may not have a one-to-one correspondence
-with the init scripts.
+All init systems must be backwards-compatible with sysvinit by providing
+`update-rc.d' and `invoke-rc.d' and equivalent functionality, as this
+is the only start-up configuration method guaranteed to be supported
+by all init implementations.
 
 .. _s-using-rc.d:
 
 Using update-rc.d and invoke-rc.d commands
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
-     To set a service to run at boot-time, the command `update-rc.d' should
-     be used:
+     Package maintainers use `update-rc.d' to enable or disable services:
 
-        * `update-rc.d ssh enable'
+        * update-rc.d <service> [enable|disable]
 
-        * `update-rc.d ssh disable'
 
      On Debian systems, all services default to being enabled immediately
      upon installation.
 
      The package maintainer scripts must use `invoke-rc.d' to invoke the
-     `/etc/init.d/*' initscripts, instead of calling them directly or using
+     service, instead of calling it directly or using
      the `service' command or similar.
 
      The `start', `stop', `restart', `force-reload', and `status' options
-     should be supported by all scripts in `/etc/init.d'; the `reload'
-     option is optional.
-
-     The `init.d' scripts must ensure that they will behave sensibly (i.e.,
-     returning success and not starting multiple copies of a service) if
-     invoked with `start' when the service is already running, or with
-     `stop' when it isn't, and that they don't kill unfortunately-named
-     user processes.  The best way to achieve this is usually to use
-     `start-stop-daemon' with the `--oknodo' option.
-
-     If a service reloads its configuration automatically (as in the case
-     of `cron', for example), the `reload' option of the `init.d' script
-     should behave as if the configuration has been reloaded successfully.
+     should be supported by all init systems; the `reload' option is
+     optional.
 
-2.3.4.2. Running initscripts
-----------------------------
-
-     The program `invoke-rc.d' is provided to make it easier for package
-     maintainers to properly invoke an initscript, obeying runlevel and
-     other locally-defined constraints that might limit a package's right
-     to start, stop and otherwise manage services.  This program may be
-     used by maintainers in their packages' scripts.
-
-     The package maintainer scripts must use `invoke-rc.d' to invoke the
-     `/etc/init.d/*' initscripts, instead of calling them directly or using
-     the `service' command or similar.
-
-     A package should register its initscript services using `update-rc.d'
-     before it tries to invoke them using `invoke-rc.d'.  Invocation of
-     unregistered services may fail.
+     A service should be enabled with `update-rc.d' before using the
+     `invoke-rc.d' command.  Invocation of disabled services may fail.
 
      By default, `invoke-rc.d' will pass any action requests (start, stop,
-     reload, restart...) to the `/etc/init.d' script, filtering out
+     reload, restart...) to the service, filtering out
      requests to start or restart a service out of its intended runlevels.
 
-     Most packages will simply need to change:
-          /etc/init.d/<package> <action>
-     in their `postinst' and `prerm' scripts to:
-          invoke-rc.d <package> <action>
-
-     A package should register its initscript services using `update-rc.d'
-     before it tries to invoke them using `invoke-rc.d'.  Invocation of
-     unregistered services may fail.
+     Package maintainers use the `invoke-rc.d' command in their `postinst'
+     and `prerm' scripts:
 
-     For more information about using `invoke-rc.d', please consult its man
-     page invoke-rc.d(8).
+          * invoke-rc.d <service> [start|stop|status|restart|...]
 
-     Init scripts may wish to use the LSB exit status codes[3].  These are:
+     Services and init systems use LSB exit status codes[3]:
 
      0
           program is running or service is OK
-- 
2.11.0

