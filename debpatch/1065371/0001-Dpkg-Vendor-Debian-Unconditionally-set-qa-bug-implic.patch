From 87702728876e96891d02df2d1b0419f709939190 Mon Sep 17 00:00:00 2001
From: Guillem Jover <guillem@debian.org>
Date: Sun, 3 Mar 2024 18:53:12 +0100
Subject: [PATCH] Dpkg::Vendor::Debian: Unconditionally set qa
 bug-implicit-func

For the time64 default change, we conditionally enabled
bug-implicit-func to avoid silent ABI breakage due to implicit function
declarations that end up using the time32 symbols, but that is causing
confusion as the effects are not visible on the most commonly used
architectures. Instead enable this globally, unless the maintainer has
specified otherwise.
---
 scripts/Dpkg/Vendor/Debian.pm | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/scripts/Dpkg/Vendor/Debian.pm b/scripts/Dpkg/Vendor/Debian.pm
index ad727d2cf..b3be69e86 100644
--- a/scripts/Dpkg/Vendor/Debian.pm
+++ b/scripts/Dpkg/Vendor/Debian.pm
@@ -117,7 +117,7 @@ sub set_build_features {
             time64 => undef,
         },
         qa => {
-            bug => 0,
+            bug => undef,
             'bug-implicit-func' => undef,
             canary => 0,
         },
@@ -297,10 +297,6 @@ sub set_build_features {
     if ($use_feature{abi}{time64} && ! $builtin_feature{abi}{time64}) {
         # On glibc 64-bit time_t support requires LFS.
         $use_feature{abi}{lfs} = 1 if $libc eq 'gnu';
-
-        # Require -Werror=implicit-function-declaration, to avoid linking
-        # against the wrong symbol, unless it has been set explicitly.
-        $use_feature{qa}{'bug-implicit-func'} //= 1;
     }
 
     # XXX: Handle lfs alias from future abi feature area.
@@ -311,7 +307,14 @@ sub set_build_features {
 
     ## Area: qa
 
-    $use_feature{qa}{'bug-implicit-func'} //= $use_feature{qa}{bug};
+    # For time64 we require -Werror=implicit-function-declaration, to avoid
+    # linking against the wrong symbol. Instead of enabling this conditionally
+    # on time64 being enabled, do it unconditionally so that the effects are
+    # uniform and visible on all architectures. Unless it has been set
+    # explicitly.
+    $use_feature{qa}{'bug-implicit-func'} //= $use_feature{qa}{bug} // 1;
+
+    $use_feature{qa}{bug} //= 0;
 
     ## Area: reproducible
 
-- 
2.43.0

