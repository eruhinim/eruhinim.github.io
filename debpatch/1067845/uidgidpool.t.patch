--- a/debian/tests/f/uidgidpool.t
+++ b/debian/tests/f/uidgidpool.t
@@ -40,6 +40,18 @@
     'shell' => '/bin/sh',
    }
 );
+my $firstuid = (sort map {$_->{id}} @uidlist)[0];
+
+my @uidreserved = (
+   {
+    'name' => 'uidreserved1',
+    'id' => $firstuid,
+    'comment' => 'uidreserved1 pool account',
+    'home' => '/home/uidreserved1',
+    'ahome' => '/home/auidreserved1',
+    'shell' => '/bin/sh',
+   }
+);
 
 my @gidlist = (
     {
@@ -50,6 +62,13 @@
      id => 32202,
     }
 );
+my $firstgid = (sort map {$_->{id}} @gidlist)[0];
+my @gidreserved = (
+   {
+    name => 'gidreserved1',
+    id => $firstgid,
+   }
+);
 
 # test creating user/group without uidpool set
 
@@ -68,11 +87,11 @@
 }
 
 sub cleanup {
-    foreach my $user( @uidlist ) {
+    foreach my $user( @uidlist, @uidreserved ) {
         system("/usr/sbin/deluser $quiet --remove-home $user->{name} 2>/dev/null");
         assert_user_does_not_exist($user->{name});
     }
-    foreach my $group( @gidlist ) {
+    foreach my $group( @gidlist, @gidreserved ) {
         system("/usr/sbin/delgroup $quiet $group->{name} 2>/dev/null");
         assert_group_does_not_exist($group->{name});
     }
@@ -160,6 +179,78 @@
     cleanup();
 }
 
+%confhash=();
+$confhash{"UID_POOL"}="$uidpoolfile";
+$confhash{"GID_POOL"}="$gidpoolfile";
+$confhash{"FIRST_UID"}="$firstuid";
+$confhash{"FIRST_GID"}="$firstgid";
+$confhash{"RESERVE_UID_POOL"}="0";
+$confhash{"RESERVE_GID_POOL"}="0";
+apply_config_hash(\%confhash);
+
+# test not reserved uid in pool
+
+foreach my $group( @gidreserved ) {
+    assert_command_success('/usr/sbin/addgroup', $quiet,
+      $group->{name});
+    assert_group_exists($group->{name});
+    assert_group_has_gid($group->{name}, $group->{id});
+    cleanup();
+
+    assert_command_success('/usr/sbin/addgroup', $quiet,
+      '--gid', $agid, $group->{name});
+    assert_group_exists($group->{name});
+    assert_group_has_gid($group->{name}, $agid);
+    cleanup();
+}
+
+foreach my $user( @uidreserved ) {
+    assert_command_success('/usr/sbin/adduser', $quiet,
+      '--comment', '""', '--disabled-password', $user->{name});
+    assert_user_exists($user->{name});
+    assert_user_has_uid($user->{name}, $user->{id});
+    cleanup();
+}
+
+%confhash=();
+$confhash{"UID_POOL"}="$uidpoolfile";
+$confhash{"GID_POOL"}="$gidpoolfile";
+$confhash{"FIRST_UID"}="$firstuid";
+$confhash{"FIRST_GID"}="$firstgid";
+$confhash{"RESERVE_UID_POOL"}="1";
+$confhash{"RESERVE_GID_POOL"}="1";
+apply_config_hash(\%confhash);
+
+# test reserved uid in pool
+
+foreach my $group( @gidreserved ) {
+    assert_command_success('/usr/sbin/addgroup', $quiet,
+      $group->{name});
+    assert_group_exists($group->{name});
+    assert_gid_does_not_exist($group->{id});
+    cleanup();
+
+    assert_command_success('/usr/sbin/addgroup', $quiet,
+      '--gid', $group->{id}, $group->{name});
+    assert_group_exists($group->{name});
+    assert_group_has_gid($group->{name}, $group->{id});
+    cleanup();
+}
+
+foreach my $user( @uidreserved ) {
+    assert_command_success('/usr/sbin/adduser', $quiet,
+      '--comment', '""', '--disabled-password', $user->{name});
+    assert_user_exists($user->{name});
+    assert_uid_does_not_exist($user->{id});
+    cleanup();
+
+    assert_command_success('/usr/sbin/adduser', $quiet,
+      '--uid', $user->{id}, '--comment', '""', '--disabled-password', $user->{name});
+    assert_user_exists($user->{name});
+    assert_user_has_uid($user->{name}, $user->{id});
+    cleanup();
+}
+
 # remove test pool files
 assert_command_success('rm', '-f', $uidpoolfile, $gidpoolfile);
 
