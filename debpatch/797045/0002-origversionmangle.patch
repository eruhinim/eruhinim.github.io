From c77651ea35585f7a91049a1dc1db5e433ea54823 Mon Sep 17 00:00:00 2001
From: Osamu Aoki <osamu@debian.org>
Date: Sat, 5 Sep 2015 01:27:19 +0900
Subject: [PATCH 2/4] origversionmangle

---
 scripts/uscan.pl | 33 +++++++++++++++++++++++++++++++--
 1 file changed, 31 insertions(+), 2 deletions(-)

diff --git a/scripts/uscan.pl b/scripts/uscan.pl
index 714bff0..9a2d889 100644
--- a/scripts/uscan.pl
+++ b/scripts/uscan.pl
@@ -147,6 +147,8 @@ B<uversionmangle=>I<rules>B<,dversionmangle=>I<rules>
 
 =item * B<filenamemangle=>I<rule> for the downloaded tarball filename string
 
+=item * B<origversionmangle=>I<rule> for the source tarball (B<.orig.tar.gz>) version strings
+
 =item * B<downloadurlmangle=>I<rule> for the candidate upstream tarball URL string
 
 =item * B<pgpsigurlmangle=>I<rule> for the candidate upstream signature file URL string
@@ -576,6 +578,16 @@ some way into one which will work automatically, for example:
   http://developer.berlios.de/project/showfiles.php?group_id=2051 \
   http://prdownload.berlios.de/softdevice/vdr-softdevice-(.+).tgz
 
+=head2 HTTP site (origversionmangle)
+
+The option B<origversionmangle> can be used to mangle the version of the source
+tarball (B<.orig.tar.gz>).  For example, B<+dfsg1> can be added to the upstream
+version as:
+
+  opts=origversionmangle=s/(.*)/$1+dfsg1/ \
+  http://example.com/~user/release/foo.html \
+  files/foo-([\d\.]*).tar.gz
+
 =head2 HTTP site (pagemangle)
 
 The option B<pagemangle> can be used to mangle the downloaded web page before
@@ -1777,6 +1789,9 @@ sub process_watchline ($$$$$$)
 		elsif ($opt =~ /^filenamemangle\s*=\s*(.+)/) {
 		    @{$options{'filenamemangle'}} = split /;/, $1;
 		}
+		elsif ($opt =~ /^origversionmangle\s*=\s*(.+)/) {
+		    @{$options{'origversionmangle'}} = split /;/, $1;
+		}
 		elsif ($opt =~ /^downloadurlmangle\s*=\s*(.+)/) {
 		    @{$options{'downloadurlmangle'}} = split /;/, $1;
 		}
@@ -2165,9 +2180,23 @@ EOF
 	    return 1;
 	}
     }
-    print STDERR "$progname debug: new version $newversion\n" if $debug;
+    foreach my $pat (@{$options{'origversionmangle'}}) {
+	if (! safe_replace(\$newversion, $pat)) {
+	    uscan_warn "$progname: In $watchfile, potentially"
+	      . " unsafe or malformed origversionmangle"
+	      . " pattern:\n  '$pat'"
+	      . " found. Skipping watchline\n"
+	      . "  $line\n";
+		return 1;
+	}
+    }
+    print STDERR "$progname debug: new origversion $newversion\n" if $debug;
+    my $repack_newversion = $newversion;
+    if (defined $options{'repacksuffix'}) {
+	$repack_newversion =. $options{'repacksuffix'};
+    }
+    print STDERR "$progname debug: repackaed origversion $repack_newversion\n" if $debug;
     print STDERR "$progname debug: new filename $newfile\n" if $debug;
-
     my $newfile_base=basename($newfile);
     if (exists $options{'filenamemangle'}) {
         $newfile_base=$newfile;
-- 
2.1.4

