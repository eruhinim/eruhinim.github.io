From 05c2401a7ae0beb89931713d4e0804c7b9d716aa Mon Sep 17 00:00:00 2001
From: Christian von Roques <roques@mti.ag>
Date: Fri, 26 Aug 2011 20:40:11 +0200
Subject: [PATCH] Fix salvaging of unused cluster chains for FAT32

The FAT32 specific code in alloc_rootdir_entry() always created
"\000\000\000\000FSCK.RES" as filename.  Changed that to
"FSCK0000.RES", "FSCK0001.RES", ... as in the non-FAT32 code.

diff --git a/src/check.c b/src/check.c
index 3f175b0..40fbee2 100644
--- a/src/check.c
+++ b/src/check.c
@@ -129,10 +129,9 @@ loff_t alloc_rootdir_entry(DOS_FS * fs, DIR_ENT * de, const char *pattern)
 	}
 	memset(de, 0, sizeof(DIR_ENT));
 	while (1) {
-	    char expanded[12];
-	    sprintf(expanded, pattern, curr_num);
-	    memcpy(de->name + 4, expanded, 4);
-	    memcpy(de->ext, expanded + 4, 3);
+	    sprintf(de->name, pattern, curr_num);
+	    /* overwrite terminating \0 written by sprintf into ->ext with "RES" */
+	    memcpy(de->ext, "RES", 3);
 	    clu_num = fs->root_cluster;
 	    i = 0;
 	    offset2 = cluster_start(fs, clu_num);
@@ -175,6 +174,8 @@ loff_t alloc_rootdir_entry(DOS_FS * fs, DIR_ENT * de, const char *pattern)
 	memset(de, 0, sizeof(DIR_ENT));
 	while (1) {
 	    sprintf((char *)de->name, pattern, curr_num);
+	    /* overwrite terminating \0 written by sprintf into ->ext with "RES" */
+	    memcpy(de->ext, "RES", 3);
 	    for (scan = 0; scan < fs->root_entries; scan++)
 		if (scan != next_free &&
 		    !strncmp((const char *)root[scan].name,
-- 
1.7.10.4

