diff -up ./scripts/Dpkg/Vendor/Debian.pm.org ./scripts/Dpkg/Vendor/Debian.pm
--- ./scripts/Dpkg/Vendor/Debian.pm.org	2022-12-21 11:07:11.032960709 +0000
+++ ./scripts/Dpkg/Vendor/Debian.pm	2022-12-21 13:47:24.308936916 +0000
@@ -96,6 +96,16 @@ sub run_hook {
 sub _add_build_flags {
     my ($self, $flags) = @_;
 
+    require Dpkg::Arch;
+
+    my $arch = Dpkg::Arch::get_host_arch();
+    my ($abi, $libc, $os, $cpu) = Dpkg::Arch::debarch_to_debtuple($arch);
+
+    unless (defined $abi and defined $libc and defined $os and defined $cpu) {
+        warning(g_("unknown host architecture '%s'"), $arch);
+        ($abi, $os, $cpu) = ('', '', '');
+    }
+
     # Default feature states.
     my %use_feature = (
         future => {
@@ -138,6 +148,11 @@ sub _add_build_flags {
         },
     );
 
+    # enable LFS for hppa by default, disable with "future=-lfs"
+    if ($cpu =~ /^(?:hppa)$/) {
+	$use_feature{future}{lfs} = 1;
+    }
+
     ## Setup
 
     require Dpkg::BuildOptions;
@@ -151,16 +166,6 @@ sub _add_build_flags {
         $opts_maint->parse_features($area, $use_feature{$area});
     }
 
-    require Dpkg::Arch;
-
-    my $arch = Dpkg::Arch::get_host_arch();
-    my ($abi, $libc, $os, $cpu) = Dpkg::Arch::debarch_to_debtuple($arch);
-
-    unless (defined $abi and defined $libc and defined $os and defined $cpu) {
-        warning(g_("unknown host architecture '%s'"), $arch);
-        ($abi, $os, $cpu) = ('', '', '');
-    }
-
     ## Global defaults
 
     my @compile_flags = qw(
