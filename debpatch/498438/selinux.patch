diff --git a/src/archives.c b/src/archives.c
index 77d67ce..ed2cb9e 100644
--- a/src/archives.c
+++ b/src/archives.c
@@ -353,6 +353,17 @@ linktosameexistingdir(const struct TarInfo *ti, const char *fname,
   return true;
 }
 
+static void
+cu_selinux_context(int argc, void **argv)
+{
+#ifdef WITH_SELINUX
+  /* If selinux is enabled, restore the default security context. */
+  if (selinux_enabled > 0)
+    if (setfscreatecon(NULL) < 0)
+      perror("Error restoring default security context:");
+#endif /* WITH_SELINUX */
+}
+
 int tarobject(struct TarInfo *ti) {
   static struct varbuf conffderefn, hardlinkfn, symlinkfn;
   static int fd;
@@ -623,7 +634,7 @@ int tarobject(struct TarInfo *ti) {
      }
   }
 #endif /* WITH_SELINUX */
-
+  push_cleanup(cu_selinux_context, ~0, NULL, 0, 0);
 
   /* Extract whatever it is as .dpkg-new ... */
   switch (ti->Type) {
@@ -724,6 +735,7 @@ int tarobject(struct TarInfo *ti) {
   if (nifd->namenode->flags & fnnf_new_conff) {
     debug(dbg_conffdetail,"tarobject conffile extracted");
     nifd->namenode->flags |= fnnf_elide_other_lists;
+    pop_cleanup(ehflag_normaltidy); /* cu_selinux_context(). */
     return 0;
   }
 
@@ -792,15 +804,7 @@ int tarobject(struct TarInfo *ti) {
 
   nifd->namenode->flags |= fnnf_placed_on_disk;
 
-#ifdef WITH_SELINUX
-  /*
-   * if selinux is enabled, restore the default security context
-   */
-  if (selinux_enabled > 0)
-    if(setfscreatecon(NULL) < 0)
-      perror("Error restoring default security context:");
-#endif /* WITH_SELINUX */
-
+  pop_cleanup(ehflag_normaltidy); /* cu_selinux_context(). */
 
   nifd->namenode->flags |= fnnf_elide_other_lists;
 
