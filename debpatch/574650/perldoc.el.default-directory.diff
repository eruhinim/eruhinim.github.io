--- perldoc.el.orig	2010-03-20 04:47:16.000000000 +1100
+++ perldoc.el	2010-03-20 05:32:32.000000000 +1100
@@ -117,7 +117,8 @@
           (case-fold-search nil))
       (set-buffer tmp-buffer)
       (erase-buffer)
-      (shell-command "perldoc -u perlfunc" t)
+      (let ((default-directory "/")) ;; in case current doesn't exist
+        (shell-command "perldoc -u perlfunc" t))
       (goto-char (point-min))
       (cond
        ((search-forward "Alphabetical Listing of Perl Functions" nil t)
@@ -150,7 +151,8 @@
 	  (perldoc-inc nil))
       (set-buffer tmp-buffer)
       (erase-buffer)
-      (shell-command "perl -e 'print \"@INC\"'" t)
+      (let ((default-directory "/")) ;; in case current doesn't exist
+        (shell-command "perl -e 'print \"@INC\"'" t))
       (goto-char (point-min))
       (while (re-search-forward "\\(/[^ ]*\\)" nil t)
 	(let ((libdir (match-string 1)))
@@ -160,7 +162,11 @@
 	(let (modules (list))
 	  (when (file-readable-p dir)
 	    (erase-buffer)
-	    (shell-command (concat "find -L " dir " -name '[A-Z]*.pm'") t)
+            ;; use "/" in case default-directory doesn't exist
+            ;; perldoc-inc doesn't contain "." or other relative dirs, so
+            ;; this setting doesn't make "find" traverse the whole of "/"
+            (let ((default-directory "/"))
+              (shell-command (concat "find -L " dir " -name '[A-Z]*.pm'") t))
 	    (goto-char (point-min))
 	    (while (re-search-forward (concat "^" (regexp-quote dir) "/\\(.*\\).pm$") nil t)
 	      (let ((entry (list (replace-regexp-in-string "/" "::" (match-string 1)))))
@@ -220,7 +226,8 @@
     (text-mode)
     (message "Loading documentation ..")
     (set-process-sentinel
-     (apply 'start-process args)
+     (let ((default-directory "/")) ;; in case current doesn't exist
+       (apply 'start-process args))
      'perldoc-sentinel)))
 
 (defun perldoc-function (function)
