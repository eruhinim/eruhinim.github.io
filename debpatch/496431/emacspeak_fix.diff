diff -Nru --exclude changelog emacspeak-26.0/lisp/emacspeak-w3m.el emacspeak-26.0/lisp/emacspeak-w3m.el
--- emacspeak-26.0/lisp/emacspeak-w3m.el	2007-05-03 20:08:57.000000000 -0500
+++ emacspeak-26.0/lisp/emacspeak-w3m.el	2008-10-15 12:27:48.000000000 -0500
@@ -867,9 +867,10 @@
   "Preview this buffer in w3m."
   (interactive)
   (let ((filename
-         (format "/tmp/%s.html"
-                 (make-temp-name "w3m"))))
-    (write-region (point-min) 
+         (make-temp-file
+	  (format "%s.html"
+                 (make-temp-name "w3m")))))
+    (write-region (point-min)
                   (point-max)
                   filename)
     (w3m-find-file filename)
diff -Nru --exclude changelog emacspeak-26.0/lisp/emacspeak-wizards.el emacspeak-26.0/lisp/emacspeak-wizards.el
--- emacspeak-26.0/lisp/emacspeak-wizards.el	2007-05-03 20:14:14.000000000 -0500
+++ emacspeak-26.0/lisp/emacspeak-wizards.el	2008-10-15 12:27:48.000000000 -0500
@@ -1792,15 +1792,20 @@
     (read-from-minibuffer "Count: ")))
   (declare (special
             emacspeak-wizards-table-content-extractor))
-  (let ((output (format "/tmp/%s.csv" task)))
-    (shell-command
-     (format  "%s --task=%s --url='%s' --depth=%s --count=%s"
-              emacspeak-wizards-table-content-extractor
-              task
-              url
-              depth count ))
-    (emacspeak-table-find-csv-file output)
-    (delete-file output)))
+  (let ((buffer (get-buffer-create " *table extractor*")))
+    (save-excursion
+      (set-buffer buffer)
+      (erase-buffer)
+      (setq buffer-undo-list t)
+      (call-process
+       emacspeak-wizards-table-content-extractor
+       nil t nil
+       "--task" task
+       "--url"  url
+       "--depth" depth
+       "--count" count
+       "2>/dev/null")
+      (emacspeak-table-view-csv-buffer))))
 ;;;###autoload
 (defun emacspeak-wizards-get-table-content-from-file (task file depth count )
   "Extract table specified by depth and count from HTML
@@ -1814,11 +1819,21 @@
     (read-from-minibuffer "Depth: ")
     (read-from-minibuffer "Count: ")))
   (declare (special emacspeak-wizards-table-content-extractor))
-  (shell-command
-   (format  "%s --task=%s --file=%s --depth=%s --count=%s"
-            emacspeak-wizards-table-content-extractor
-            task file depth count ))
-  (emacspeak-table-find-csv-file (format "/tmp/%s.csv" task)))
+  (let ((
+	 (get-buffer-create " *table extractor* ")))
+    (save-excursion
+      (set-buffer buffer)
+      (erase-buffer)
+      (setq buffer-undo-list t)
+      (call-process
+  emacspeak-wizards-table-content-extractor
+  nil t nil
+  "--task" task
+  "--file" file
+  "--depth" depth
+  "--count" count
+  "2>/dev/null")    
+    (emacspeak-table-view-csv-buffer))))
 
 ;;}}}
 ;;{{{ annotation wizard
@@ -2171,8 +2186,10 @@
                     emacspeak-wizards-quote-command
                     emacspeak-wizards-quote-row-filter))
   (let ((temp-file
-         (format "/tmp/%s.csv"
-                 (gensym "quotes"))))
+         (expand-file-name
+	  (format "%s.csv"
+                 (gensym "quotes"))
+	  emacspeak-resource-directory)))
     (shell-command
      (format
       "echo '%s' | perl %s > %s"
