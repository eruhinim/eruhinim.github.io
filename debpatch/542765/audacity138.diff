only in patch2:
unchanged:
--- audacity-1.3.8.orig/lib-src/portmixer/configure.ac
+++ audacity-1.3.8/lib-src/portmixer/configure.ac
@@ -90,7 +90,10 @@
 #
 # Check which APIs are available
 #
-AC_CHECK_HEADER(linux/soundcard.h, have_oss=yes, have_oss=no)
+
+have_oss=no
+AC_CHECK_HEADERS([sys/soundcard.h linux/soundcard.h machine/soundcard.h], have_oss=yes)
+
 AC_CHECK_HEADER(alsa/asoundlib.h,  have_alsa=yes, have_alsa=no)
 AC_CHECK_HEADER(CoreAudio/CoreAudio.h, have_coreaudio=yes, have_coreaudio=no)
 
only in patch2:
unchanged:
--- audacity-1.3.8.orig/lib-src/portmixer/src/px_unix_oss.c
+++ audacity-1.3.8/lib-src/portmixer/src/px_unix_oss.c
@@ -36,14 +36,6 @@
  *
  */
 
-#if defined(__linux__)
-#include <linux/soundcard.h>
-#elif defined(__FreeBSD__)
-#include <sys/soundcard.h>
-#else
-#include <machine/soundcard.h> /* JH20010905 */
-#endif
-
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -53,6 +45,16 @@
 #include <sys/stat.h>
 #include <sys/ioctl.h>
 
+#if defined(HAVE_SYS_SOUNDCARD_H)
+# include <sys/soundcard.h>
+#elif defined(HAVE_LINUX_SOUNDCARD_H)
+# include <linux/soundcard.h>
+#elif defined(HAVE_MACHINE_SOUNDCARD_H)
+# include <machine/soundcard.h> /* JH20010905 */
+#else
+# error No sound card header file
+#endif
+
 #include "portaudio.h"
 #include "pa_unix_oss.h"
 
only in patch2:
unchanged:
--- audacity-1.3.8.orig/lib-src/libnyquist/nyquist/sys/unix/switches.h
+++ audacity-1.3.8/lib-src/libnyquist/nyquist/sys/unix/switches.h
@@ -76,7 +76,7 @@
   #define CPU_IS_BIG_ENDIAN 1
  #endif
 #else
- #ifdef __linux__
+ #if defined(__linux__) || defined(__GLIBC__)
   #include <endian.h>
   #if __BYTE_ORDER == __LITTLE_ENDIAN
    /* Target processor is little endian. */
only in patch2:
unchanged:
--- audacity-1.3.8.orig/lib-src/libnyquist/nyquist/xlisp/xlisp.h
+++ audacity-1.3.8/lib-src/libnyquist/nyquist/xlisp/xlisp.h
@@ -143,7 +143,7 @@
 #endif
 
 /* Linux on Pentium */
-#ifdef __linux__
+#if defined(__linux__) || defined(__GLIBC__)
 #include <endian.h>
 #if __BYTE_ORDER == __LITTLE_ENDIAN
 #define XL_LITTLE_ENDIAN
