From 1b0fde3cf0081c36a1dbaa71dc6b9c6f3869e5d6 Mon Sep 17 00:00:00 2001
From: Osamu Aoki <osamu@debian.org>
Date: Sun, 12 Apr 2020 21:07:55 +0900
Subject: [PATCH 1/3] Enhance packaging

Docs with focus on Debian
Drop deprecated target (lintian clean)

Signed-off-by: Osamu Aoki <osamu@debian.org>
---
 debian/arduino-mk.README.Debian     | 165 ++++++++++++++++++++++++++++
 debian/arduino-mk.links             |   2 +
 debian/arduino-mk.lintian-overrides |   2 +
 debian/rules                        |   4 +-
 4 files changed, 171 insertions(+), 2 deletions(-)
 create mode 100644 debian/arduino-mk.README.Debian
 create mode 100644 debian/arduino-mk.links
 create mode 100644 debian/arduino-mk.lintian-overrides

diff --git a/debian/arduino-mk.README.Debian b/debian/arduino-mk.README.Debian
new file mode 100644
index 0000000..3153b60
--- /dev/null
+++ b/debian/arduino-mk.README.Debian
@@ -0,0 +1,165 @@
+# A Makefile for Arduino Sketches
+
+This is a very simple Makefile which knows how to build Arduino sketches. It
+defines entire workflows for compiling code, flashing it to Arduino and even
+communicating through Serial monitor. You don't need to change anything in the
+Arduino sketches.
+
+This README.Debian is lightly edited excerpts of the upstream README.md:
+  https://github.com/sudar/Arduino-Makefile/blob/master/README.md
+
+This aims to address ease of use for the new Debian user but may be
+slightly outdated. (created on April/2020)
+
+## Features
+
+- Very robust
+- Highly customizable
+- Supports all official AVR-based Arduino boards
+- Supports chipKIT
+- Supports Teensy 3.x (via Teensyduino)
+- Auto detects serial baud rate and libraries used
+- Support for `*.ino` and `*.pde` sketches as well as raw `*.c` and `*.cpp`
+- Support for Arduino Software versions 1.0.x (Debian package) and
+  1.8.x (upstream releases) versions of Arduino IDE.
+- Automatic dependency tracking. Referred libraries are automatically included
+  in the build process. Changes in `*.h` files lead to recompilation of sources
+  which include them
+
+## Installation
+
+### Through package
+
+```sh
+ $ sudo apt install arduino-mk
+```
+
+### From source
+
+- Check https://github.com/sudar/Arduino-Makefile#from-source
+
+## Requirements
+
+### Arduino IDE
+
+You need to have the Arduino IDE. You can either install it through the
+installer or download the distribution zip file and extract it.
+
+- Debian:   Arduino 1.0.5 based,  installed as system files via `apt ...`
+- Upstream: Arduino 1.8.12 based, installed as user files via `git clone ...`
+
+FYI:
+
+  Due to recent changes in the upstream software distribution infrastructure
+  of Arduino relying heavily on pre-compiled binary blobs making them DFSG
+  non-FREE, Debian Arduino package itself is stack in very old version.  It's
+  not as bad as it looks.
+
+  For the use of arduino-mk aimed for the classic 8-bit AVR MCU platform, it is
+  fairly usable shape since we use the fairly new version of gcc-avr,
+  binutils-avr, avr-libc, and avrdude packages created from the latest original
+  upstream.
+
+### pySerial
+
+Installed by the package dependency
+
+## Usage
+
+Sample makefiles are provided in the `/usr/share/doc/arduino-mk/examples/`
+directory.  E.g. `MakefileExample/Makefile-example.mk` demonstrates
+some of the more advanced options, whilst `Blink/Makefile`
+demonstrates the minimal settings required for various boards like the Uno,
+Nano, Mega, Teensy, ATtiny etc.
+
+You can either declare following variables in your project's makefile or set
+them as environmental variables.
+
+    ARDUINO_DIR – Directory where Arduino is installed
+    ARDMK_DIR – Directory where you have copied the makefile
+    AVR_TOOLS_DIR – Directory where avr tools are installed
+
+Keep in mind, that Arduino 1.5.x+ comes with it's own copy of avr tools which
+you can leverage in your build process here.
+
+To use Debian-provided system installed Arduino 1.0.5, set followings in
+~/.bashrc file:
+	export ARDUINO_DIR=/usr/share/arduino
+	export ARDMK_DIR=/usr/share/arduino
+	export AVR_TOOLS_DIR=/usr/lib/avr
+
+To use Upstream-based user installed Arduino. e.g. 1.8.12, install it to your
+home directory:
+ $ firefox https://www.arduino.cc/download_handler.php?f=/arduino-1.8.12-linux64.tar.xz
+   ...
+ $ tar --xz -xvf  ~/Downloads/arduino-1.8.12-linux64.tar.xz
+
+This creates arduino-1.8.12 directory in the user's home directory.  Then, set
+followings in  ~/.bashrc file:
+	export ARDUINO_DIR=/home/<username>/arduino-1.8.12
+	export ARDMK_DIR=/usr/share/arduino
+	export AVR_TOOLS_DIR=/usr/lib/avr
+
+Example of the project's make file:
+
+```make
+    BOARD_TAG     = mega2560
+    MONITOR_PORT  = /dev/ttyACM0
+```
+
+Usefull Variables:
+
+The list of all variables that can be overridden is available at
+arduino-mk-vars.md file.
+
+- `BOARD_TAG` - Type of board, for a list see boards.txt or `make show_boards`
+- `MONITOR_PORT` - The port where your Arduino is plugged in, usually
+  `/dev/ttyACM0` or `/dev/ttyUSB0` in Linux.
+- `ARDUINO_DIR` - Path to Arduino installation.
+- `ARDMK_DIR`   - Path where the `*.mk` are present. If you installed the
+  package, then it is usually `/usr/share/arduino`
+- `AVR_TOOLS_DIR` - Path where the avr tools chain binaries are present. If you
+  are going to use the binaries that came with Arduino installation, then you
+  don't have to set it. Otherwise set it realtive and not absolute.
+
+## Including Libraries
+
+You can specify space separated list of libraries that are needed for your
+sketch in the variable `ARDUINO_LIBS`.
+
+```make
+	ARDUINO_LIBS = Wire SoftwareSerial
+```
+
+The libraries will be searched for in the following places in the following
+order.
+
+- `/libraries` directory inside your sketchbook directory. Sketchbook directory
+  will be auto detected from your Arduino preference file. You can also manually
+  set it through `ARDUINO_SKETCHBOOK`.
+- `/libraries` directory inside your Arduino directory, which is read from
+  `ARDUINO_DIR`.
+
+The libraries inside user directories will take precedence over libraries
+present in Arduino core directory.
+
+## avrdude
+
+To upload compiled files, `avrdude` is used. This Makefile tries to find
+`avrdude` and it's config (`avrdude.conf`) below `ARDUINO_DIR`. If you like to
+use the one installed on your system instead of the one which came with Arduino,
+you can try to set the variables `AVRDUDE` and `AVRDUDE_CONF`. On a typical
+Linux system these could be set to
+
+```make
+      AVRDUDE      = /usr/bin/avrdude
+      AVRDUDE_CONF = /etc/avrdude.conf
+```
+
+## Teensy 3.x
+
+For Teensy 3.x support you must first install
+[Teensyduino](http://www.pjrc.com/teensy/teensyduino.html).
+
+See examples/BlinkTeensy for example usage.
+
diff --git a/debian/arduino-mk.links b/debian/arduino-mk.links
new file mode 100644
index 0000000..1fb43e6
--- /dev/null
+++ b/debian/arduino-mk.links
@@ -0,0 +1,2 @@
+usr/share/arduino/arduino-mk-vars.md usr/share/doc/arduino-mk/arduino-mk-vars.md
+
diff --git a/debian/arduino-mk.lintian-overrides b/debian/arduino-mk.lintian-overrides
new file mode 100644
index 0000000..e69360c
--- /dev/null
+++ b/debian/arduino-mk.lintian-overrides
@@ -0,0 +1,2 @@
+# This file is used by program to emit message: make help_vars
+arduino-mk: package-contains-documentation-outside-usr-share-doc usr/share/arduino/arduino-mk-vars.md
diff --git a/debian/rules b/debian/rules
index 7f63128..a408e23 100755
--- a/debian/rules
+++ b/debian/rules
@@ -6,5 +6,5 @@
 %:
 	dh $@
 
-get-orig-source:
-	uscan --download-current-version --rename
+override_dh_compress:
+	dh_compress -X.md
-- 
2.25.0

