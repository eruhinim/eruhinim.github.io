diff -Naur dh-make-perl-0.20/debian/changelog dh-make-perl-0.21/debian/changelog
--- dh-make-perl-0.20/debian/changelog	2005-10-25 22:07:39.000000000 +0800
+++ dh-make-perl-0.21/debian/changelog	2005-12-15 09:05:11.000000000 +0800
@@ -1,3 +1,10 @@
+dh-make-perl (0.21) unstable; urgency=low
+
+  * Add patch from Junji Sawada that allows recursive creation of dependencies
+    for the main module (Closes: #342751)
+
+ -- Gunnar Wolf <gwolf@debian.org>  Thu, 15 Dec 2005 09:03:19 +0800
+
 dh-make-perl (0.20) unstable; urgency=low
 
   * No longer ignores META.yml due to the silly oversight of yours
diff -Naur dh-make-perl-0.20/debian/control dh-make-perl-0.21/debian/control
--- dh-make-perl-0.20/debian/control	2005-03-30 00:58:44.000000000 +0800
+++ dh-make-perl-0.21/debian/control	2005-12-15 09:46:16.000000000 +0800
@@ -16,5 +16,6 @@
  package out of a perl package.  This works for most simple packages
  and is also useful for getting started with packaging perl modules.
  Given a perl package name, it can also automatically download it from
- CPAN.
+ CPAN. There is an additional script to recursively create Debian packages
+ for the dependencies of the module being packaged.
 
diff -Naur dh-make-perl-0.20/debian/copyright dh-make-perl-0.21/debian/copyright
--- dh-make-perl-0.20/debian/copyright	2003-09-01 01:51:24.000000000 +0800
+++ dh-make-perl-0.21/debian/copyright	2005-12-15 09:42:28.000000000 +0800
@@ -1,4 +1,9 @@
-dh-make-perl is Copyright (c) 2000 Paolo Molaro <lupus@debian.org>
+Copyright:
+
+Copyright (c) 2000 Paolo Molaro <lupus@debian.org>
+Copyright (C) 2005 Junji Sawada <junjis@dzeta,jp>
+
+Licence:
 
 You can do anything with it according to the GPL: look
 in /usr/share/common-licenses/GPL on your Debian system.
diff -Naur dh-make-perl-0.20/debian/rules dh-make-perl-0.21/debian/rules
--- dh-make-perl-0.20/debian/rules	2004-03-31 22:09:34.000000000 +0800
+++ dh-make-perl-0.21/debian/rules	2005-12-15 09:06:38.000000000 +0800
@@ -46,6 +46,8 @@
 	mkdir -p $(INST)/usr/bin
 	mkdir -p $(INST)/usr/share/dh-make-perl
 	cp dh-make-perl $(INST)/usr/bin
+	cp dh-make-perl-all $(INST)/usr/bin
+	cp make-apt-repository $(INST)/usr/bin
 	cp rules* $(INST)/usr/share/dh-make-perl
 	cp overrides $(INST)/usr/share/dh-make-perl
 
diff -Naur dh-make-perl-0.20/dh-make-perl dh-make-perl-0.21/dh-make-perl
--- dh-make-perl-0.20/dh-make-perl	2005-10-25 22:07:38.000000000 +0800
+++ dh-make-perl-0.21/dh-make-perl	2005-12-15 09:05:33.000000000 +0800
@@ -151,6 +151,8 @@
 my $debiandir;
 my $startdir = getcwd();
 my $dh_compat = 4;
+my $cachedir = '/var/cache/apt';
+my $sourceslist = '/etc/apt/sources.list';
 
 our %overrides;
 my $datadir = '/usr/share/dh-make-perl';
@@ -182,6 +184,8 @@
 	"install!" => \$install,
 	"notest" => \$notest,
 	"nometa" => \$nometa,
+	"cachedir=s" => \$cachedir,
+	"sourceslist=s" => \$sourceslist,
 	) || die <<"USAGE";
 Usage:
 $0 [ --build ] [ --install ] [ SOURCE_DIR | --cpan MODULE ]
@@ -584,7 +588,7 @@
 			print "Searching for $module package using apt-file.\n";
 			$module =~ s|::|/|g;
 
-			my @search = `apt-file search $module.pm`;
+			my @search = `apt-file search --cache $cachedir --sources-list $sourceslist $module.pm`;
 
 			# Regex's to search the return of apt-file to find the right pkg
 			my $ls  = '(?:lib|share)';
diff -Naur dh-make-perl-0.20/dh-make-perl-all dh-make-perl-0.21/dh-make-perl-all
--- dh-make-perl-0.20/dh-make-perl-all	1970-01-01 08:00:00.000000000 +0800
+++ dh-make-perl-0.21/dh-make-perl-all	2005-12-15 08:56:13.000000000 +0800
@@ -0,0 +1,76 @@
+#!/usr/bin/perl
+#
+# Copyright (C) 2005 Junji Sawada <junjis@dzeta,jp>, All Rights Reserved.
+#
+# dh-make-perl-all: make required debs from module dependency
+
+$CODENAME = 'sid';
+
+use Cwd;
+use File::Path;
+
+$APT_DIR = getcwd() . "/apt";
+$POOL_DIR = "$APT_DIR/pool";
+
+$CACHE_DIR = getcwd() . "/cache";
+$SOURCES_LIST = getcwd() . "/sources.list";
+
+if (scalar(@ARGV) == 0) {
+	print "Usage: $0 Module\n";
+	exit;
+}
+
+mkpath($POOL_DIR);
+
+mkpath($CACHE_DIR);
+system("cp /etc/apt/sources.list $SOURCES_LIST");
+open(FH, ">>$SOURCES_LIST");
+print FH "deb file:$APT_DIR $CODENAME main\n";
+close(FH);
+system("apt-file update --cache $CACHE_DIR --sources-list $SOURCES_LIST");
+
+$module = shift;
+
+@modules = ($module);
+while (scalar(@modules) != 0) {
+	system("dh-make-perl --build --notest --cachedir $CACHE_DIR --sourceslist $SOURCES_LIST --cpan $modules[0] 2>&1 | tee build.log");
+
+	#check whether non-debian module is needed
+	$need_non_debian = 0;
+	open(FH, "<build.log");
+	while (<FH>) {
+		if (/Needs the following modules for which there are no debian packages available: ([^\n]+)/) {
+			$need_modules = $1;
+
+			#remove directory for next dh-make-perl
+			$fail_module = $modules[0];
+			$fail_module =~ s/::/-/g;
+			system("rm -r $fail_module*");
+
+			#append needed modules
+			@modules = (trim(split(/,/, $need_modules)), @modules);
+			$need_non_debian = 1;
+			last;
+		}
+	}
+	close(FH);
+
+	if (!$need_non_debian) {
+		shift(@modules);
+		system("mv *.deb $POOL_DIR");
+		system("`dirname $0`/make-apt-repository");
+		system("rm build.log");
+	}
+}
+
+sub trim {
+	my @out = @_;
+	for (@out) {
+		s/^\s+//;
+		s/\s+$//;
+	}
+	return wantarray ? @out : $out[0];
+}
+
+system("rm -f sources.list");
+system("rm -rf $CACHE_DIR");
diff -Naur dh-make-perl-0.20/make-apt-repository dh-make-perl-0.21/make-apt-repository
--- dh-make-perl-0.20/make-apt-repository	1970-01-01 08:00:00.000000000 +0800
+++ dh-make-perl-0.21/make-apt-repository	2005-12-15 08:56:22.000000000 +0800
@@ -0,0 +1,36 @@
+#! /bin/sh
+#
+# Copyright (C) 2005 Junji Sawada <junjis@dzeta,jp>, All Rights Reserved.
+
+CODENAME=sid
+
+APT_DIR=$(pwd)/apt
+DISTS_DIR=$APT_DIR/dists/$CODENAME
+PACKAGES_DIR=$DISTS_DIR/main/binary-$(dpkg --print-architecture)
+POOL_DIR=$APT_DIR/pool
+
+CACHE_DIR=$(pwd)/cache
+SOURCES_LIST=$(pwd)/sources.list
+
+if [ "$1" = "-F" ]; then
+	fullmake=1
+fi
+
+if [ ! -d $PACKAGES_DIR ]; then
+	mkdir -p $PACKAGES_DIR
+fi
+if [ ! -d $POOL_DIR ]; then
+	mkdir -p $POOL_DIR
+fi
+
+apt-ftparchive contents $POOL_DIR | \
+	gzip -c9 > $DISTS_DIR/Contents-$(dpkg --print-architecture).gz
+apt-file update --cache $CACHE_DIR --sources-list $SOURCES_LIST
+
+if [ -n "$fullmake" ]; then
+	apt-ftparchive packages $POOL_DIR > $PACKAGES_DIR/Packages
+	cat $PACKAGES_DIR/Packages | gzip -c9 > $PACKAGES_DIR/Packages.gz
+	apt-ftparchive -o APT::FTPArchive::Release::Codename=$CODENAME release \
+		$DISTS_DIR > $DISTS_DIR/Release
+	gpg --sign -ba -o $DISTS_DIR/Release.gpg $DISTS_DIR/Release
+fi
