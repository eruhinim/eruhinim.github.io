From: Tomasz Buchert <tomasz.buchert@inria.fr>
Date: Sun, 15 Feb 2015 20:20:54 +0100
Subject: proof-of-concept patch

---
 dnstop.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/dnstop.c b/dnstop.c
index 57e12cc..e4b8f6d 100644
--- a/dnstop.c
+++ b/dnstop.c
@@ -1901,7 +1901,7 @@ main(int argc, char *argv[])
     if (readfile_state) {
 	pcap = pcap_open_offline(device, errbuf);
     } else {
-	pcap = pcap_open_live(device, PCAP_SNAPLEN, promisc_flag, 1, errbuf);
+	pcap = pcap_open_live(device, PCAP_SNAPLEN, promisc_flag, 50, errbuf);
     }
     if (NULL == pcap) {
 	fprintf(stderr, "pcap_open_*: %s\n", errbuf);
@@ -1934,7 +1934,7 @@ main(int argc, char *argv[])
      * workaround and dnstop does not require non-blocking, we'll won't
      * check the return status.
      */
-    pcap_setnonblock(pcap, 1, errbuf);
+    /* pcap_setnonblock(pcap, 1, errbuf); */
     switch (pcap_datalink(pcap)) {
     case DLT_EN10MB:
 	handle_datalink = handle_ether;
@@ -1993,8 +1993,8 @@ main(int argc, char *argv[])
 		 * packets to process.  Thus, we always ignore its return value
 		 * and just call pcap_dispatch() anyway.
 		 */
-		if (0 == readfile_state)	/* interactive */
-		    pcap_select(pcap, 1, 0);
+		/* if (0 == readfile_state)
+                   pcap_select(pcap, 1, 0); */
 		x = pcap_dispatch(pcap, 50, handle_pcap, NULL);
 	    }
 	    if (0 == x && 1 == readfile_state) {
