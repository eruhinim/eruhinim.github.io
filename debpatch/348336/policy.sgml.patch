--- debian-policy-3.6.2.2/policy.sgml	2005-12-24 22:41:09.000000000 +0100
+++ patched/policy.sgml	2006-01-12 09:05:04.000000000 +0100
@@ -6961,31 +6961,57 @@
 	  </p>
 
 	  <p>
-	    If it is desirable for two or more related packages to
-	    share a configuration file <em>and</em> for all of the
-	    related packages to be able to modify that configuration
-	    file, then the following should be done:
+            Sometimes two or more packgages need to be able to modify the
+            same configuration file. One such case is were related packages
+            share a configuration file (e.g. bash and other bourn compatible
+            shells share /etc/profile). A second case are configuration
+            packages attempting to configure a standard Debian system to
+            better suit a specific purpose or target-group. The specific
+            purpose or target-group adressed by such a package often allows
+            more narrow configuration choices to be made that wouldn't be
+            suited as the default configuration of a package.
+          <p>
+
+          <p>
+            When more then one packages needs to be able to modify a
+            configuration file the following should be done:
 	    <enumlist compact="compact">
 	      <item>
-		  One of the related packages (the "owning" package)
-		  will manage the configuration file with maintainer
-		  scripts as described in the previous section.
-	      </item>
-	      <item>
-		  The owning package should also provide a program
-		  that the other packages may use to modify the
-		  configuration file.
-	      </item>
-	      <item>
-		  The related packages must use the provided program
-		  to make any desired modifications to the
-		  configuration file.  They should either depend on
-		  the core package to guarantee that the configuration
-		  modifier program is available or accept gracefully
-		  that they cannot modify the configuration file if it
-		  is not.  (This is in addition to the fact that the
-		  configuration file may not even be present in the
-		  latter scenario.)
+		One of the packages (the "owning" package) will manage
+                the configuration file with maintainer scripts as
+                described in the previous section.
+	      </item>
+	      <item>
+                <p>
+                  The owning package should provide a mechanism through
+                  which the other packages can modify the configuration.
+                </p>
+
+                <p>
+                  The preferred way to do this is by modularizing the
+                  configuration (both /etc/X11/Xsession.d and
+                  /etc/apache/conf.d are examples of such an approach).
+                  The big benefit of modularization is that the origin of
+                  each bit of configuration is clearly identified and
+                  delineated, which allows each package to manage it's own
+                  configuration bits independendly. It also removes the
+                  need to develop and maintain a configuration modifier
+                  program.
+                </p>
+
+                <p>
+                  When a modularized configuration is impossible a
+                  configuration modifier program should be provided for
+                  the non-owning packages to use.
+                </p>                             
+	      </item>
+	      <item>
+                  The packages that don't own the configuration file must
+                  use the provided mechanism to affect any changes to the
+                  configuration. They should either depend on the owning
+                  package to guarantee that the modify mechanism is
+                  available, or accept gracefully when it isn't (in which
+                  case the configuration file may not even be present).
 	      </item>
 	    </enumlist>
 	  </p>
