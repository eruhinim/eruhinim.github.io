--- tape.c.orig	2011-05-17 21:52:02.000000000 +1000
+++ tape.c.debugandhack	2011-05-17 21:56:18.000000000 +1000
@@ -795,7 +795,28 @@
 pid_t
 fork_clone_io(void)
 {
-	return syscall(SYS_clone, CLONE_ARGS);
+   /* az */
+   fprintf(stderr,"pid %d before clone, ppid %d, cloneargs 0x%0x\n",
+	   getpid(),getppid(),CLONE_ARGS);
+   pid_t res,parent;
+   parent=getppid();		/* az hackety hack... */
+
+   res=syscall(SYS_clone, CLONE_ARGS);
+   fprintf(stderr,"pid %d post clone, clone res %d, ppid %d\n",
+	   getpid(),res,getppid());
+
+   /* as per clone call manpage: caching! */
+   fprintf(stderr,"pid %d, getpid syscall says: %d\n",
+	   getpid(),syscall(SYS_getpid));
+   
+   fprintf(stderr,"last pid %d\n",
+	   getpid());
+
+   /* az: clone manpage doesn't say jack about what the 
+      child receives, but it's NOT ZERO on sparc. however, it seems the
+      ppid is updated and trustworthy - so let's use that... */
+   return parent==getppid()?res:0;
+
 }
 #endif
 #endif
