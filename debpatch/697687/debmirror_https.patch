--- debmirror-2.14/debmirror	2012-06-26 20:28:46.000000000 -0300
+++ debmirror_https/debmirror	2013-01-08 04:20:25.378316228 -0200
@@ -103,7 +103,7 @@
 =item B<--method>=I<method>
 
 Specify the method to download files. Currently, supported methods are
-B<ftp>, B<http>, and B<rsync>.
+B<ftp>, B<http>, B<https>, and B<rsync>.
 
 =item B<--passive>
 
@@ -402,6 +402,11 @@
 will automatically create a new symlink S<suite -E<gt> codename> (immediately
 after moving meta files in place). This conversion should only be needed once.
 
+=item B<--self-signed>=I<number>
+
+By default debmirror checks if the certificate (https) is self-signed 
+or not. If host certificate is self-signed, you have disable the verification ("0"). 
+
 =item B<--debmarshal>
 
 On each pull, keep the repository meta data from dists/* in a numbered
@@ -581,6 +586,7 @@
 our $allow_dist_rename=0;
 our $debmarshal=0;
 our $slow_cpu=0;
+	our $self_signed=1;
 our $check_gpg=1;
 our $new_mirror=0;
 my @errlog;
@@ -692,6 +698,7 @@
 	   'allow-dist-rename'      => \$allow_dist_rename,
 	   'debmarshal'             => \$debmarshal,
 	   'slow-cpu'               => \$slow_cpu,
+       'self-signed'            => \$self_signed,
 	   'help'                   => \$help,
 ) or usage;
 usage if $help;
@@ -844,6 +851,16 @@
     return;
   };
 
+  /^https$/ && do {
+    $ua = LWP::UserAgent->new(keep_alive => 1, ssl_opts => { 
+	  verify_hostname => $self_signed });
+    $ua->timeout($timeout);
+    $ua->proxy('https', $ENV{http_proxy}) if $ENV{https_proxy};
+    $ua->proxy('https', $proxy) if $proxy;
+    $ua->show_progress($progress);
+    return;
+  };
+
   /^ftp$/ && do {
     if ($proxy || $ENV{ftp_proxy}) {
       $ua = LWP::UserAgent->new;
@@ -1238,7 +1255,8 @@
 batch_get();
 
 sub batch_get {
-  if ($download_method eq 'ftp' || $download_method eq 'http') {
+  if ($download_method eq 'ftp' || $download_method eq 'http' || 
+	  $download_method eq 'https') {
     my $dirname;
     my $i=0;
     foreach my $file (sort keys %files) {
@@ -1577,7 +1595,8 @@
   $tdir=$tempdir unless $tdir;
   chdir($tdir) or die "unable to chdir($tdir): $!\n";
 
-  if ($download_method eq 'ftp' || $download_method eq 'http') {
+  if ($download_method eq 'ftp' || $download_method eq 'http' || 
+	  $download_method eq 'https') {
     $res=$ftp ? ftp_get($file) : http_get($file);
     $res=$res && check_lists($file);
     if (-f $file && !$res) {
