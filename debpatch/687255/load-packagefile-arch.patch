=== modified file 'apt-pkg/deb/debindexfile.cc'
--- apt-pkg/deb/debindexfile.cc	2012-06-16 17:55:43 +0000
+++ apt-pkg/deb/debindexfile.cc	2012-09-11 07:21:28 +0000
@@ -340,7 +340,7 @@
       FileFd Rel(ReleaseFile,FileFd::ReadOnly);
       if (_error->PendingError() == true)
 	 return false;
-      Parser.LoadReleaseInfo(File,Rel,Section);
+      Parser.LoadReleaseInfo(File,Rel,Section,Architecture);
    }
    
    return true;

=== modified file 'apt-pkg/deb/deblistparser.cc'
--- apt-pkg/deb/deblistparser.cc	2012-07-09 15:42:25 +0000
+++ apt-pkg/deb/deblistparser.cc	2012-09-11 08:03:10 +0000
@@ -779,13 +779,16 @@
 // ---------------------------------------------------------------------
 /* */
 bool debListParser::LoadReleaseInfo(pkgCache::PkgFileIterator &FileI,
-				    FileFd &File, string component)
+				    FileFd &File, string component, string architecture)
 {
    // apt-secure does no longer download individual (per-section) Release
    // file. to provide Component pinning we use the section name now
    map_ptrloc const storage = WriteUniqString(component);
    FileI->Component = storage;
 
+   map_ptrloc const storage_arch = WriteUniqString(architecture);
+   FileI->Architecture = storage_arch;
+
    // FIXME: Code depends on the fact that Release files aren't compressed
    FILE* release = fdopen(dup(File.Fd()), "r");
    if (release == NULL)
@@ -830,7 +833,7 @@
       ++lineEnd;
 
       // which datastorage need to be updated
-      enum { Suite, Component, Version, Origin, Codename, Label, None } writeTo = None;
+      enum { Suite, Component, Version, Origin, Codename, Label, Architecture, None } writeTo = None;
       if (buffer[0] == ' ')
 	 ;
       #define APT_PARSER_WRITETO(X) else if (strncmp(#X, buffer, len) == 0) writeTo = X;
@@ -840,6 +843,7 @@
       APT_PARSER_WRITETO(Origin)
       APT_PARSER_WRITETO(Codename)
       APT_PARSER_WRITETO(Label)
+      APT_PARSER_WRITETO(Architecture)
       #undef APT_PARSER_WRITETO
       #define APT_PARSER_FLAGIT(X) else if (strncmp(#X, buffer, len) == 0) \
 	 pkgTagSection::FindFlag(FileI->Flags, pkgCache::Flag:: X, dataStart, lineEnd);
@@ -879,6 +883,7 @@
 	 case Origin: FileI->Origin = storage; break;
 	 case Codename: FileI->Codename = storage; break;
 	 case Label: FileI->Label = storage; break;
+	 case Architecture: FileI->Architecture = storage; break;
 	 case None: break;
 	 }
       }

=== modified file 'apt-pkg/deb/deblistparser.h'
--- apt-pkg/deb/deblistparser.h	2011-12-13 00:22:38 +0000
+++ apt-pkg/deb/deblistparser.h	2012-09-11 07:20:30 +0000
@@ -71,7 +71,7 @@
    virtual bool Step();
    
    bool LoadReleaseInfo(pkgCache::PkgFileIterator &FileI,FileFd &File,
-			std::string section);
+			std::string section, std::string architecture);
    
    static const char *ParseDepends(const char *Start,const char *Stop,
 			    std::string &Package,std::string &Ver,unsigned int &Op,

