From b2d8128f499d2be342618243104ac71c7c24d036 Mon Sep 17 00:00:00 2001
From: Osamu Aoki <osamu@debian.org>
Date: Tue, 1 Sep 2015 13:19:31 +0000
Subject: [PATCH 1/8] Add POD to uscan.pl

 * Newly formatted manpage by POD.  Closes: #797787
---
 scripts/uscan.pl | 965 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 965 insertions(+)
 mode change 100755 => 100644 scripts/uscan.pl

diff --git a/scripts/uscan.pl b/scripts/uscan.pl
old mode 100755
new mode 100644
index 33f3ad4..20ef97f
--- a/scripts/uscan.pl
+++ b/scripts/uscan.pl
@@ -22,6 +22,971 @@
 # You should have received a copy of the GNU General Public License
 # along with this program. If not, see <https://www.gnu.org/licenses/>.
 
+=pod
+
+=head1 NAME
+
+uscan - scan/watch upstream sources for new releases of software
+
+=head1 SYNOPSIS
+
+B<uscan> [I<options>] [I<path>]
+
+=head1 DESCRIPTION
+
+For the basic usage, B<uscan> is executed without any arguments from the root
+of the Debianized source tree where you see the F<debian/> directory.
+Then typically the following happens:
+
+=over
+
+=item * B<uscan> downloads the upstream tarball with the highest version from
+the remote URL specified in F<debian/watch>
+
+=item * B<uscan> reads the first entry in F<debian/changelog> to determine the
+source package name I<spkg> and the last upstream version. 
+
+=item * B<uscan> saves the downloaded tarball to the parent B<../> directory:
+I<< ../<upkg>-<uversion>.tar.gz >>
+
+=item * B<uscan> invokes B<mk-origtargz> to create the source tarball: I<<
+../<spkg>_<sversion>.orig.tar.gz >>
+
+=item * B<uscan> invokes B<uupdate> to create the Debianized source tree: I<<
+../<spkg>-<sversion>/* >>
+
+=back
+
+Here, B<uscan> allows extensive flexibility.  The upstream tarball in he remote
+URL can be F<http://www.example.org/download/foo-v1.0.tar.gz>, the downloaded
+tarball can be F<../foo-1.0.tar.gz>, the source tarball can be
+F<../bar_2.1.0.orig.tar.gz>, and the Debianized source tree can be located at
+F<../bar-2.1.0>.
+
+Note: For simplicity, the compression method used in examples is B<gzip> with
+B<.gz> suffix.  Other methods such as B<xz>, B<bzip2>, and B<lzma> may also be
+used.
+
+=head1 FORMAT OF THE WATCH FILE
+
+The current version 3 format of F<debian/watch> can be summarized as follows:
+
+=over
+
+=item * Leading spaces and tabs are dropped.
+
+=item * Empty lines are dropped. 
+
+=item * A line started by B<#> (hash) is a comment line and dropped.
+
+=item * Single B<\> (back slash) at the end of a line is dropped and the the
+next line is concatenated after removing leading spaces and tabs.
+
+=item * The first non-comment line is:
+
+=over
+
+=item B<version=3>
+
+=back
+
+This is required.
+
+=item * The second non-comment line specifies the rule for the candidate
+upstream tarball URL and is typically in the following format:
+
+=over
+
+=item [B<opts="> I<...> B<">] \
+
+=item B<http://>I<URL> \
+
+=item I<matching-pattern> \
+
+=item [B<debian> [B<uupdate>]]
+
+=back
+
+Here, lines are folded with B<\> for readability.  You may write this in a
+single line.  A space before each B<\> is significant.  B<[> and B<]> are there
+to mark optional parts and should not be typed.
+
+The last 2 entries, B<debian> and B<uupdate>, are completely optional.  If these
+are missing, these are the default values for the Debian non-native source package.
+
+There are 2 other F<debian/watch> formats which concatnate B<http://>I<URL> and
+I<matching-pattern> with B</>.  One for HTTP and another for FTP.  See
+L<ADVANCED FEATURES>.
+
+=back
+
+=head1 TYPICAL EXECUTION
+
+Let's describe step-by-step how B<uscan> processes this typical F<debian/watch>
+.
+
+B<uscan> reads the per-site option specified in B<opts="> I<...> B<"> to
+customize its behavior.  They are:
+
+=over
+
+=item * The mangling rules which apply the I<rule> to the pertinent I<string>.
+They behave as if a Perl command "I<$target_string> B<~=> I<rule>" is executed.
+
+=over
+
+=item * B<dversionmangle=>I<rule> for the last upstream version string found in F<debian/changelog>
+
+=item * B<uversionmangle=>I<rule> for the candidate upstream version strings
+
+=item * B<versionmangle=>I<rules> as a syntactic shorthand for:
+
+B<uversionmangle=>I<rules>B<,dversionmangle=>I<rules>
+
+=item * B<filenamemangle=>I<rule> for the downloaded tarball filename string
+
+=item * B<downloadurlmangle=>I<rule> for the candidate upstream tarball URL string
+
+=item * B<pgpsigurlmangle=>I<rule> for the candidate upstream signature file URL string
+
+=back
+
+=item * B<pasv> option for the FTP connection to use PASV mode.  This is
+recommended for most cases using the FTP connection.
+
+=item * B<repacksuffix> option for the version suffix used by the repackaged
+source tarball
+
+=back
+
+See L<Details of per-site options> for the details.
+
+B<uscan> reads the first entry in F<debian/changelog> to determine the source
+package name and the last upstream version. 
+
+For example, if the first entry of F<debian/changelog> may be:
+
+=over
+
+=item I<sourcepackage> (B<3:2.03+dfsg1-4>) unstable; urgency=low
+
+=back
+
+then, the source package name is I<sourcepackage> and the last upstream version
+is determined to be B<2.03+dfsg1> without the epoch and the Debian revision.
+
+If the B<dversionmangle> rule exists, the last upstream version is updated by
+applying this rule to it.  For example, if the last upstream version is
+B<2.03+dfsg1> indicating the source tarball is repackaged, the suffix B<+dfsg1>
+is removed by the string substitution B<s/\+dsfg\d*$//> to make the
+(dversionmangled) last upstream version B<2.03> and it is compared to the
+candidate upstream tarballs such as B<2.03>, B<2.04>, ... .  Thus, set this
+rule as:
+
+=over
+
+=item  B<opts="dversionmangle=s/\+dsfg\d*$//">
+
+=back
+
+B<uscan> downloads a web page from B<http://>I<URL> specified in
+F<debian/watch>.  
+
+=over
+
+=item * If the directory name part of I<URL> has no parentheses, B<(> and B<)>,
+it is taken as verbatim.
+
+=item * If the directory name part of I<URL> has parentheses, B<(> and B<)>,
+then B<uscan> recursively searches all possible directories to find a page for
+the newest version.
+
+=back
+
+For example, this B<http://>I<URL> may be specified as:
+
+=over
+
+=item * B<http://www.example.org/DL(.+)/>
+
+=back
+
+Please note the trailing B</> in the above.
+
+The downloaded web page is scanned for links defined in the B<< <a href=" >>
+I<...> B<< "> >> tag to locate the candidate upstream tarball URLs.  These
+candidate upstream tarball URLs are matched by the Perl regex pattern
+I<matching-pattern> such as B<DL-(?:[\d\.]+?)/upstreamname-(.+)\.tar\.gz> to
+narrow down the candidates.  This pattern match needs to be anchored at the
+beginning and the end.  For example, candidate URLs may be:
+
+=over
+
+=item * B<DL-2.02/upstreamname-2.02.tar.gz>
+
+=item * B<DL-2.03/upstreamname-2.03.tar.gz>
+
+=item * B<DL-2.04/upstreamname-2.04.tar.gz>
+
+=back
+
+Here the matching string of B<(.+)> in I<matching-pattern> is considered as the
+candidate upstream version.  If there are multiple matching strings of
+capturing patterns in I<matching-pattern>, they are all concatenated with B<.>
+(period) to form the candidate upstream version.  Make sure to use the
+non-capturing regex such as B<(?:[\d\.]+?)> instead for the variable text
+matching part unrelated to the version.  
+
+For example, candidate upstream versions may be:
+
+=over
+
+=item * B<2.02>
+
+=item * B<2.03>
+
+=item * B<2.04>
+
+=back
+
+The downloaded tarball filename is set to the same as its filename in the
+remote URL.
+
+If the B<uversionmangle> rule exists, the candidate upstream versions are
+updated by applying this rule to them. (This rule may be useful if the
+upstream tarball needs to be repacked.)
+
+The upstream tarball URL corresponding to the newest (uversionmangled) candidate
+upstream version newer than the (dversionmangled) last upstream version is
+selected to be the candidate upstream tarball URL.
+
+Here, the order of the version is decided by B<dpkg --compare-versions>.
+
+If the B<filenamemangle> rule exists, the downloaded tarball filename is
+updated by applying this rule to it. (This rule may not be significant for
+modern use cases.  B<mk-origtargz> takes care proper naming of the source
+tarball based on the source package name in F<debian/changelog> without relying
+on the filename of the remote URL.  B<uupdate> is invoked by B<uscan> with
+B<--no-symlink> option and does not rename the tarball anymore.)
+
+If the candidate upstream tarball URL is a relative URL, it is converted to a
+absolute URL using the base URL of the web page.  If the B<< <base href=" >> I<
+... > B<< "> >> tag exists in the web page, the candidate upstream tarball URL
+is converted to the absolute URL using the specified base URL in the base tag,
+instead.
+
+If the B<downloadurlmangle> rule exists, the candidate upstream tarball URL is
+updated by applying this rule to it. (This is useful for some sites with the
+obfuscated download URL.)
+
+B<uscan> downloads the candidate upstream tarball to the parent B<../>
+directory.  For example, the downloaded file may be:
+
+=over
+
+=item * F<../upstreamname-2.04.tar.gz>
+
+=back
+
+Let's call this B<2.04> in the above example generically as I<version> in the
+following.
+
+If the B<pgpsignurlmangle> rule exists, the upstream signature file URL is
+generated by applying this rule to the (downloadurlmangled) candidate upstream
+tarball URL and the signnature file is tried to be downloaded.
+
+Otherwise, 4 common possible upstream signature file URLs are tried by
+appending 4 common suffixes B<.asc>, B<.gpg>, B<.pgp>, and B<.sig> to the
+(downloadurlmangled) candidate upstream tarball URL and at least one signature
+file is tried to be downloaded.
+
+If the downloaded signature file exists, the downloaded upstream tarball is
+checked for its authenticity using the downloaded signature file by using the
+keyring F<debian/upstream/signing-key.pgp> or the armored keyring
+F<debian/upstream/signing-key.asc>. If it is not valid, or not made by one of
+the listed keys, B<uscan> will report an error.
+
+B<uscan> invokes B<mk-origtargz> to create the source tarball properly named
+for the source package with B<.orig.> in its filename.
+
+=over
+
+=item case A: package the upstream tarball as is
+
+B<mk-origtargz> creates a symlink
+B<../>I<sourcename>B<_>I<version>B<.orig.tar.gz> linked to the downloaded local
+upstream tarball. Here, I<sourcename> is the source package name found in
+F<debian/changelog>. For example, if I<sourcename> is B<foo>, the generated
+symlink may be:
+
+=over
+
+=item * F<../foo_2.04.orig.tar.gz> -> F<upstreamname-2.04.tar.gz> (as is)
+
+=back
+
+Usually, there is no need to set up B<opts="dversionmangle=> I<...> B<"> for
+this case.
+
+=item case B: package the upstream tarball aftre removing non-DFSG files
+
+B<mk-origtargz> checks the filename glob of the B<Files-Excluded> stanza in the
+first section of F<debian/copyright>, removes matching files to create a
+repacked upstream tarball.  Normally, the repacked upstream tarball is renamed
+with I<suffix> to B<../>I<sourcename>B<_>I<version>I<suffix>B<.orig.tar.gz>
+using the B<repacksuffix> option.    Here I<version> is updated to be
+I<version>I<suffix>. 
+
+The removal of files is required if files are not DFSG-compliant.  For such
+case, B<+dfsg1> is used as I<suffix>.
+
+So the combined per-site options are set as
+B<opts="dversionmangle=s/\+dsfg\d*$// ,repacksuffix=+dfsg1">, instead.
+
+For example, the repacked upstream tarball may be:
+
+=over
+
+=item * F<../foo_2.04+dfsg1.orig.tar.gz> (repackaged)
+
+=back
+
+=back
+
+B<uscan> normally invokes "B<uupdate> B<--no-symlink --upstream-version>
+I<version> B<../>I<sourcename>B<_>I<version>B<.orig.tar.gz>".
+
+Please note that B<--no-symlink> option is used here since B<mk-origtargz> is
+invoked to make B<*.orig.tar.gz> file ready to be used for the source package.
+B<uscan> picks I<sourcename> from F<debian/changelog> so the tarball filename
+of the actual remote URL does not matter for packaging.
+
+It creates the new upstream source tree under the
+B<../>I<sourcename>B<->I<version> directory and Debianize it leveraging the
+last package contents.
+
+=head1 ADVANCED FEATURES
+
+B<uscan> has many other enhanced features which are skipped in the above
+section for the simplicity.  Let's check their highlights. 
+
+B<uscan> actually scans not just the current directory but all its
+subdirectories looking for F<debian/watch> to process them all. 
+See the below section L<Directory name checking>.
+
+B<uscan> can be executed with I<path> as its argument to change the starting
+directory of search from the current directory to I<path> .
+
+B<uscan> can be used to assess the health of the package by executing with
+B<--report> option to output a human readable report without downloading the
+upstream tarball.
+
+B<uscan> can be used to assess the health of the package by executing
+with B<--dehs> option to output an XML data suitable for the DEHS system.
+
+B<http://>I<URL> part in the second non-comment line can be B<https://>I<URL>
+to use the SSL/TLS protocol, instead
+
+The second non-comment line of F<debian/watch> can be in the alternative
+formats.
+
+=over
+
+=item * If I<matching-pattern> does not contain B</>, a short hand format may
+be used:
+
+=over
+
+=item  [B<opts="> I<...> B<">] \
+
+=item  B<http://>I<URL/matching-pattern> \
+
+=item  [B<debian> [B<uupdate>]]
+
+=back
+
+Here, B<http://>I<URL> is accessed for the web page.
+
+=item * If the FTP protocol is used instead of HTTP/HTTPS, the following format should be used:
+
+=over
+
+=item  [B<opts="> I<...> B<">] \
+
+=item  B<ftp://>I<URL/matching-pattern> \
+
+=item  [B<debian> [B<uupdate>]]
+
+=back
+
+It is good idea to set B<opts=pasv> here which makes B<uscan> try the passive FTP protocol first.
+
+=back
+
+The optional B<debian> string in the second non-comment line of F<debian/watch>
+means to obtain the last upstream version from F<debian/changelog>.  If this is
+replaced by a specific version number such as B<1.0.2>, B<1.0.2> is used as the
+last upstream version, instead.
+
+The optional B<uupdate> string in the second non-comment line of
+F<debian/watch> means to execute B<uupdate> with options after processing this
+line.  For example, you can customize this by replacing B<uupdate> by
+F<debian/myuupdate> with the following content.
+
+  #!/bin/sh -e
+  # called with '--upstream-version' <version> <file>
+  uupdate "$@" --no-symlink
+  package=`dpkg-parsechangelog | sed -n 's/^Source: //p'`
+  cd ../$package-$2
+  debuild
+
+Then B<uscan> invokes "I<debian/myuupdate> B<--upstream-version> I<version>
+B<../>I<sourcename>B<_>I<version>B<.orig.tar.gz>" instead to perform a fully
+automatic upstream update of Debian binary packages.
+
+Note that we don't call B<dupload> or B<dput> automatically, as the maintainer
+should perform sanity checks on the software before uploading it to Debian.
+
+See L<OPTIONS> and L<CONFIGURATION VARIABLES> for other variations.
+
+=head1 EXAMPLE
+
+Here are the typical F<debian/watch> files.
+
+The existance and non-existance of a space before tailing B<\> (back slash) are
+significant.
+
+=head2 HTTP site (basic)
+
+For the basic HTTP site:
+
+  http://example.com/~user/release/foo.html \
+  files/foo-([\d\.]*).tar.gz
+
+=head2 HTTP site (flexible)
+
+For the maximum flexibility of upstream tarball formats:
+
+  http://example.com/example-(\d[\d.]*)\.\
+  (?:zip|tgz|tbz2|txz|tar\.(?:gz|bz2|xz))
+
+=head2 HTTP site (recursive directory scanning)
+
+For recursive directory scanning:
+
+  http://tmrc.mit.edu/mirror/twisted/Twisted/(\d\.\d)/ \
+  Twisted-([\d\.]*)\.tar\.bz2
+
+or in one string style variant
+
+  http://tmrc.mit.edu/mirror/twisted/\
+  Twisted/(\d\.\d)/Twisted-([\d\.]*)\.tar\.bz2
+
+Here, the website should be able to handle requests to:
+
+  http://tmrc.mit.edu/mirror/twisted/Twisted/
+
+=head2 HTTP site (alternative)
+
+For one string style:
+
+  http://www.cpan.org/modules/by-module/Text/Text-CSV_XS-(.+)\.tar\.gz
+
+This is the same as
+
+  http://www.cpan.org/modules/by-module/Text Text-CSV_XS-(.+)\.tar\.gz
+
+=head2 HTTP site (sf.net)
+
+For SourceForge based projects, qa.debian.org runs a redirector which allows a
+simpler form of URL. The format below will automatically be rewritten to use
+the redirector.
+
+  http://sf.net/audacity/audacity-src-(.+)\.tar\.gz
+
+=head2 HTTP site (github.com)
+
+For GitHub projects, you can use the tags or releases page.  The archive URLs
+use only the version as the filename.  You can rename the downloaded upstream
+tarball into standard I<project>B<->I<version>B<.tar.gz> using
+B<filenamemangle>:
+
+  opts="filenamemangle=\
+  s/(?:.*?)?v?(\d[\d.]*)\.tar\.gz/<project>-$1.tar.gz/" \
+  https://github.com/<user>/<project>/tags \
+  (?:.*?/)?v?(\d[\d.]*)\.tar\.gz
+
+=head2 HTTP site (code.google.com)
+
+For Google Code projects, you should use the downloads page like this:
+
+  https://code.google.com/p/<project>/downloads/list?can=1 \
+  .*/<project>-(\d[\d.]*)\.tar\.gz
+
+=head2 HTTP site (funny version)
+
+For a site which has funny version numbers, the parenthesized groups will be
+joined with B<.> (period) to make a sanitized version number.
+
+  http://www.site.com/pub/foobar/foobar_v(\d+)_(\d+)\.tar\.gz
+
+=head2 HTTP site (DFSG)
+
+The upstream part of the Debian version number can be
+mangled:
+
+  opts="dversionmangle=s/\+dfsg\d*$//,repacksuffix=+dfsg1" \
+  http://some.site.org/some/path/foobar-(.+)\.tar\.gz
+
+=head2 HTTP site (filenamemangle)
+
+The filename is found by taking the last component of the URL and
+removing everything after any '?'.  If this would not make a usable
+filename, use B<filenamemangle>.  For example,
+F<< <A href="http://foo.bar.org/dl/?path=&dl=foo-0.1.1.tar.gz"> >>
+could be handled as:
+
+  opts=filenamemangle=s/.*=(.*)/$1/ \
+  http://foo.bar.org/dl/\?path=&dl=foo-(.+)\.tar\.gz
+
+
+F<< <A href="http://foo.bar.org/dl/?path=&dl_version=0.1.1"> >>
+could be handled as:
+
+  opts=filenamemangle=s/.*=(.*)/foo-$1\.tar\.gz/ \
+  http://foo.bar.org/dl/\?path=&dl_version=(.+)
+
+=head2 HTTP site (downloadurlmangle)
+
+The option B<downloadurlmangle> can be used to mangle the URL of the file
+to download.  This can only be used with B<http://> URLs.  This may be
+necessary if the link given on the web page needs to be transformed in
+some way into one which will work automatically, for example:
+
+  opts=downloadurlmangle=s/prdownload/download/ \
+  http://developer.berlios.de/project/showfiles.php?group_id=2051 \
+  http://prdownload.berlios.de/softdevice/vdr-softdevice-(.+).tgz
+
+=head2 FTP site (basic):
+
+  opts=pasv \
+  ftp://ftp.tex.ac.uk/tex-archive/web/c_cpp/cweb/cweb-(.+)\.tar\.gz
+
+=head2 FTP site (regex special characters):
+
+  opts=pasv \
+  ftp://ftp.worldforge.org/pub/worldforge/libs/\
+  Atlas-C++/transitional/Atlas-C\+\+-(.+)\.tar\.gz
+
+Please note that this URL is connected to be I< ... >B<libs/Atlas-C++/>I< ... >
+. For B<++>, the first one in the directory path is verbatim while the one in
+the filename is escaped by B<\>.
+
+=head2 FTP site (funny version)
+
+This is another way of handling site with funny version numbers,
+this time using mangling.  (Note that multiple groups will be
+concatenated before mangling is performed, and that mangling will
+only be performed on the basename version number, not any path
+version numbers.)
+
+  opts="uversionmangle=s/^/0.0./" \
+  ftp://ftp.ibiblio.org/pub/Linux/ALPHA/wine/\
+  development/Wine-(.+)\.tar\.gz
+
+
+=head1 OPTIONS
+
+For the basic usage, B<uscan> does not require to set these options.
+
+=over
+
+=item B<--report>, B<--no-download>
+
+Only report about available newer versions but do not download
+anything.
+
+=item B<--report-status>
+
+Report on the status of all packages, even those which are up-to-date,
+but do not download anything.
+
+=item B<--download>
+
+Report and download. (This is the default behavior.)
+
+=item B<--destdir>
+
+Path of directory to which to download. If the specified path is not absolute,
+it will be relative to one of the current directory or, if directory scanning
+is enabled, the package's
+source directory.
+
+=item B<--force-download>
+
+Download upstream even if up-to-date (will not overwrite local files, however)
+
+=item B<--pasv>
+
+Force PASV mode for FTP connections.
+
+=item B<--no-pasv>
+
+Do not use PASV mode for FTP connections.
+
+=item B<--timeout> I<N>
+
+Set timeout to I<N> seconds (default 20 seconds).
+
+=item B<--no-symlink>
+
+Do not call B<mk-origtargz>.
+
+=item B<--dehs>
+
+Use an XML format for output, as required by the DEHS system.
+
+=item B<--no-dehs>
+
+Use the traditional uscan output format. (This is the default behavior.)
+
+=item B<--package> I<package>
+
+Specify the name of the package to check for rather than examining
+F<debian/changelog>; this requires the B<--upstream-version> (unless a version
+is specified in the F<watch> file) and B<--watchfile> options as well.
+Furthermore, no directory scanning will be done and nothing will be downloaded.
+This option is probably most useful in conjunction with the DEHS system (and
+B<--dehs>).
+
+=item B<--upstream-version> I<upstream-version>
+
+Specify the current upstream version rather than examine F<debian/watch> or
+F<debian/changelog> to determine it. This is ignored if a directory scan is being
+performed and more than one F<debian/watch> file is found.
+
+=item B<--watchfile> I<watchfile>
+
+Specify the I<watchfile> rather than perform a directory scan to
+determine it. If this option is used without B<--package>, then
+B<uscan> must be called from within the Debian package source tree
+(so that F<debian/changelog> can be found simply by stepping up
+through the tree).
+
+=item B<--download-version> I<version>
+
+Specify the I<version> which the upstream release must match in order to be
+considered, rather than using the release with the highest version.
+
+=item B<--download-current-version>
+
+Download the currently packaged version
+
+=item B<--verbose>
+
+Give verbose output.
+
+=item B<--no-verbose>
+
+Don't give verbose output.  (This is the default behavior.)
+
+=item B<--no-exclusion>
+
+Do not automatically exclude files mentioned in F<debian/copyright> field B<Files-Excluded>
+
+=item B<--debug>
+
+Dump the downloaded web pages to stdout for debugging your F<watch> file.
+
+=item B<--check-dirname-level> I<N>
+
+See the below section L<Directory name checking> for an explanation of this option.
+
+=item B<--check-dirname-regex> I<regex>
+
+See the below section L<Directory name checking> for an explanation of this option.
+
+=item B<--user-agent>, B<--useragent>
+
+Override the default user agent header.
+
+=item B<--no-conf>, B<--noconf>
+
+Do not read any configuration files. This can only be used as the first option
+given on the command-line.
+
+=item B<--help>
+
+Give brief usage information.
+
+=item B<--version>
+
+Display version information.
+
+=back
+
+B<uscan> also accepts following options and passes them to B<mk-origtargz>:
+
+=over
+
+=item B<--symlink>
+
+Make B<orig.tar.gz> (with the appropriate extension) symlink to the downloaded
+files. (This is the default behavior.)
+
+=item B<---copy>
+
+Instead of symlinking as described above, copy the downloaded files.
+
+=item B<---rename>
+
+Instead of symlinking as described above, rename the downloaded files.
+
+=item B<---repack>
+
+After having downloaded an lzma tar, xz tar, bzip tar or zip archive, repack it
+to a gzip tar archive, if required. The unzip package must be installed in
+order to repack .zip archives, the xz-utils package must be installed to repack
+lzma or xz tar archives.
+
+=item B<--compression> [ B<gzip> | B<bzip2> | B<lzma> | B<xz> ]
+
+In the case where the upstream sources are repacked (either because B<--repack>
+option is given or F<debian/copyright> contains the field B<Files-Excluded>), it is
+possible to control the compression method via the parameter (defaults to
+B<gzip>).
+
+=item B<--copyright-file> I<copyright-file>
+
+Exclude files mentioned in B<Files-Excluded> in the given I<copyright-file>.
+This is useful when running B<uscan> not within a source package directory.
+
+=back
+
+=head1 CONFIGURATION VARIABLES
+
+For the basic usage, B<uscan> does not require to set these configuration
+variables.
+
+The two configuration files F</etc/devscripts.conf> and F<~/.devscripts> are
+sourced by a shell in that order to set configuration variables. These
+may be overridden by command line options. Environment variable settings are
+ignored for this purpose. If the first command line option given is
+B<--noconf>, then these files will not be read. The currently recognized
+variables are:
+
+=over
+
+=item B<USCAN_DOWNLOAD>
+
+If this is set to B<no>, then newer upstream files will not be downloaded; this
+is equivalent to the B<--report> or B<--no-download> options.
+
+=item B<USCAN_PASV>
+
+If this is set to yes or no, this will force FTP connections to use PASV mode
+or not to, respectively. If this is set to default, then B<Net::FTP(3)> makes
+the choice (primarily based on the B<FTP_PASSIVE> environment variable).
+
+=item B<USCAN_TIMEOUT>
+
+If set to a number I<N>, then set the timeout to I<N> seconds. This is
+equivalent to the B<--timeout> option.
+
+=item B<USCAN_SYMLINK>
+
+If this is set to no, then a I<pkg>_I<version>B<.orig.tar.{gz|bz2|lzma|xz}>
+symlink will not be made (equivalent to the B<--no-symlink> option). If it is
+set to B<yes> or B<symlink>, then the symlinks will be made. If it is set to
+rename, then the files are renamed (equivalent to the B<--rename> option).
+
+=item B<USCAN_DEHS_OUTPUT>
+
+If this is set to B<yes>, then DEHS-style output will be used. This is
+equivalent to the B<--dehs> option.
+
+=item B<USCAN_VERBOSE>
+
+If this is set to B<yes>, then verbose output will be given.  This is
+equivalent to the B<--verbose> option.
+
+=item B<USCAN_USER_AGENT>
+
+If set, the specified user agent string will be used in place of the default.
+This is equivalent to the B<--user-agent> option.
+
+=item B<USCAN_DESTDIR>
+
+If set, the downloaded files will be placed in this  directory.  This is
+equivalent to the B<--destdir> option.
+
+=item B<USCAN_REPACK>
+
+If this is set to yes, then after having downloaded a bzip tar, lzma tar, xz
+tar, or zip archive, uscan will repack it to a gzip tar. This is equivalent to
+the B<--repack> option.
+
+=item B<USCAN_EXCLUSION>
+
+If this is set to no, files mentioned in the field B<Files-Excluded> of
+F<debian/copyright> will be ignored and no exclusion of files will be tried.
+This is equivalent to the B<--no-exclusion> option.
+
+=back
+
+=head1 EXIT STATUS
+
+The exit status gives some indication of whether a newer version was found or
+not; one is advised to read the output to determine exactly what happened and
+whether there were any warnings to be noted.
+
+=over
+
+=item B<0>
+
+Either B<--help> or B<--version> was used, or for some F<watch> file which was
+examined, a newer upstream version was located.
+
+=item B<1>
+
+No newer upstream versions were located for any of the F<watch> files examined.
+
+=back
+
+=head1 DETAILS
+
+=head2 Details of per-site options
+
+As explained cursorily in the above section L<TYPICAL EXECUTION>,
+B<uscan> reads the per-site option specified in B<opts="> I< ... > B<"> to
+customize its behavior.  
+
+Multiple per-site options I<option1>, I<option2>, I<option3>, ... can be set
+as:
+
+B<opts=">I<option1>B<,> I<option2>B<,> I<option3>B<,> I< ... >B<">
+
+The double quotes are necessary if options contain any spaces.
+
+The mangling rules set by the per-site option behave as if a Perl command
+"I<$target_string> B<~=> I<rule>" is executed but there are some notable
+details.
+
+=over
+
+=item * multiple rules can be specified for a I<rule> by making a concatenated
+string of B<;> (semicolon) separated operations.
+
+=item * I<rule> may only use the B<s>, B<tr> and B<y> operations.
+
+=item * When the B<s> operation is used, only the B<g>, B<i> and B<x> flags are
+available and rule may not contain any expressions which have the potential to
+execute code (i.e. the B<(?{})> and B<(??{})> constructs are not supported).
+
+=item * If the B<s> operation is used, the replacement can contain back references
+to expressions within parenthesis in the matching regex, like
+B<s/-alpha(\d*)/.a$1/>. These back references must use the B<$1> syntax, as the
+B<\1> syntax is not supported.
+
+=item * each operation can not contain B<;> (semicolon) nor B<,> (comma).
+
+=back
+
+=head2 Directory name checking
+
+Similarly to several other scripts in the B<devscripts> package, B<uscan>
+explores the requested directory trees looking for F<debian/changelog> and
+F<debian/watch> files. As a safeguard against stray files causing potential
+problems, and in order to promote efficiency, it will examine the name of the
+parent directory once it finds the F<debian/changelog> file, and check that the
+directory name corresponds to the package name. It will only attempt to
+download newer versions of the package and then perform any requested action if
+the directory name matches the package name. Precisely how it does this is
+controlled by two configuration file variables
+B<DEVSCRIPTS_CHECK_DIRNAME_LEVEL> and B<DEVSCRIPTS_CHECK_DIRNAME_REGEX>, and
+their corresponding command-line options B<--check-dirname-level> and
+B<--check-dirname-regex>.
+
+B<DEVSCRIPTS_CHECK_DIRNAME_LEVEL> can take the following values:
+
+=over
+
+=item B<0>
+
+Never check the directory name.
+
+=item B<1>
+
+Only check the directory name if we have had to  change  directory in
+our search for F<debian/changelog>, that is, the directory containing
+F<debian/changelog> is not  the  directory  from  which B<uscan> was invoked.  This
+is the default behavior.
+
+=item B<2>
+
+Always check the directory name.
+
+=back
+
+The directory name is checked by testing whether the current directory name (as
+determined by pwd(1)) matches the regex given by the configuration file
+option B<DEVSCRIPTS_CHECK_DIRNAME_REGEX> or by the command line option
+B<--check-dirname-regex> I<regex>. Here regex is a Perl regex (see
+perlre(3perl)), which will be anchored at the beginning and the end. If regex
+contains a B</>, then it must match the full directory path. If not, then
+it must match the full directory name. If regex contains the string I<package>,
+this will be replaced by the source package name, as determined from the
+F<debian/changelog>. The default value for the regex is: I<package>B<(-.+)?>, thus matching
+directory names such as I<package> and I<package>-I<version>.
+
+=head1 HISTORY AND UPGRADING
+
+This section briefly describes the backwards-incompatible F<watch> file features
+which have been added in each F<watch> file version, and the first version of the
+B<devscripts> package which understood them.
+
+=over
+
+=item Pre-version 2
+
+The F<watch> file syntax was significantly different in those days. Don't use it.
+If you are upgrading from a pre-version 2 F<watch> file, you are advised to read
+this manpage and to start from scratch.
+
+=item Version 2
+
+B<devscripts> version 2.6.90: The first incarnation of the current style of
+F<watch> files.
+
+=item Version 3
+
+B<devscripts> version 2.8.12: Introduced the following: correct handling of
+regex special characters in the path part, directory/path pattern matching,
+version number in several parts, version number mangling. Later versions
+have also introduced URL mangling.
+
+If you are upgrading from version 2, the key incompatibility is if you have
+multiple groups in the pattern part; whereas only the first one would be used
+in version 2, they will all be used in version 3. To avoid this behavior,
+change the non-version-number groups to be B<(?:> I< ...> B<)> instead of a
+plain B<(> I< ... > B<)> group.
+
+=back
+
+=head1 SEE ALSO
+
+dpkg(1), mk-origtargz(1), perlre(1), uupdate(1), devscripts.conf(5)
+
+=head1 AUTHOR
+
+The original version of uscan was written by Christoph Lameter
+<clameter@debian.org>. Significant improvements, changes and bugfixes were
+made by Julian Gilbey <jdg@debian.org>. HTTP support was added by Piotr
+Roszatycki <dexter@debian.org>. The program was rewritten in Perl by Julian
+Gilbey.
+
+=cut
+
 use 5.010;  # defined-or (//)
 use strict;
 use warnings;
-- 
2.1.4

