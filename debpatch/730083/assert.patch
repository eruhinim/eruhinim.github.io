--- a/userial/ds9097/linuxlnk.c
+++ b/userial/ds9097/linuxlnk.c
@@ -73,6 +73,8 @@
 
 #include <ownet.h>
 
+#include <assert.h>
+
 /* The UART_FIFO_SIZE defines the amount of bytes that are written before
  * reading the reply. Any positive value should work and 16 is probably low
  * enough to avoid losing bytes in even most extreme situations on all modern
@@ -111,6 +113,7 @@
  * the reset has failed and it returns FALSE. */
 SMALLINT owTouchReset(int portnum)
 {
+   assert(fd[portnum] != -1);
    fd_set readset;
    struct timeval timeout_tv;
    
@@ -206,6 +209,7 @@
 
 void owTouchBlock( int portnum, int timeout, int nbits, uchar *transfer_buf)
 {
+   assert(fd[portnum] != -1);
    fd_set readset;
    char *buf;
    struct timeval timeout_tv;
@@ -325,6 +329,7 @@
 //
 SMALLINT owTouchBit(int portnum, SMALLINT sbit)
 {
+   assert(fd[portnum] != -1);
    //unsigned char c = 0;
   unsigned char sendbit;
    unsigned char inbit = 0;
--- a/userial/ds9097/linuxses.c
+++ b/userial/ds9097/linuxses.c
@@ -41,6 +41,8 @@
 #include <ownet.h>
 #include <sys/file.h>
 
+#include <assert.h>
+
 /* local function prototypes */
 SMALLINT owAcquire(int,char *);
 void     owRelease(int);
@@ -120,6 +122,7 @@
 /* Release port 'portnum' */
 void owRelease(int portnum)
 {
+   assert(fd[portnum] != -1);
    /* Restore original settings */
    if(tcsetattr(fd[portnum], TCSANOW, &term_orig[portnum]) < 0 )
      {
