From 28f460d35d8925442ce5a63c45b51d04a0db37dd Mon Sep 17 00:00:00 2001
From: Philip Hands <phil@hands.com>
Date: Sun, 20 Aug 2017 23:48:34 +0200
Subject: [PATCH] in setup_devices_simple(), only create devices that do not
 yet exist

---
 functions | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/functions b/functions
index 3cfa0d4..6c40ec7 100644
--- a/functions
+++ b/functions
@@ -1162,18 +1162,23 @@ setup_dynamic_devices () {
 }
 
 setup_devices_simple () {
+	function ensure-exists-dev() {
+		local path="$TARGET/dev/$1" ; shift
+		[ -e "$path" ] || mknod -m 666 $path "$@"
+	}
+
 	# The list of devices that can be created in a container comes from
 	# src/core/cgroup.c in the systemd source tree.
-	mknod -m 666 $TARGET/dev/null	c 1 3
-	mknod -m 666 $TARGET/dev/zero	c 1 5
-	mknod -m 666 $TARGET/dev/full	c 1 7
-	mknod -m 666 $TARGET/dev/random	c 1 8
-	mknod -m 666 $TARGET/dev/urandom	c 1 9
-	mknod -m 666 $TARGET/dev/tty	c 5 0
+	ensure-exists-dev null		c 1 3
+	ensure-exists-dev zero		c 1 5
+	ensure-exists-dev full		c 1 7
+	ensure-exists-dev random	c 1 8
+	ensure-exists-dev urandom	c 1 9
+	ensure-exists-dev tty		c 5 0
 	mkdir $TARGET/dev/pts/ $TARGET/dev/shm/
 	# Inside a container, we might not be allowed to create /dev/ptmx.
 	# If not, do the next best thing.
-	if ! mknod -m 666 $TARGET/dev/ptmx c 5 2; then
+	if ! ensure-exists-dev ptmx c 5 2; then
 		warning MKNOD "Could not create /dev/ptmx, falling back to symlink. This chroot will require /dev/pts mounted with ptmxmode=666"
 		ln -s pts/ptmx $TARGET/dev/ptmx
 	fi
-- 
2.11.0

