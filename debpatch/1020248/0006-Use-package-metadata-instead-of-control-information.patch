From a2bae6b39339d68c7dd4b8e23fc8cf7f1429ce38 Mon Sep 17 00:00:00 2001
From: Guillem Jover <guillem@debian.org>
Date: Sat, 17 Dec 2022 13:12:05 +0100
Subject: [PATCH 6/6] =?UTF-8?q?Use=20=C2=ABpackage=20metadata=C2=BB=20inst?=
 =?UTF-8?q?ead=20of=20=C2=ABcontrol=20information=C2=BB?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Using «control information» when talking about control files and control
formats, and similar gets confusing fast. Switch to package metadata, as
some of the files in the deb(5) archive control member are not usually
in deb822(5) format.
---
 policy/ap-pkg-binarypkg.rst     | 15 +++++++--------
 policy/ap-pkg-conffiles.rst     |  2 +-
 policy/ap-pkg-sourcepkg.rst     |  2 +-
 policy/ch-binary.rst            | 14 +++++++-------
 policy/ch-controlfields.rst     |  2 +-
 policy/ch-maintainerscripts.rst |  6 +++---
 6 files changed, 20 insertions(+), 21 deletions(-)

diff --git a/policy/ap-pkg-binarypkg.rst b/policy/ap-pkg-binarypkg.rst
index 98bb3cf..355f777 100644
--- a/policy/ap-pkg-binarypkg.rst
+++ b/policy/ap-pkg-binarypkg.rst
@@ -65,20 +65,19 @@ To view the copyright file for a package you could use this command:
 
 .. _s-pkg-controlarea:
 
-Package control information files
----------------------------------
+Binary package metadata files
+-----------------------------
 
-The control information portion of a binary package is a collection of
+The package metadata portion of a binary package is a collection of
 files with names known to ``dpkg``. It will treat the contents of these
 files specially - some of them contain information used by ``dpkg`` when
 installing or removing the package; others are scripts which the package
 maintainer wants ``dpkg`` to run.
 
-It is possible to put other files in the package control information
-file area, but this is not generally a good idea (though they will
-largely be ignored).
+It is possible to put other files in the package metadata archive member,
+but this is not generally a good idea (though they will largely be ignored).
 
-Here is a brief list of the control information files supported by
+Here is a brief list of the package metadata files supported by
 ``dpkg`` and a summary of what they're used for.
 
 ``control``
@@ -124,7 +123,7 @@ Here is a brief list of the control information files supported by
 The binary package control file: ``control``
 ----------------------------------------------
 
-The most important control information file used by ``dpkg`` when it
+The most important package metadata file used by ``dpkg`` when it
 installs a package is ``control``. It contains all the package's "vital
 statistics".
 
diff --git a/policy/ap-pkg-conffiles.rst b/policy/ap-pkg-conffiles.rst
index 81b9fa1..ad02321 100644
--- a/policy/ap-pkg-conffiles.rst
+++ b/policy/ap-pkg-conffiles.rst
@@ -25,7 +25,7 @@ each system.
 Automatic handling of configuration files by ``dpkg``
 -----------------------------------------------------
 
-A package may contain a control information file called ``conffiles``.
+A binary package may contain a package metadata file called ``conffiles``.
 This file should be a list of filenames of configuration files needing
 automatic handling, separated by newlines. The filenames should be
 absolute pathnames, and the files referred to should actually exist in
diff --git a/policy/ap-pkg-sourcepkg.rst b/policy/ap-pkg-sourcepkg.rst
index f1adc6b..c296d37 100644
--- a/policy/ap-pkg-sourcepkg.rst
+++ b/policy/ap-pkg-sourcepkg.rst
@@ -160,7 +160,7 @@ The Debian package source tree
 ------------------------------
 
 The source archive scheme described later is intended to allow a Debian
-package source tree with some associated control information to be
+package source tree with some associated package metadata to be
 reproduced and transported easily. The Debian package source tree is a
 version of the original program with certain files added for the benefit
 of the packaging process, and with any other changes required made to
diff --git a/policy/ch-binary.rst b/policy/ch-binary.rst
index e517f26..5739dc5 100644
--- a/policy/ch-binary.rst
+++ b/policy/ch-binary.rst
@@ -9,10 +9,10 @@ A ``.deb`` package contains two sets of files: a set of files to install
 on the system when the package is installed, and a set of files that
 provide additional metadata about the package or which are executed when
 the package is installed or removed. This second set of files is called
-*control information files*. Among those files are the package maintainer
+*package metadata files*. Among those files are the package maintainer
 scripts and ``control``, the :ref:`binary package control file
 <s-binarycontrolfiles>` that contains the control fields for the
-package. Other control information files include :ref:`symbols
+package. Other package metadata files include :ref:`symbols
 <s-sharedlibs-symbols>` or :ref:`shlibs <s-sharedlibs-shlibdeps>` used to
 store shared library dependency information and the ``conffiles`` file
 that lists the package's configuration files (described in
@@ -23,10 +23,10 @@ information files and files in the Debian control file format.
 Throughout this document, a *control file* refers to a file in the
 Debian control file format. These files are documented in
 :doc:`Control files and their fields <ch-controlfields>`. Only files
-referred to specifically as *control information files* are the files
-included in the control information file member of the ``.deb`` file
-format used by binary packages. Most control information files are not
-in the Debian control file format.
+referred to specifically as *package metadata files* are the files
+included in the package metadata member (called ``control.tar``) of the
+``.deb`` file format used by binary packages. Most package metadata files
+are not in the Debian control file format.
 
 .. _s3.1:
 
@@ -391,7 +391,7 @@ available from the Debian web mirrors at
 https://www.debian.org/doc/packaging-manuals/debconf_specification.html.
 
 Packages which use the Debian Configuration Management Specification may
-contain the additional control information files ``config`` and
+contain the additional package metadata files ``config`` and
 ``templates``. ``config`` is an additional maintainer script used for
 package configuration, and ``templates`` contains templates used for
 user prompting. The ``config`` script might be run before the
diff --git a/policy/ch-controlfields.rst b/policy/ch-controlfields.rst
index 400e664..42d482a 100644
--- a/policy/ch-controlfields.rst
+++ b/policy/ch-controlfields.rst
@@ -1311,7 +1311,7 @@ Debian upload changes control files.
 If you wish to add additional unsupported fields to these output files
 you should use the mechanism described here.
 
-Fields in the main source control information file with names starting
+Fields in the source package template control file with names starting
 ``X``, followed by one or more of the letters ``BCS`` and a hyphen
 ``-``, will be copied to the output files. Only the part of the field
 name after the hyphen will be used in the output file. Where the letter
diff --git a/policy/ch-maintainerscripts.rst b/policy/ch-maintainerscripts.rst
index 724074c..118e00c 100644
--- a/policy/ch-maintainerscripts.rst
+++ b/policy/ch-maintainerscripts.rst
@@ -10,7 +10,7 @@ It is possible to supply scripts as part of a package which the package
 management system will run for you when your package is installed,
 upgraded or removed.
 
-These scripts are the control information files ``preinst``,
+These scripts are the package metadata files ``preinst``,
 ``postinst``, ``prerm`` and ``postrm``. They must be proper executable
 files; if they are scripts (which is recommended), they must start with
 the usual ``#!`` convention. They should be readable and executable by
@@ -25,8 +25,8 @@ It is also important, of course, that they exit with a zero status if
 everything went well.
 
 Additionally, packages interacting with users using ``debconf`` in the
-``postinst`` script should install a ``config`` script as a control
-information file. See :ref:`s-maintscriptprompt` for
+``postinst`` script should install a ``config`` script as a package
+metadata file. See :ref:`s-maintscriptprompt` for
 details.
 
 When a package is upgraded a combination of the scripts from the old and
-- 
2.39.0

