From: Simon McVittie <smcv@debian.org>
Date: Thu, 8 Aug 2024 19:48:11 +0100
Subject: conserver: Configure IP_FREEBIND for TCP sockets

This allows binding to the IP address of a virtual device before the
device has actually been created, which is useful if apt-cacher-ng
should be listening on an interface managed by something like
OpenVSwitch or libvirtd. A typical use-case for this is to provide
an apt proxy to local VMs by configuring apt-cacher-ng to listen
on 192.168.122.1, the address of libvirtd's default bridge.

Closes: #786717
Signed-off-by: Simon McVittie <smcv@debian.org>
---
 src/conserver.cc | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/conserver.cc b/src/conserver.cc
index b47a548..3a99b55 100644
--- a/src/conserver.cc
+++ b/src/conserver.cc
@@ -255,6 +255,11 @@ unsigned setup_tcp_listeners(LPCSTR addi, uint16_t port)
 			setsockopt(nSockFd, SOL_IPV6, IPV6_V6ONLY, &yes, sizeof(yes));
 #endif
 		setsockopt(nSockFd, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof(yes));
+		// allow binding to IP addresses that might not have been
+		// configured yet (#786717)
+#ifdef IP_FREEBIND
+		setsockopt(nSockFd, IPPROTO_IP, IP_FREEBIND, &yes, sizeof(yes));
+#endif
 		res += bind_and_listen(nSockFd, p, port);
 	}
 	return res;
