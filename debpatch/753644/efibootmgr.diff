--- efibootmgr-0.7.0/src/efibootmgr/efibootmgr.c	2014-07-04 00:40:53.000000000 +0400
+++ efibootmgr-0.7.0-my/src/efibootmgr/efibootmgr.c	2014-07-04 00:40:29.006304736 +0400
@@ -72,11 +72,13 @@
 static	LIST_HEAD(blk_list);
 efibootmgr_opt_t opts;
 
+/*
 static inline void
 var_num_from_name(const char *pattern, char *name, uint16_t *num)
 {
 	sscanf(name, pattern, num);
 }
+*/
 
 static void
 free_vars(list_t *head)
@@ -148,7 +150,7 @@
 	memcpy(&n2, b, sizeof(n2));
 	if (n1 < n2) rc = -1;
 	if (n1 == n2) rc = 0;
-	if (n2 > n2) rc = 1;
+	if (n1 > n2) rc = 1;
 	return rc;
 }
 
@@ -620,7 +622,7 @@
 
 	rc = construct_boot_order(opts.bootorder, keep_old_entries,
 				(uint16_t **)&data, &data_size);
-	if (rc < 0 || data_size < 0)
+	if (rc < 0 || data_size == 0)
 		return rc;
 
 	return efi_set_variable(EFI_GLOBAL_GUID, "BootOrder", data, data_size,
--- efibootmgr-0.7.0/src/include/scsi_ioctls.h	2014-04-01 22:53:43.000000000 +0400
+++ efibootmgr-0.7.0-my/src/include/scsi_ioctls.h	2014-07-04 00:38:13.336584399 +0400
@@ -38,7 +38,7 @@
 } Scsi_Idlun;
 
 
-inline int get_scsi_idlun(int fd, Scsi_Idlun *idlun);
+int get_scsi_idlun(int fd, Scsi_Idlun *idlun);
 int get_scsi_pci(int fd, char *slot_name, size_t size);
 int idlun_to_components (Scsi_Idlun *idlun,
 			 unsigned char *host,
--- efibootmgr-0.7.0/src/lib/efi.c	2014-07-04 00:40:53.000000000 +0400
+++ efibootmgr-0.7.0-my/src/lib/efi.c	2014-07-04 00:37:46.829029246 +0400
@@ -309,7 +309,7 @@
 	struct pci_access *pacc;
 	struct list_head *pos, *n;
 	LIST_HEAD(pci_parent_list);
-	size_t needed;
+	ssize_t needed;
 	off_t buf_offset = 0;
 
 	pacc = pci_alloc();
@@ -421,7 +421,7 @@
 	unsigned char bus=0, device=0, function=0;
 	Scsi_Idlun idlun;
 	unsigned char host=0, channel=0, id=0, lun=0;
-	size_t needed;
+	ssize_t needed;
 	off_t buf_offset = 0;
 
 	rc = disk_get_pci(fd, &interface_type, &bus, &device, &function);
@@ -483,7 +483,7 @@
 	uint8_t mbr_type=0, signature_type=0;
 	uint64_t part_start=0, part_size=0;
 	efi_char16_t *os_loader_path;
-	size_t needed = 0;
+	ssize_t needed = 0;
 	off_t buf_offset = 0;
 
 	memset(signature, 0, sizeof(signature));
@@ -590,7 +590,7 @@
 	unsigned char bus, slot, func;
 	struct ifreq ifr;
 	struct ethtool_drvinfo drvinfo;
-	size_t needed;
+	ssize_t needed;
 	off_t buf_offset;
 
 	memset(&ifr, 0, sizeof(ifr));
--- efibootmgr-0.7.0/src/lib/unparse_path.c	2014-07-04 00:40:53.000000000 +0400
+++ efibootmgr-0.7.0-my/src/lib/unparse_path.c	2014-07-04 00:39:19.775468427 +0400
@@ -43,7 +43,7 @@
 	uint64_t i;
 	char a[1];
 
-	size_t needed;
+	ssize_t needed;
 	off_t buf_offset = 0;
 
 	for (i=0; i < length; i++) {
@@ -62,7 +62,7 @@
 {
 	uint64_t i; unsigned char c;
 
-	size_t needed;
+	ssize_t needed;
 	size_t buf_offset = 0;
 
 	for (i=0; i < length; i++) {
@@ -116,7 +116,7 @@
 	unsigned char *q = (uint8_t *)path + 20;
 	int rc;
 
-	size_t needed;
+	ssize_t needed;
 	off_t buf_offset = 0;
 
 	rc = efi_guid_to_str(&path->vendor_guid, &text_guid);
@@ -198,7 +198,7 @@
 /* 	IPv6_DEVICE_PATH *ipv6 = (IPv6_DEVICE_PATH *)path; */
 	char a[16], b[16], c[16], d[16], e[16];
 
-	size_t needed;
+	ssize_t needed;
 	off_t buf_offset = 0;
 
 	switch (path->subtype) {
@@ -411,7 +411,7 @@
 	unsigned char *q = (uint8_t *)path + 8;
 	char a[16], b[16];
 
-	size_t needed;
+	ssize_t needed;
 	off_t buf_offset = 0;
 
 	needed = snprintf(p + buf_offset,
@@ -445,7 +445,7 @@
 {
 	uint16_t parsed_length = 0;
 	char *p = buffer;
-	size_t needed;
+	ssize_t needed;
 	off_t buf_offset = 0;
 	int exit_now = 0;
 
