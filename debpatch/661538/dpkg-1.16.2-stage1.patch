diff -ur dpkg-1.16.2.original/man/deb-src-control.5 dpkg-1.16.2/man/deb-src-control.5
--- dpkg-1.16.2.original/man/deb-src-control.5	2012-03-19 06:40:08.000000000 +0000
+++ dpkg-1.16.2/man/deb-src-control.5	2012-04-13 02:42:48.181521792 +0100
@@ -135,6 +135,18 @@
 in this case.
 
 .TP
+.BI Build\-Depends\-Stage1: " package-list"
+Modfied \fBBuild\-Depends\fP list of packages needed to build the source
+package in 'bootstrap stage 1' mode. Staged builds are used to break
+build-dependency loops when bootstrapping an architecture.
+
+.TP
+.BI Build\-Depends\-Indep\-Stage1: " package-list"
+Modified \fBBuild\-Depends\-Indep\fPA package list for building the source 
+package in 'bootstrap stage 1' mode. Staged builds are used to break 
+build-dependency loops when bootstrapping an architecture.
+
+.TP
 .BI Build\-Conflicts: " package-list"
 A list of packages that should not be installed when the package is build, for
 example because they interfere with the used build system.
@@ -146,8 +158,12 @@
 
 The syntax of the
 .B Build\-Depends
-and
+,
 .B Build\-Depends\-Indep
+,
+.B Build\-Depends\-Stage1
+and 
+.B Build\-Depends\-Indep\-Stage1
 fields is a list of groups of alternative packages. Each group is a list
 of packages separated by vertical bar (or "pipe") symbols, "|". The
 groups are separated by commas. Commas are to be read as "AND", and pipes
diff -ur dpkg-1.16.2.original/scripts/Dpkg/BuildOptions.pm dpkg-1.16.2/scripts/Dpkg/BuildOptions.pm
--- dpkg-1.16.2.original/scripts/Dpkg/BuildOptions.pm	2012-03-19 06:40:08.000000000 +0000
+++ dpkg-1.16.2/scripts/Dpkg/BuildOptions.pm	2012-04-13 03:29:29.027410435 +0100
@@ -121,6 +121,9 @@
     } elsif ($key eq 'parallel')  {
 	$value = "" if not defined($value);
 	return 0 if $value !~ /^\d*$/;
+    } elsif ($key eq 'stage')  {
+	$value = "" if not defined($value);
+	return 1 if $value !~ /^\d*$/;
     }
 
     $self->{'options'}{$key} = $value;
diff -ur dpkg-1.16.2.original/scripts/Dpkg/Control/Fields.pm dpkg-1.16.2/scripts/Dpkg/Control/Fields.pm
--- dpkg-1.16.2.original/scripts/Dpkg/Control/Fields.pm	2012-03-19 06:40:08.000000000 +0000
+++ dpkg-1.16.2/scripts/Dpkg/Control/Fields.pm	2012-04-13 01:46:59.484916503 +0100
@@ -73,10 +73,20 @@
         dependency => 'normal',
         dep_order => 1,
     },
+    'Build-Depends-Stage1' => {
+        allowed => ALL_SRC,
+        dependency => 'normal',
+        dep_order => 1,
+    },
     'Build-Depends-Indep' => {
         allowed => ALL_SRC,
         dependency => 'normal',
         dep_order => 2,
+    },
+    'Build-Depends-Indep-Stage1' => {
+        allowed => ALL_SRC,
+        dependency => 'normal',
+        dep_order => 2,
     },
     'Built-Using' => {
         allowed => ALL_PKG,
diff -ur dpkg-1.16.2.original/scripts/dpkg-buildpackage.pl dpkg-1.16.2/scripts/dpkg-buildpackage.pl
--- dpkg-1.16.2.original/scripts/dpkg-buildpackage.pl	2012-03-19 06:40:09.000000000 +0000
+++ dpkg-1.16.2/scripts/dpkg-buildpackage.pl	2012-04-13 03:29:31.231421372 +0100
@@ -123,6 +123,7 @@
 my $targetarch = my $targetgnusystem = '';
 my $call_target = '';
 my $call_target_as_root = 0;
+my $buildstage = 0;
 my (@checkbuilddep_opts, @changes_opts, @source_opts);
 
 use constant BUILD_DEFAULT    => 1;
@@ -299,6 +300,9 @@
     $build_opts->export();
 }
 
+$buildstage = $build_opts->get("stage") if $build_opts->has("stage");
+
+
 my $cwd = cwd();
 my $dir = basename($cwd);
 
@@ -362,6 +366,9 @@
     if ($admindir) {
 	push @checkbuilddep_opts, "--admindir=$admindir";
     }
+    if ($buildstage) {
+	push @checkbuilddep_opts, "--stage=$buildstage";
+    }
 
     system('dpkg-checkbuilddeps', @checkbuilddep_opts);
     if (not WIFEXITED($?)) {
diff -ur dpkg-1.16.2.original/scripts/dpkg-checkbuilddeps.pl dpkg-1.16.2/scripts/dpkg-checkbuilddeps.pl
--- dpkg-1.16.2.original/scripts/dpkg-checkbuilddeps.pl	2012-03-19 06:40:09.000000000 +0000
+++ dpkg-1.16.2/scripts/dpkg-checkbuilddeps.pl	2012-04-13 03:46:33.968492845 +0100
@@ -51,6 +51,8 @@
   -a arch        assume given host architecture
   --admindir=<directory>
                  change the administrative directory.
+  --stage=<level>
+                 use build-depends-stage level specified
   -h, --help     show this help message.
       --version  show the version.")
 	. "\n\n" . _g(
@@ -61,13 +63,15 @@
 my $binary_only=0;
 my ($bd_value, $bc_value);
 my $host_arch = get_host_arch();
+my $buildstage=0;
 if (!GetOptions('B' => \$binary_only,
                 'help|h' => sub { usage(); exit(0); },
                 'version' => \&version,
                 'd=s' => \$bd_value,
                 'c=s' => \$bc_value,
                 'a=s' => \$host_arch,
-                'admindir=s' => \$admindir)) {
+                'admindir=s' => \$admindir,
+                'stage=s' => \$buildstage)) {
 	usage();
 	exit(2);
 }
@@ -80,10 +84,16 @@
 my $facts = parse_status("$admindir/status");
 
 unless (defined($bd_value) or defined($bc_value)) {
+    my $BD_key="Build-Depends";
+    my $BDI_key="Build-Depends-Indep";
+    if ($buildstage and defined $fields->{"Build-Depends-Stage".$buildstage}) {
+       $BD_key="Build-Depends-Stage".$buildstage;
+       $BDI_key="Build-Depends-Indep-Stage".$buildstage;
+    }
     $bd_value = 'build-essential';
-    $bd_value .= ", " . $fields->{"Build-Depends"} if defined $fields->{"Build-Depends"};
-    if (not $binary_only and defined $fields->{"Build-Depends-Indep"}) {
-	$bd_value .= ", " . $fields->{"Build-Depends-Indep"};
+    $bd_value .= ", " . $fields->{$BD_key} if defined $fields->{$BD_key};
+    if (not $binary_only and defined $fields->{$BDI_key}) {
+       $bd_value .= ", " . $fields->{$BDI_key};
     }
     $bc_value = $fields->{"Build-Conflicts"} if defined $fields->{"Build-Conflicts"};
     if (not $binary_only and defined $fields->{"Build-Conflicts-Indep"}) {
