--- scripts/debcheckout.pl	2008-03-24 01:13:43.000000000 +0000
+++ debcheckout.pl	2008-03-25 21:23:10.000000000 +0000
@@ -18,7 +18,7 @@
 #
 
 # Created: Tue, 14 Aug 2007 10:20:55 +0200
-# Last-Modified: $Date: 2008-03-24 01:13:42 +0000 (Mon, 24 Mar 2008) $ 
+# Last-Modified: $Date: 2008-03-22 21:47:34 +0000 (Sat, 22 Mar 2008) $ 
 
 =head1 NAME
 
@@ -223,28 +223,39 @@
 
 # Patch a given repository URL to ensure that the checkoud out repository can be
 # committed to. Only works for well known repositories (mainly Alioth's).
-sub set_auth($$$) {
-  my ($repo_type, $url, $user) = @_;
-
+sub set_auth($$$$) {
+  my ($repo_type, $url, $user, $print_only) = @_;
   my $old_url = $url;
   $user .= "@" if length $user;
+  my $user_local = $user;
+  $user_local =~ s|(.*)(@)|$1|;
+  my $user_url = $url;
   switch ($repo_type) {
     case "bzr"	  { $url =~ s|^\w+://(bzr\.debian\.org)/(.*)|sftp://$user$1/bzr/$2|;
 		    $url =~ s[^\w+://(?:(bazaar|code)\.)?(launchpad\.net/.*)][bzr+ssh://${user}bazaar.$2];}
     case "darcs"  {
+      $user_url =~ s|^\w+://(darcs\.debian\.org)/(~)(.*?)/.*|$3|;
        if ($url =~ m|(~)|) {
-           my $user_local = $user;
-           $user_local =~ s|(.*)(@)|$1|;
-           my $user_url = $url;
-           $user_url =~ s|^\w+://(darcs\.debian\.org)/(~)(.*)/.*|$3|;
            die "the local user '$user_local' doesn't own the personal repository '$url'\n"
-               if $user_local ne $user_url;
-           $url =~ s|^\w+://(darcs\.debian\.org)/(~)(.*)/(.*)|$user$1:~/public_darcs/$4|;
+               if $user_local ne $user_url and !$print_only;
+           $url =~ s|^\w+://(darcs\.debian\.org)/(~)(.*?)/(.*)|$user$1:~/public_darcs/$4|;
        } else {
            $url =~ s|^\w+://(darcs\.debian\.org)/(.*)|$user$1:/darcs/$2|;
         }
     }
-    case "git"    { $url =~ s|^\w+://(git\.debian\.org/.*)|git+ssh://$user$1|; }
+    case "git"    {
+      $user_url =~ s|^\w+://(git\.debian\.org)/git/users/(.*?)/.*|$2|;
+      $user_url =~ s|^\w+://(git\.debian\.org)/~(.*?)/.*|$2|;
+
+      if ($url =~ m%(/users/|~)%) {
+        die "the local user '$user_local' doesn't own the personal repository '$url'\n"
+          if $user_local ne $user_url and !$print_only;
+        $url =~ s|^\w+://(git\.debian\.org)/git/users/.*?/(.*)|git+ssh://$user$1/~/public_git/$2|;
+        $url =~ s|^\w+://(git\.debian\.org)/~.*?/(.*)|git+ssh://$user$1/~/public_git/$2|;
+      } else {
+        $url =~ s|^\w+://(git\.debian\.org/.*)|git+ssh://$user$1|;
+      }
+    }
     case "hg"     { $url =~ s|^\w+://(hg\.debian\.org/.*)|ssh://$user$1|; }
     case "svn"	  { $url =~ s|^\w+://(svn\.debian\.org)/(.*)|svn+ssh://$user$1/svn/$2|; }
     else { die "sorry, don't know how to enable authentication for $repo_type repositories (patches welcome!)\n"; }
@@ -564,7 +575,7 @@
     $browse_url = find_browse($pkg) if @files;
   }
 
-  $repo_url = set_auth($repo_type, $repo_url, $user) if $auth and not @files;
+  $repo_url = set_auth($repo_type, $repo_url, $user, $print_only) if $auth and not @files;
   print_repo($repo_type, $repo_url) if $print_only; # ... then quit
   if (length $pkg) {
     print "declared $repo_type repository at $repo_url\n";
