diff -u aplus-fsf-4.22.1/debian/changelog aplus-fsf-4.22.1/debian/changelog
--- aplus-fsf-4.22.1/debian/changelog
+++ aplus-fsf-4.22.1/debian/changelog
@@ -1,3 +1,13 @@
+aplus-fsf (4.22.1-10.2) unstable; urgency=medium
+
+  * Non-maintainer upload.
+  * Fix FTBFS against glibc 2.32 by using strerror() instead of sys_errlist.
+    Thanks to Logan Rosen <logan@ubuntu.com>. (Closes: #979462)
+  * Fix FTBFS on GCC-11, avoiding ordered pointer comparisons with integer.
+    Thanks to Lukas MÃ¤rdian <slyon@ubuntu.com>. (Closes: #983970)
+
+ -- Marcos Talau <marcos@talau.info>  Wed, 13 Apr 2022 12:10:56 -0300
+
 aplus-fsf (4.22.1-10.1) unstable; urgency=medium
 
   * Non-maintainer upload.
only in patch2:
unchanged:
--- aplus-fsf-4.22.1.orig/src/MSGUI/MSGraphUI.C
+++ aplus-fsf-4.22.1/src/MSGUI/MSGraphUI.C
@@ -1493,7 +1493,7 @@
       {
         xs=trace->xAxis();
         ys=trace->yAxis();
-        if(trace->style()!=MSG::Text&&trace->dataCount()>1&&trace->legend()>0)
+        if(trace->style()!=MSG::Text&&trace->dataCount()>1&&trace->legend()!=0)
          {
            if (setX==MSFalse) 
             {
only in patch2:
unchanged:
--- aplus-fsf-4.22.1.orig/src/MSIPC/MSProtocolConnection.C
+++ aplus-fsf-4.22.1/src/MSIPC/MSProtocolConnection.C
@@ -129,8 +129,13 @@
   if (getpeername(fd(),(struct sockaddr *)&sockname,&socklen)) 
 #endif
    {
+#if defined (HAVE_STRERROR)
+     char *errstr = strerror(errno);
+#else
+     char *errstr = (errno<sys_nerr)?sys_errlist[errno]:"unknown error";
+#endif
      MSMessageLog::warningMessage("MSProtocolConnection: getpeername failed: %s\n",
-                                  (errno<sys_nerr)?sys_errlist[errno]:"unknown error");
+                                  errstr);
      close();
      return MSFalse;
    }
only in patch2:
unchanged:
--- aplus-fsf-4.22.1.orig/src/MSTypes/MSBinaryMatrix.C
+++ aplus-fsf-4.22.1/src/MSTypes/MSBinaryMatrix.C
@@ -832,7 +832,7 @@
      unsigned char *dp=d->elements();
      unsigned char *mp=aBinaryMatrix_.data();
      unsigned char *row=aBinaryMatrix_.data()+aBinaryMatrix_.columns();
-     if (mp>0)
+     if (mp!=0)
       {
 	do
 	 {
@@ -842,7 +842,7 @@
       }
      mp=bBinaryMatrix_.data();
      row=bBinaryMatrix_.data()+bBinaryMatrix_.columns();
-     if (mp>0)
+     if (mp!=0)
       {
 	do
 	 {
@@ -869,7 +869,7 @@
      unsigned char *dp=d->elements();
      unsigned char *mp=data();
      unsigned char *row=data()+columns();
-     if (mp>0)
+     if (mp!=0)
       {
 	do
 	 {
@@ -879,7 +879,7 @@
       }
      mp=aBinaryMatrix_.data();
      row=aBinaryMatrix_.data()+aBinaryMatrix_.columns();
-     if (mp>0)
+     if (mp!=0)
       {
         do
          {
@@ -917,7 +917,7 @@
      unsigned char *dp=d->elements();
      unsigned char *mp=aBinaryMatrix_.data();
      unsigned char *row=aBinaryMatrix_.data()+aBinaryMatrix_.columns();
-     if (mp>0)
+     if (mp!=0)
       {
 	do 
 	 {
@@ -929,7 +929,7 @@
      dp=d->elements()+aBinaryMatrix_.columns();
      mp=bBinaryMatrix_.data();
      row=bBinaryMatrix_.data()+bBinaryMatrix_.columns();
-     if (mp>0)
+     if (mp!=0)
       {
 	do
 	 {
@@ -957,7 +957,7 @@
      unsigned char *dp=d->elements();
      unsigned char *mp=data();
      unsigned char *row=data()+columns();
-     if (mp>0)
+     if (mp!=0)
       {
 	do 
 	 {
@@ -969,7 +969,7 @@
      dp=d->elements()+columns();
      mp=aBinaryMatrix_.data();
      row=aBinaryMatrix_.data()+aBinaryMatrix_.columns();
-     if (mp>0)
+     if (mp!=0)
       {
 	do
 	 {
only in patch2:
unchanged:
--- aplus-fsf-4.22.1.orig/src/dap/error.c
+++ aplus-fsf-4.22.1/src/dap/error.c
@@ -71,12 +71,12 @@
 
 	/* error string a la syslog(3) */
       case 'm':
-	if (errnum < 1 || errnum > sys_nerr)
-	  str = "unknown error";
-	else
 #ifdef HAVE_STRERROR
-          str = strerror(errnum);
+        str = strerror(errnum);
 #else
+        if (errnum < 1 || errnum > sys_nerr)
+          str = "unknown error";
+        else
 	  str = sys_errlist[errnum];
 #endif
 	for (z = str; *z != (char) NULL &&
