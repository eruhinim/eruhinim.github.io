From 86f59e1cc7b94ff8010117d42f87772b39a4b881 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Rapha=C3=ABl=20Hertzog?= <hertzog@debian.org>
Date: Thu, 5 Jan 2017 12:16:11 +0100
Subject: [PATCH] Dpkg::Shlibs: ignore "objdump -a" failures in find_library()

On some architectures, "objdump -a" fails when trying to process
a foreign library with a message like this one:
objdump: /usr/lib/x86_64-linux-gnu/libc.so: File format not recognized

Since a927295c93fb7a17742441aa863aaffcf4a351b5 we are now analyzing all
libraries found and not only the first one found, so we can't afford to
fail just because objdump -a failed, instead we just issue a warning.

If the failure is not due to this problem, dpkg-shlibdeps will barf
a bit later because it was not able to find the library so I did not
add an error in case we issued a warning but did not find any other
instance of the same library.

Closes: #849913
---
 scripts/Dpkg/Shlibs.pm | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/scripts/Dpkg/Shlibs.pm b/scripts/Dpkg/Shlibs.pm
index 3bb3c7baf..24ffc81c9 100644
--- a/scripts/Dpkg/Shlibs.pm
+++ b/scripts/Dpkg/Shlibs.pm
@@ -156,9 +156,14 @@ sub find_library {
     foreach my $dir (@librarypaths) {
 	my $checkdir = "$root$dir";
 	if (-e "$checkdir/$lib") {
-	    my $libformat = Dpkg::Shlibs::Objdump::get_format("$checkdir/$lib");
-	    if ($format eq $libformat) {
-		push @libs, canonpath("$checkdir/$lib");
+	    eval {
+		my $libformat = Dpkg::Shlibs::Objdump::get_format("$checkdir/$lib");
+		if ($format eq $libformat) {
+		    push @libs, canonpath("$checkdir/$lib");
+		}
+	    };
+	    if ($@) {
+		warning("could not identify ELF format of %s", "$checkdir/$lib");
 	    }
 	}
     }
-- 
2.11.0

