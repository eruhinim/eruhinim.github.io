--- /usr/share/apport/package-hooks/dkms_packages.py	(original)
+++ /usr/share/apport/package-hooks/dkms_packages.py	(refactored)
@@ -36,12 +36,12 @@
 options=optparser.parse_args()[0]
 
 if not options.module or not options.version:
-    print >> sys.stderr, 'ERROR (dkms apport): both -m and -v are required'
+    print('ERROR (dkms apport): both -m and -v are required', file=sys.stderr)
     sys.exit(2)
 
 package=packaging.get_file_package('/usr/src/' + options.module + '-' + options.version)
 if package is None:
-    print >> sys.stderr, 'ERROR (dkms apport): binary package for %s: %s not found' % (options.module,options.version)
+    print('ERROR (dkms apport): binary package for %s: %s not found' % (options.module,options.version), file=sys.stderr)
     sys.exit(1)
 
 if options.kernel:
@@ -50,9 +50,9 @@
 
     try:
         apport.packaging.is_distro_package(kernel_package)
-    except ValueError, e:
+    except ValueError as e:
         if e == 'package does not exist':
-            print >> sys.stderr, 'ERROR (dkms apport): kernel package %s is not supported' % (kernel_package)
+            print('ERROR (dkms apport): kernel package %s is not supported' % (kernel_package), file=sys.stderr)
             sys.exit(1)
 
 make_log=os.path.join('/var','lib','dkms',options.module,options.version,'build','make.log')
@@ -62,7 +62,7 @@
 try:
     report['SourcePackage'] = apport.packaging.get_source(package)
 except ValueError:
-    print >> sys.stderr, 'ERROR (dkms apport): unable to determine source package for %s' % package
+    print('ERROR (dkms apport): unable to determine source package for %s' % package, file=sys.stderr)
     sys.exit(3)
 try:
     version = packaging.get_version(package)
@@ -81,7 +81,7 @@
 if 'DKMSBuildLog' in report:
     this_year = str(datetime.today().year)
     if 'Segmentation fault' in report['DKMSBuildLog']:
-        print >> sys.stderr, 'ERROR (dkms apport): There was a segmentation fault when trying to build the module'
+        print('ERROR (dkms apport): There was a segmentation fault when trying to build the module', file=sys.stderr)
         sys.exit(1)
     dupe_sig = ''
     for line in report['DKMSBuildLog'].split('\n'):
