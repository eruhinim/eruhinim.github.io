diff --git a/debian/changelog b/debian/changelog
index a5ff9ce..886efd3 100644
--- a/debian/changelog
+++ b/debian/changelog
@@ -15,6 +15,10 @@ devscripts (2.15.10) UNRELEASED; urgency=medium
     - Removed undefined "$filenames" from chdist.bash_completion
     - Split debi.bash_completion off from pkgnames.bash_completion
       and added links for both debi/debc and corrected complete commands
+  * Added custom bash completion support for bts (Closes: #499886)
+    - Added --soap-timeout option to bts
+    - Added listcachedbugs command to bts
+    - Split out bts bash completion handling into its own script
 
   [ Dominique Dumont ]
   * licensecheck: parse file matching -c regex whatever its mime
diff --git a/debian/links b/debian/links
index 863ec89..44d8bfa 100644
--- a/debian/links
+++ b/debian/links
@@ -25,7 +25,6 @@
 /usr/share/bash-completion/completions/pkgnames  /usr/share/bash-completion/completions/dcontrol
 /usr/share/bash-completion/completions/pkgnames  /usr/share/bash-completion/completions/grep-excuses
 /usr/share/bash-completion/completions/pkgnames  /usr/share/bash-completion/completions/rc-alert
-/usr/share/bash-completion/completions/pkgnames  /usr/share/bash-completion/completions/bts
 /usr/share/bash-completion/completions/pkgnames  /usr/share/bash-completion/completions/whodepends
 /usr/share/bash-completion/completions/pkgnames  /usr/share/bash-completion/completions/dget
 /usr/share/bash-completion/completions/pkgnames  /usr/share/bash-completion/completions/pts-subscribe
diff --git a/lib/Devscripts/Debbugs.pm b/lib/Devscripts/Debbugs.pm
index ee4ecdf..cb078e2 100644
--- a/lib/Devscripts/Debbugs.pm
+++ b/lib/Devscripts/Debbugs.pm
@@ -101,6 +101,14 @@ my $soapurl='Debbugs/SOAP/1';
 our $btsurl='http://bugs.debian.org/';
 my @errors;
 
+our $soap_timeout;
+sub soap_timeout {
+    my $timeout_arg = shift;
+    if (defined $timeout_arg and $timeout_arg =~ m{^[1-9]\d*$}) {
+        $soap_timeout = $timeout_arg;
+    }
+}
+
 sub init_soap {
     my $soapproxyurl;
     if ($btsurl =~ m%^https?://(.*)/?$%) {
@@ -110,7 +118,11 @@ sub init_soap {
     }
     $soapproxyurl =~ s%//$%/%;
     $soapproxyurl .= 'cgi-bin/soap.cgi';
-    my $soap = SOAP::Lite->uri($soapurl)->proxy($soapproxyurl);
+    my %options;
+    if ($soap_timeout) {
+        $options{timeout} = $soap_timeout;
+    }
+    my $soap = SOAP::Lite->uri($soapurl)->proxy($soapproxyurl, %options);
 
     $soap->transport->env_proxy();
     $soap->on_fault(\&getSOAPError);
diff --git a/scripts/bts.pl b/scripts/bts.pl
index 55bb83a..c1d7da7 100755
--- a/scripts/bts.pl
+++ b/scripts/bts.pl
@@ -335,6 +335,10 @@ to use B<mutt> to send emails.
 
 Don't use B<mutt> for sending of mails.
 
+=item B<--soap-timeout=>I<SECONDS>
+
+Specify a timeout for SOAP calls as used by the B<select> and B<status> commands.
+
 =item B<--smtp-host=>I<SMTPHOST>
 
 Specify an SMTP host.  If given, B<bts> will send mail by talking directly to
@@ -582,6 +586,7 @@ my ($opt_cachemode, $opt_mailreader, $opt_sendmail, $opt_smtphost);
 my ($opt_smtpuser, $opt_smtppass, $opt_smtphelo);
 my $opt_cachedelay=5;
 my $opt_mutt;
+my $opt_soap_timeout;
 my $mboxmode = 0;
 my $quiet=0;
 my $opt_ccemail = "";
@@ -620,6 +625,7 @@ GetOptions("help|h" => \$opt_help,
 	   "toolname=s" => \$toolname,
 	   "bts-server=s" => \$btsserver,
 	   "mutt!" => \$opt_mutt,
+       "soap-timeout:i" => \$opt_soap_timeout,
 	   )
     or die "Usage: $progname [options]\nRun $progname --help for more details\n";
 
@@ -650,6 +656,10 @@ if ($opt_mutt) {
     $use_mutt = 1;
 }
 
+if ($opt_soap_timeout) {
+    Devscripts::Debbugs::soap_timeout($opt_soap_timeout);
+}
+
 if ($opt_sendmail and $opt_smtphost) {
     die "$progname: --sendmail and --smtp-host mutually exclusive\n";
 } elsif ($opt_mutt and $opt_sendmail) {
@@ -2333,6 +2343,37 @@ sub bts_cleancache {
     untie %timestamp;
 }
 
+=item B<listcachedbugs> [I<number>]
+
+List cached bug ids (intended to support bash completion). The optional number argument
+restricts the list to those bug ids that start with that number.
+
+=cut
+
+sub bts_listcachedbugs {
+    my $number = shift;
+    if (not defined $number) {
+	$number = '';
+    }
+    if ($number =~ m{\D}) {
+	return;
+    }
+    my $untie=0;
+    if (not tied %timestamp) {
+        tie (%timestamp, "Devscripts::DB_File_Lock", $timestampdb,
+             O_RDONLY(), 0600, $DB_HASH, "read")
+            or die "$progname: couldn't open DB file $timestampdb for reading: $!\n";
+	$untie=1;
+    }
+
+    print join "\n", grep { $_ =~ m{^$number\d+$} } sort keys %timestamp;
+    print "\n";
+
+    if ($untie) {
+        untie %timestamp;
+    }
+}
+
 # Add any new commands here.
 
 =item B<version>
diff --git a/scripts/pkgnames.bash_completion b/scripts/pkgnames.bash_completion
index 4f6cc93..c867015 100644
--- a/scripts/pkgnames.bash_completion
+++ b/scripts/pkgnames.bash_completion
@@ -9,4 +9,4 @@ _pkg_names()
     return 0
 }
 
-complete -F _pkg_names wnpp-alert wnpp-check mk-build-deps rmadison mass-bug debsnap dd-list build-rdeps who-uploads transition-check getbuildlog dcontrol grep-excuses rc-alert bts whodepends dget pts-subscribe pts-unsubscribe
+complete -F _pkg_names wnpp-alert wnpp-check mk-build-deps rmadison mass-bug debsnap dd-list build-rdeps who-uploads transition-check getbuildlog dcontrol grep-excuses rc-alert whodepends dget pts-subscribe pts-unsubscribe
