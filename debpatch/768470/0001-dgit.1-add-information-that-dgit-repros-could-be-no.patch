From 65638803c5b051d21a373a8690c393d742b34d60 Mon Sep 17 00:00:00 2001
From: Andreas Barth <aba@not.so.argh.org>
Date: Fri, 7 Nov 2014 16:01:52 +0100
Subject: [PATCH] dgit.1: add information that dgit repros could be normally
 cloned, and no source code access on the signing machine is
 required for rpush.

---
 dgit.1 |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/dgit.1 b/dgit.1
index 1676bb8..576c128 100644
--- a/dgit.1
+++ b/dgit.1
@@ -164,7 +164,9 @@ Pushes the contents of the specified directory on a remote machine.
 This is like running dgit push on build-host with build-dir as the
 current directory; however, signing operations are done on the
 invoking host.  This allows you to do a push when the system which has
-the source code and the build outputs has no access to the key.
+the source code and the build outputs has no access to the key,
+whereas the host with access to the key doesn't need to have the
+source repository cloned to it.
 
 However, the build-host must be able to ssh to the dgit repos.  If
 this is not already the case, you must organise it separately, for
@@ -516,6 +518,10 @@ directory, as with a traditional (non-gitish) dpkg-source workflow.
 You need to retain these tarballs in the parent directory for dgit
 build and dgit push.
 
+dgit repositories could be cloned with standard (git) methods. The
+only exception is that for sourcefull builds / uploads the orig
+tarball(s) need to be present in the parent directory.
+
 To a user looking at the archive, changes pushed using dgit look like
 changes made in an NMU: in a `3.0 (quilt)' package the delta from the
 previous upload is recorded in a new patch constructed by dpkg-source.
-- 
1.5.6.5

