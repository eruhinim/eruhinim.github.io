--- altermime-0.3.10/mime_alter.c	2014-06-29 00:18:11.000000000 +0400
+++ altermime-0.3.10-my/mime_alter.c	2014-06-29 00:12:24.786227747 +0400
@@ -687,7 +687,7 @@
 char *AM_adapt_linebreak( char *in, char *lb ) {
 
 	char safe[]="\r\n";
-	char *newblock;
+	char *newblock = NULL;
 
 
 	if (in == NULL) return NULL;
--- altermime-0.3.10/ffget.c	2008-11-16 11:45:45.000000000 +0300
+++ altermime-0.3.10-my/ffget.c	2014-06-29 00:15:17.943226347 +0400
@@ -550,7 +550,7 @@
 				// if we have another \r after it, in which case, we
 				// turn on SINGLE_DELIMETER_MODE.
 
-				if ( (*crlfpos == '\r') )
+				if ( *(crlfpos) == '\r' )
 				{
 					f->linebreak = FFGET_LINEBREAK_CR;
 					snprintf(f->lastbreak,sizeof(f->lastbreak),"\r");
--- altermime-0.3.10/qpe.c	2014-06-29 00:18:11.000000000 +0400
+++ altermime-0.3.10-my/qpe.c	2014-06-29 00:17:29.564919920 +0400
@@ -97,7 +97,7 @@
 				op+= strlen(paragraph);// +3; /** jump the output + =\r\n **/
 				out_remaining-= (strlen(paragraph)); // Was +3, updated to fix Outlook problems
 
-				QPD fprintf(stdout, "Soft break (%Zd + %d > 76 char) for '%s'\n", current_line_length, charout_size, paragraph);
+				QPD fprintf(stdout, "Soft break (%zd + %d > 76 char) for '%s'\n", current_line_length, charout_size, paragraph);
 				
 				/** reinitialize the paragraph **/
 				paragraph[0] = '\0';
@@ -108,7 +108,7 @@
 			}
 
 			snprintf(pp, pp_remaining, "%s", charout);
-			QPD fprintf(stdout,"charout='%s', size=%d, pp_remain=%Zd result='%s'\n", charout, charout_size, pp_remaining, paragraph);
+			QPD fprintf(stdout,"charout='%s', size=%d, pp_remain=%zd result='%s'\n", charout, charout_size, pp_remaining, paragraph);
 			pp += charout_size;
 			pp_remaining -= charout_size;
 			p++;
@@ -149,13 +149,13 @@
 	out_size = in_size *3;
 	in_buffer = malloc( sizeof(char) *in_size +1);
 	if (in_buffer == NULL) {
-		QPD fprintf(stdout,"Error allocating %Zd bytes for input buffer\n", in_size);
+		QPD fprintf(stdout,"Error allocating %zd bytes for input buffer\n", in_size);
 		return -1;
 	}
 
 	out_buffer = malloc( sizeof(char) *out_size *3 +1);
 	if (in_buffer == NULL) {
-		QPD fprintf(stdout,"Error allocating %Zd bytes for output buffer\n", out_size);
+		QPD fprintf(stdout,"Error allocating %zd bytes for output buffer\n", out_size);
 		return -1;
 	}
 
@@ -169,7 +169,7 @@
 	  ** we segfault ;)  **/
 	*(in_buffer +in_size) = '\0';
 
-	QPD fprintf(stdout,"file %s is loaded, size = %Zd\n", fname, in_size);
+	QPD fprintf(stdout,"file %s is loaded, size = %zd\n", fname, in_size);
 
 	qp_encode( out_buffer, out_size, in_buffer, in_size );
 
