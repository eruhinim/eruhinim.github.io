--- a/lib/Devscripts/Uscan/Utils.pm
+++ b/lib/Devscripts/Uscan/Utils.pm
@@ -259,7 +259,7 @@
     eval "uscan_debug \"safe_replace input=\\\"\$\$in\\\"\\n\"";
     $pat =~ s/^\s*(.*?)\s*$/$1/;
 
-    $pat =~ /^(s|tr|y)(.)/;
+    $pat =~ /^(s|tr|y|date)(.)/;
     my ($op, $sep) = ($1, $2 || '');
     my $esc = "\Q$sep\E";
     my ($parsed_ok, $regexp, $replacement, $flags);
@@ -273,7 +273,7 @@
             return 0;
         }
     } elsif ($pat
-        !~ /^(?:s|tr|y)$esc((?:\\.|[^\\$esc])*)$esc((?:\\.|[^\\$esc])*)$esc([a-z]*)$/
+        !~ /^(?:s|tr|y|date)$esc((?:\\.|[^\\$esc])*)$esc((?:\\.|[^\\$esc])*)$esc([a-z]*)$/
     ) {
         $sep = "/" if $sep eq '';
         uscan_warn "stop mangling: rule=\"$pat\"\n"
@@ -309,6 +309,20 @@
         } else {
             return 1;
         }
+    } elsif ($op eq 'date') {
+        uscan_debug "Converting date '$$in' to format: '$replacement'";
+        my $formatted_date = `date --date='$$in' +$replacement`;
+
+        if ($formatted_date == "") {
+            uscan_warn "error getting formatted date. Check input or format";
+            return 0;
+        }
+
+        $formatted_date =~ s/\n//;
+        uscan_debug "Formatted date $formatted_date.";
+
+        $$in = $formatted_date;
+        return 1;
     } else {
         $safeflags =~ tr/gix//cd;
         if ($safeflags ne $flags) {
