--- 12_program.txt	2014-07-27 21:43:33.064865074 +0200
+++ 12_program_proposal.txt	2014-07-27 22:28:47.098323241 +0200
@@ -84,7 +84,8 @@
 
 The "`echo`" command must be used with following cares since its implementation differs among shell builtin and external commands.
 
-- Avoid using command option "`-e`" and "`-E`".
+### HW: The line "avoid use of -e and -E" can be skipped, since the next
+### HW: line advises to not use ANY options EXCEPT -n.
 - Avoid using any command options except "`-n`".
 - Avoid using escape sequences in the string since their handling varies.
 
@@ -102,8 +103,10 @@
 shell parameter value
 ------------------------------------------------------------
 `$0`            name of the shell or shell script
-`$1`            first(1) shell argument
-`$9`            ninth(9) shell argument
+### HW: The notation "blabla(1)" is globally used for calling manpage.
+### HW: Change here to avoid confusion?
+`$1`            first (1.) shell argument
+`$9`            ninth (9.) shell argument
 `$#`            number of positional parameters
 `"$\*"`         `"$1 $2 $3 $4 ... "`
 `"$@"`          `"$1" "$2" "$3" "$4" ...`
@@ -112,7 +115,7 @@
 `$!`            PID of most recently started background job
 ------------------------------------------------------------
 
-Basic **parameter expansions** to remember are followings.
+Basic **parameter expansions** to remember are as follows.
 
 
 .List of shell parameter expansions
@@ -154,7 +157,7 @@
 
 NOTE: "`[`" is the equivalent of the `test` command, which evaluates its arguments up to "`]`" as a conditional expression.
 
-Basic **conditional idioms** to remember are followings.
+Basic **conditional idioms** to remember are the following.
 
 - "`<command> && <if_success_run_this_command_too> || true`"
 - "`<command> || <if_not_success_run_this_command_too> || true`"
@@ -342,7 +345,7 @@
 
 === Make
 
-http://en.wikipedia.org/wiki/Make_(software)[Make] is a utility to maintain groups of programs. Upon execution of `make`(1), `make` read the rule file, "`Makefile`", and updates a target if it depends on prerequisite files that have been modified since the target was last modified, or if the target does not exist.  The execution of these updates may occur concurrently.
+http://en.wikipedia.org/wiki/Make_(software)[Make] is an utility to maintain groups of programs. Upon execution of `make`(1), `make` read the rule file, "`Makefile`", and updates a target if it depends on prerequisite files that have been modified since the target was last modified, or if the target does not exist.  The execution of these updates may occur concurrently.
 
 The rule file syntax is the following.
 
