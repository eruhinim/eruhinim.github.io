From 815b8fdcceb9259ef186a35698cc41d25cf7ff56 Mon Sep 17 00:00:00 2001
From: Simon McVittie <simon.mcvittie@collabora.co.uk>
Date: Tue, 25 Oct 2016 19:38:02 +0100
Subject: [PATCH 3/6] qemu: put the shared directory in /run

If the virtual machine's root filesystem is read-only, we won't
be able to create /autopkgtest.

Signed-off-by: Simon McVittie <simon.mcvittie@collabora.co.uk>
---
 virt/autopkgtest-virt-qemu | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/virt/autopkgtest-virt-qemu b/virt/autopkgtest-virt-qemu
index cdae1de..d9c59a2 100755
--- a/virt/autopkgtest-virt-qemu
+++ b/virt/autopkgtest-virt-qemu
@@ -218,10 +218,10 @@ def setup_shared(shared_dir):
 
     term = VirtSubproc.get_unix_socket(os.path.join(workdir, 'ttyS1'))
 
-    term.send(b'''mkdir -p -m 1777 /autopkgtest
-mount -t 9p -o trans=virtio,access=any autopkgtest /autopkgtest
-chmod 1777 /autopkgtest
-touch /autopkgtest/done_shared
+    term.send(b'''mkdir -p -m 1777 /run/autopkgtest/shared
+mount -t 9p -o trans=virtio,access=any autopkgtest /run/autopkgtest/shared
+chmod 1777 /run/autopkgtest/shared
+touch /run/autopkgtest/shared/done_shared
 ''')
 
     with VirtSubproc.timeout(10, 'timed out on client shared directory setup'):
@@ -273,8 +273,8 @@ def setup_config(shared_dir):
     # eternally (like tail -f), but stop once either an "EOF" file exists and
     # we copied at least as many bytes as given in that EOF file (the first
     # arg), or an "exit flag" file exists.
-    # We don't run that from /autopkgtest/ as 9p from older QEMU versions is
-    # buggy and causes "invalid numeric result" errors on that.
+    # We don't run that from /run/autopkgtest/shared as 9p from older QEMU
+    # versions is buggy and causes "invalid numeric result" errors on that.
     term.send(b'''PYTHON=$(which python3) || PYTHON=$(which python); cat <<EOF > /bin/eofcat; chmod 755 /bin/eofcat
 #!$PYTHON
 import sys, os, fcntl, time, errno
@@ -321,7 +321,7 @@ dir_host = '%(dir)s'
 job_host = tempfile.mkdtemp(prefix='job.', dir=dir_host)
 atexit.register(shutil.rmtree, job_host)
 os.chmod(job_host, 0o755)
-job_guest = '/autopkgtest/' + os.path.basename(job_host)
+job_guest = '/run/autopkgtest/shared/' + os.path.basename(job_host)
 running = True
 
 def shovel(fin, fout, flagfile_on_eof=None):
@@ -495,7 +495,7 @@ def determine_normal_user(shared_dir):
     term = VirtSubproc.get_unix_socket(os.path.join(workdir, 'ttyS1'))
     term.send(b"getent passwd | sort -t: -nk3 | "
               b"awk -F: '{if ($3 >= 500) { print $1; exit } }'"
-              b"> /autopkgtest/normal_user\n")
+              b"> /run/autopkgtest/shared/normal_user\n")
     with VirtSubproc.timeout(5, 'timed out on determining normal user'):
         outfile = os.path.join(shared_dir, 'normal_user')
         while not os.path.exists(outfile):
@@ -580,7 +580,7 @@ def hook_open():
 def hook_downtmp(path):
     # we would like to do this, but 9p is currently way too slow for big source
     # trees
-    # downtmp = '/autopkgtest/tmp'
+    # downtmp = '/run/autopkgtest/shared/tmp'
     # VirtSubproc.check_exec(['mkdir', '-m', '1777', downtmp], downp=True)
     return VirtSubproc.downtmp_mktemp(path)
 
-- 
2.10.1

