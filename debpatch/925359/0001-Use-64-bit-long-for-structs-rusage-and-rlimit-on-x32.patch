From bb9b66b56163b868b857eeb925d4bcbdf76926ea Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20=C3=9Cbelacker?= <bernhardu@mailbox.org>
Date: Sun, 24 Mar 2019 13:33:00 +0100
Subject: [PATCH] Use 64-bit long for structs rusage and rlimit on x32, add
 simple tests for getrusage and getrlimit.

https://bugs.debian.org/925359
---
 debian/unittests/getrlimit.c | 18 ++++++++++++++++++
 debian/unittests/getrusage.c | 18 ++++++++++++++++++
 debian/unittests/suite.sh    |  2 ++
 include/sys/resource.h       | 33 +++++++++++++++++++++++++++++++++
 4 files changed, 71 insertions(+)
 create mode 100644 debian/unittests/getrlimit.c
 create mode 100644 debian/unittests/getrusage.c

diff --git a/debian/unittests/getrlimit.c b/debian/unittests/getrlimit.c
new file mode 100644
index 0000000..7bb6728
--- /dev/null
+++ b/debian/unittests/getrlimit.c
@@ -0,0 +1,18 @@
+#include <sys/time.h>
+#include <sys/resource.h>
+#include <stdio.h>
+#include <errno.h>
+
+int main()
+{
+  int r;
+  struct rlimit rl;
+
+  r = getrlimit(RLIMIT_STACK, &rl);
+  if (r != 0) {
+    fprintf(stderr, "error: getrusage(RUSAGE_SELF) didn't succeed: %d\n", errno);
+    return 1;
+  }
+
+  return 0;
+}
diff --git a/debian/unittests/getrusage.c b/debian/unittests/getrusage.c
new file mode 100644
index 0000000..927ab8e
--- /dev/null
+++ b/debian/unittests/getrusage.c
@@ -0,0 +1,18 @@
+#include <sys/time.h>
+#include <sys/resource.h>
+#include <stdio.h>
+#include <errno.h>
+
+int main()
+{
+  int r;
+  struct rusage ru;
+
+  r = getrusage(RUSAGE_SELF, &ru);
+  if (r != 0) {
+    fprintf(stderr, "error: getrusage(RUSAGE_SELF) didn't succeed: %d\n", errno);
+    return 1;
+  }
+
+  return 0;
+}
diff --git a/debian/unittests/suite.sh b/debian/unittests/suite.sh
index abbf6c1..30f9182 100755
--- a/debian/unittests/suite.sh
+++ b/debian/unittests/suite.sh
@@ -17,6 +17,8 @@ debian/unittests/atexit.c
 debian/unittests/fopen.c
 debian/unittests/socketfns.c
 debian/unittests/pselect.c
+debian/unittests/getrusage.c
+debian/unittests/getrlimit.c
 test/alarm.c
 test/bsearch.c
 test/byteswap.c
diff --git a/include/sys/resource.h b/include/sys/resource.h
index b05b78f..bae131e 100644
--- a/include/sys/resource.h
+++ b/include/sys/resource.h
@@ -10,6 +10,37 @@ __BEGIN_DECLS
 #define RUSAGE_CHILDREN	(-1)
 #define RUSAGE_BOTH	(-2)		/* sys_wait4() uses this */
 
+
+#if defined( __x86_64__ ) && defined( __ILP32__ )
+
+/* for X32 */
+
+struct	rusage {
+  struct timeval ru_utime;	/* user time used */
+  struct timeval ru_stime;	/* system time used */
+  int64_t ru_maxrss;		/* maximum resident set size */
+  int64_t ru_ixrss;		/* integral shared memory size */
+  int64_t ru_idrss;		/* integral unshared data size */
+  int64_t ru_isrss;		/* integral unshared stack size */
+  int64_t ru_minflt;		/* page reclaims */
+  int64_t ru_majflt;		/* page faults */
+  int64_t ru_nswap;		/* swaps */
+  int64_t ru_inblock;		/* block input operations */
+  int64_t ru_oublock;		/* block output operations */
+  int64_t ru_msgsnd;		/* messages sent */
+  int64_t ru_msgrcv;		/* messages received */
+  int64_t ru_nsignals;		/* signals received */
+  int64_t ru_nvcsw;		/* voluntary context switches */
+  int64_t ru_nivcsw;		/* involuntary " */
+};
+
+struct rlimit {
+  uint64_t rlim_cur;
+  uint64_t rlim_max;
+};
+
+#else
+
 struct	rusage {
   struct timeval ru_utime;	/* user time used */
   struct timeval ru_stime;	/* system time used */
@@ -34,6 +65,8 @@ struct rlimit {
   unsigned long	rlim_max;
 };
 
+#endif
+
 #define PRIO_MIN	(-20)
 #define PRIO_MAX	20
 
-- 
2.20.1

