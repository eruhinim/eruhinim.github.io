diff -Naur --exclude='autom4te.*' --exclude=ccache.1 --exclude=ccache-man.html --exclude=configure --exclude=config.sub --exclude='*.swp' ccache-2.4-16applied/ccache.yo ccache-2.4/ccache.yo
--- ccache-2.4-16applied/ccache.yo	2008-12-07 11:58:15.000000000 +0000
+++ ccache-2.4/ccache.yo	2008-12-07 12:51:52.000000000 +0000
@@ -20,14 +20,14 @@
 Here is a summary of the options to ccache.
 
 verb(
--s                      show statistics summary
--z                      zero statistics
--c                      run a cache cleanup
--C                      clear the cache completely
--F <maxfiles>           set maximum files in cache
--M <maxsize>            set maximum size of cache (use G, M or K)
--h                      this help page
--V                      print version number
+-s, --show-stats        show statistics summary
+-z, --zero-stats        zero statistics
+-c, --cleanup           run a cache cleanup
+-C, --clear             clear the cache completely
+-F <n>, --max-files=<n> set maximum files in cache
+-M <n>, --max-size=<n>  set maximum size of cache (use G, M or K)
+-h, --help              this help page
+-V, --version           print version number
 )
 
 manpageoptions()
@@ -38,32 +38,32 @@
 documentation.
 
 startdit()
-dit(bf(-h)) Print a options summary page
+dit(bf(-h, --help)) Print a options summary page
 
-dit(bf(-s)) Print the current statistics summary for the cache. The
+dit(bf(-s, --show-stats)) Print the current statistics summary for the cache. The
 statistics are stored spread across the subdirectories of the
 cache. Using "ccache -s" adds up the statistics across all
 subdirectories and prints the totals.
 
-dit(bf(-z)) Zero the cache statistics. 
+dit(bf(-z, --zero-stats)) Zero the cache statistics. 
 
-dit(bf(-V)) Print the ccache version number
+dit(bf(-V, --version)) Print the ccache version number
 
-dit(bf(-c)) Clean the cache and re-calculate the cache file count and
+dit(bf(-c, --cleanup)) Clean the cache and re-calculate the cache file count and
 size totals. Normally the -c option should not be necessary as ccache
 keeps the cache below the specified limits at runtime and keeps
 statistics up to date on each compile. This option is mostly useful
 if you manually modify the cache contents or believe that the cache
 size statistics may be inaccurate.
 
-dit(bf(-C)) Clear the entire cache, removing all cached files.
+dit(bf(-C, --clear)) Clear the entire cache, removing all cached files.
 
-dit(bf(-F maxfiles)) This sets the maximum number of files allowed in
+dit(bf(-F <maxfiles>, --max-files=<maxfiles>)) This sets the maximum number of files allowed in
 the cache. The value is stored inside the cache directory and applies
 to all future compiles. Due to the way the value is stored the actual
 value used is always rounded down to the nearest multiple of 16.
 
-dit(bf(-M maxsize)) This sets the maximum cache size. You can specify
+dit(bf(-M <maxsize>, --max-size=<maxsize>)) This sets the maximum cache size. You can specify
 a value in gigabytes, megabytes or kilobytes by appending a G, M or K
 to the value. The default is gigabytes. The actual value stored is
 rounded down to the nearest multiple of 16 kilobytes.
@@ -340,12 +340,6 @@
 it() ccache avoids a double call to cpp on a cache miss
 )
 
-manpagesection(BUGS)
-
-When the cache is stored on an NFS filesystem, the filesystem must be
-exported with the bf(no_subtree_check) option to make renames between
-directories reliable.
-
 manpagesection(CREDITS)
 
 Thanks to the following people for their contributions to ccache
diff -Naur --exclude='autom4te.*' --exclude=ccache.1 --exclude=ccache-man.html --exclude=configure --exclude=config.sub --exclude='*.swp' ccache-2.4-16applied/config.h.in ccache-2.4/config.h.in
--- ccache-2.4-16applied/config.h.in	2008-12-07 11:58:15.000000000 +0000
+++ ccache-2.4/config.h.in	2008-12-07 12:24:11.000000000 +0000
@@ -1,5 +1,8 @@
 /* config.h.in.  Generated from configure.in by autoheader.  */
 
+/* Define to 1 if you would like to have zlib compression for ccache. */
+#undef ENABLE_ZLIB
+
 /* Define to 1 if you have the `asprintf' function. */
 #undef HAVE_ASPRINTF
 
@@ -110,6 +113,3 @@
 
 /* Define _GNU_SOURCE so that we get all necessary prototypes */
 #undef _GNU_SOURCE
-
-/* Define to 1 if you like to have zlib compression for the ccache. */
-#undef ENABLE_ZLIB
diff -Naur --exclude='autom4te.*' --exclude=ccache.1 --exclude=ccache-man.html --exclude=configure --exclude=config.sub --exclude='*.swp' ccache-2.4-16applied/configure.in ccache-2.4/configure.in
--- ccache-2.4-16applied/configure.in	2008-12-07 11:58:15.000000000 +0000
+++ ccache-2.4/configure.in	2008-12-07 12:23:58.000000000 +0000
@@ -2,6 +2,7 @@
 
 AC_INIT()
 AC_PREREQ(2.52)
+AC_CONFIG_SRCDIR([ccache.h])
 
 AC_MSG_NOTICE([Configuring ccache])
 
@@ -44,6 +45,7 @@
    AC_DEFINE(HAVE_COMPAR_FN_T, 1, [ ])
 fi
 
+dnl Note: This could be replaced by AC_FUNC_SNPRINTF() in the autoconf macro archive
 AC_CACHE_CHECK([for C99 vsnprintf],ccache_cv_HAVE_C99_VSNPRINTF,[
 AC_TRY_RUN([
 #include <sys/types.h>
@@ -70,12 +72,14 @@
 fi
 
 dnl Check for zlib.
+dnl Note: This could be replaced by CHECK_ZLIB() in the autoconf macro archive
 AC_ARG_ENABLE([zlib],
               AS_HELP_STRING([--enable-zlib], [enable zlib support for ccache compression]),,
               [enable_zlib=yes])
 
 if test x"$enable_zlib" = x"yes"; then
-    AC_CHECK_HEADER(zlib.h, AC_CHECK_LIB(z, gzdopen, LIBS="-lz $LIBS"; AC_DEFINE(ENABLE_ZLIB)))
+    AC_CHECK_HEADER(zlib.h, AC_CHECK_LIB(z, gzdopen, [LIBS="-lz $LIBS"
+						      AC_DEFINE([ENABLE_ZLIB], 1, [Define to 1 if you would like to have zlib compression for ccache.]) ] ))
 fi
 
 AC_CONFIG_FILES([Makefile])
diff -Naur --exclude='autom4te.*' --exclude=ccache.1 --exclude=ccache-man.html --exclude=configure --exclude=config.sub --exclude='*.swp' ccache-2.4-16applied/Makefile.in ccache-2.4/Makefile.in
--- ccache-2.4-16applied/Makefile.in	2008-12-07 11:58:15.000000000 +0000
+++ ccache-2.4/Makefile.in	2008-12-07 12:16:26.000000000 +0000
@@ -1,3 +1,4 @@
+datarootdir = @datarootdir@
 srcdir=@srcdir@
 VPATH=@srcdir@
 
