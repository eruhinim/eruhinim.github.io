Index: apt-show-versions
===================================================================
--- apt-show-versions	(revision 2562)
+++ apt-show-versions	(revision 2563)
@@ -329,15 +329,34 @@
 
 sub print_package {
     my ($package) = @_;
+    my ($pkgname, $archname);
 
     if ($package =~ m/:/) {
-        my ($pkgname, $arch) = split /:/, $package;
-        print_package_internal($pkgname, $arch);
+        ($pkgname, $archname) = split /:/, $package;
     } else {
-        my $pkgs = ($opts{'regex-all'}) ? $apackages : $ipackages;
-        foreach my $arch (sort keys $pkgs->{$package}) {
-            print_package_internal($package, $arch);
+        $pkgname = $package;
+    }
+    
+    my $pkgs = ($opts{'regex-all'}) ? $apackages : $ipackages;
+
+    if ($archname and ! defined $apackages->{$pkgname}{$archname}) {
+        printf("%s not available for architecture %s\n", $pkgname, $archname);
+    } elsif (! defined $pkgs->{$pkgname}) {
+        if ($mode != $MODE_SINGLE || $archname) {
+            printf("%s not installed\n", $package);
+        } elsif (keys(%{$apackages->{$pkgname}})) {
+            my $archlist = "";
+            foreach my $a (sort keys(%{$apackages->{$pkgname}})) {
+                $archlist .= ($archlist ? ", $a" : "$a");
+            }
+            printf("%s not installed (available for: %s)\n", $pkgname, $archlist);
+        } else {
+            printf("%s not installed (not available)\n", $pkgname);
         }
+    } else {
+        foreach my $arch ($archname or sort keys $pkgs->{$pkgname}) {
+            print_package_internal($pkgname, $arch);
+        }
     }
 }
 
