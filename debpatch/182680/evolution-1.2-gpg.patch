Index: ChangeLog
===================================================================
RCS file: /cvs/gnome/evolution/camel/ChangeLog,v
retrieving revision 1.1681.2.9
diff -u -r1.1681.2.9 ChangeLog
--- ChangeLog	24 Feb 2003 03:48:29 -0000	1.1681.2.9
+++ ChangeLog	27 Feb 2003 18:51:19 -0000
@@ -1,3 +1,19 @@
+2003-02-27  Jeffrey Stedfast  <fejj@ximian.com>
+
+	* camel-stream-filter.c: Add a 'flushed' state variable to the
+	private struct.
+	(do_read): Set p->flushed to TRUE after we call
+	camel_mime_filter_complete() on all the filters.
+	(do_reset): Set p->flushed to FALSE.
+	(do_eos): Make sure the filters have been flushed before returning
+	that the stream is at EOS.
+
+	* camel-mime-filter-canon.c (complete): Don't add a eol -
+	otherwise we will fail to verify some mutt signatures that do not
+	have a blank line before the boundary line (and note that the last
+	\n before the boundary really belongs to the boundary anyway) so
+	#if 0 this code out for now.
+
 2003-02-22  Jeffrey Stedfast  <fejj@ximian.com>
 
 	* providers/sendmail/camel-sendmail-transport.c
Index: camel-mime-filter-canon.c
===================================================================
RCS file: /cvs/gnome/evolution/camel/camel-mime-filter-canon.c,v
retrieving revision 1.2.8.1
diff -u -r1.2.8.1 camel-mime-filter-canon.c
--- camel-mime-filter-canon.c	21 Jan 2003 03:07:05 -0000	1.2.8.1
+++ camel-mime-filter-canon.c	27 Feb 2003 18:51:19 -0000
@@ -195,6 +195,8 @@
 			while (o>starto && (o[-1] == ' ' || o[-1] == '\t' || o[-1]=='\r'))
 				o--;
 		}
+		
+#if 0
 		/* check end of line canonicalisation */
 		if (o>starto) {
 			if (flags & CAMEL_MIME_FILTER_CANON_CRLF) {
@@ -208,7 +210,8 @@
 
 		/* and always finish with an eol */
 		*o++ = '\n';
-
+#endif
+		
 		*outlen = o - *out;
 		
 		f->backlen = 0;
Index: camel-stream-filter.c
===================================================================
RCS file: /cvs/gnome/evolution/camel/camel-stream-filter.c,v
retrieving revision 1.24
diff -u -r1.24 camel-stream-filter.c
--- camel-stream-filter.c	19 Jul 2002 11:25:02 -0000	1.24
+++ camel-stream-filter.c	27 Feb 2003 18:51:19 -0000
@@ -19,11 +19,16 @@
  * Boston, MA 02111-1307, USA.
  */
 
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#include <stdio.h>
 #include <string.h>
 #include "camel-stream-filter.h"
 
 #define d(x)
-/*#include <stdio.h>*/
 
 /* use my malloc debugger? */
 /*extern void g_check(void *mp);*/
@@ -45,7 +50,8 @@
 	char *filtered;		/* the filtered data */
 	size_t filteredlen;
 
-	int last_was_read;	/* was the last op read or write? */
+	int last_was_read:1;	/* was the last op read or write? */
+	int flushed:1           /* were the filters flushed? */
 };
 
 #define READ_PAD (128)		/* bytes padded before buffer */
@@ -90,6 +96,7 @@
 	p->realbuffer = g_malloc(READ_SIZE + READ_PAD);
 	p->buffer = p->realbuffer + READ_PAD;
 	p->last_was_read = TRUE;
+	p->flushed = FALSE;
 }
 
 static void
@@ -234,6 +241,7 @@
 					f = f->next;
 				}
 				size = p->filteredlen;
+				p->flushed = TRUE;
 			}
 			if (size <= 0)
 				return size;
@@ -371,7 +379,10 @@
 
 	if (p->filteredlen > 0)
 		return FALSE;
-
+	
+	if (!p->flushed)
+		return FALSE;
+	
 	return camel_stream_eos(filter->source);
 }
 
@@ -383,7 +394,8 @@
 	struct _filter *f;
 
 	p->filteredlen = 0;
-
+	p->flushed = FALSE;
+	
 	/* and reset filters */
 	f = p->filters;
 	while (f) {
