Index: scripts/debchange.1
===================================================================
--- scripts/debchange.1	(revision 2051)
+++ scripts/debchange.1	(working copy)
@@ -318,6 +318,14 @@
 multi-maintainer mode is in use; you will probably wish to check the
 changelog manually before uploading it in such cases.
 .TP
+.BR \-\-controlmaint ", " \-M
+Use maintainer details from the debian/control Maintainer field rather than
+relevant environment variables (\fBDEBFULLNAME\fR/\fBDEBEMAIL\fR etc.). This
+option might be useful to restore details of the main maintainer in the
+changelog trailer after a bogus edit (e.g. when \fB\-m\fR was intended but
+forgot) or when releasing a package in the name of the main maintainer (e.g.
+the team).
+.TP
 .BR \-\-[no]mainttrailer ", " \-t
 If mainttrailer is set, it will avoid modifying the existing changelog
 trailer line (i.e. the maintainer and date-stamp details), unless
Index: scripts/debchange.pl
===================================================================
--- scripts/debchange.pl	(revision 2051)
+++ scripts/debchange.pl	(working copy)
@@ -158,6 +158,8 @@
          indicate if multiple maintainers are now involved (default: do so)
   -m, --maintmaint
          Don\'t change (maintain) the maintainer details in the changelog entry
+  -M, --controlmaint
+         Use maintainer name and email from the debian/control Maintainer field
   -t, --mainttrailer
          Don\'t change (maintain) the trailer line in the changelog entry; i.e.
          maintain the maintainer and date/time details
@@ -298,7 +300,7 @@
 # with older debchange versions.
 my ($opt_help, $opt_version);
 my ($opt_i, $opt_a, $opt_e, $opt_r, $opt_v, $opt_b, $opt_d, $opt_D, $opt_u, $opt_force_dist);
-my ($opt_n, $opt_bn, $opt_qa, $opt_s, $opt_bpo, $opt_l, $opt_c, $opt_m, $opt_create, $opt_package, @closes);
+my ($opt_n, $opt_bn, $opt_qa, $opt_s, $opt_bpo, $opt_l, $opt_c, $opt_m, $opt_M, $opt_create, $opt_package, @closes);
 my ($opt_news);
 my ($opt_ignore, $opt_level, $opt_regex, $opt_noconf, $opt_empty);
 
@@ -333,6 +335,7 @@
 	   "multimaint!" => \$opt_multimaint,
 	   "multi-maint!" => \$opt_multimaint,
 	   "m|maintmaint" => \$opt_m,
+	   "M|controlmaint" => \$opt_M,
 	   "t|mainttrailer!" => \$opt_t,
 	   "ignore-dirname" => \$opt_ignore,
 	   "check-dirname-level=s" => \$opt_level,
@@ -668,7 +671,7 @@
 }
 
 # Now use the gleaned values to detemine our MAINTAINER and EMAIL values
-if (! $opt_m) {
+if (! $opt_m and ! $opt_M) {
     if (exists $env{'DEBFULLNAME'}) {
 	$MAINTAINER = $env{'DEBFULLNAME'};
     } elsif (exists $env{'NAME'}) {
@@ -713,13 +716,32 @@
 	$EMAIL = $addr if $addr;
     }
     # Otherwise, $EMAIL retains its default value of the last changelog entry
-} # if (! $opt_m)
+} # if (! $opt_m and ! $opt_M)
 
+if ($opt_M) {
+    if (-f 'debian/control') {
+	if (have_lpdc()) {
+	    my $parser = new Parse::DebControl;
+	    my $deb822 = $parser->parse_file('debian/control', {stripComments => 'true'});
+	    my $maintainer = decode_utf8($deb822->[0]->{'Maintainer'});
+	    if ($maintainer =~ /^(.*)\s+<(.*)>$/) {
+		$MAINTAINER = $1;
+		$EMAIL = $2;
+	    } else {
+		fatal "$progname: invalid debian/control Maintainer field value\n";
+	    }
+	} else {
+	    fatal "$progname: unable to get maintainer from debian/control: $lpdc_broken\n";
+	}
+    } else {
+	fatal "Missing file debian/control";
+    }
+}
 #####
 
 if ($opt_auto_nmu eq 'yes' and ! $opt_v and ! $opt_l and ! $opt_s and 
     ! $opt_qa and ! $opt_bpo and ! $opt_bn and ! $opt_n and ! $opt_c and
-    ! (exists $ENV{'CHANGELOG'} and length $ENV{'CHANGELOG'}) and
+    ! (exists $ENV{'CHANGELOG'} and length $ENV{'CHANGELOG'}) and ! $opt_M and
     ! $opt_create and ! $opt_a_passed and ! $opt_r and ! $opt_e and
     ! ($opt_release_heuristic eq 'changelog' and
 	$changelog{'Distribution'} eq 'UNRELEASED' and ! $opt_i_passed)) {
