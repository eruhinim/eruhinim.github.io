diff --git a/anna.c b/anna.c
index 4b68816..1dd4461 100644
--- a/anna.c
+++ b/anna.c
@@ -8,6 +8,49 @@ static char *running_kernel = NULL;
 static const char *subarchitecture;
 static int quiet = 0, verbose = 0;
 
+/* If any package name appears more than once in the Packages file,
+ * keep only the last one. */
+void remove_duplicates (di_packages *packages) {
+	di_slist_node *n1, *n2, *n2_prev;
+	di_package *p1, *p2;
+
+	for (n1 = packages->list.head; n1; n1 = n1->next) {
+		n2_prev = n1;
+		/* compare n1 to each node after it, as n2 */
+		for (n2 = n1->next; n2; n2 = n2->next) {
+			/* compare package name */
+			p1 = n1->data;
+			p2 = n2->data;
+			if (strcmp(p1->package, p2->package) != 0) {
+				/* keep this node;  remember the previous one */
+				n2_prev = n2;
+				continue;
+			}
+
+			di_log (DI_LOG_LEVEL_DEBUG,
+			        "ignoring duplicate Packages entry for %s",
+			        p1->package);
+
+			/* delete p1, move p2 into n1 */
+/* XXX:			di_package_destroy(p1); */
+			n1->data = p1 = p2;
+			n2->data = p2 = NULL;
+
+			/* update list bottom, if n2 was the last entry */
+			if (packages->list.bottom == n2) {
+				packages->list.bottom = n2_prev;
+			}
+
+			/* unlink n2 from the list and delete it */
+			n2_prev->next = n2->next;
+/* XXX:			di_free(n2); */
+
+			/* rewind to the previous node */
+			n2 = n2_prev;
+		}
+	}
+}
+
 di_packages *get_packages (void) {
 	di_packages_allocator *packages_allocator = di_system_packages_allocator_alloc();
 	di_packages *packages = retriever_packages(packages_allocator);
@@ -26,6 +69,7 @@ di_packages *get_packages (void) {
 		}
 	}
 
+	remove_duplicates(packages);
 	return packages;
 }
 
