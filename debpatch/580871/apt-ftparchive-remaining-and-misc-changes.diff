=== modified file 'doc/apt-ftparchive.1.xml'
--- doc/apt-ftparchive.1.xml	2009-12-12 15:32:18 +0000
+++ doc/apt-ftparchive.1.xml	2010-05-09 13:45:28 +0000
@@ -15,7 +15,7 @@
    &apt-email;
    &apt-product;
    <!-- The last update date -->
-   <date>17 August 2009</date>
+   <date>09 May 2010</date>
  </refentryinfo>
  
  <refmeta>
@@ -54,8 +54,8 @@
  
  <refsect1><title>Description</title>
    <para><command>apt-ftparchive</command> is the command line tool that generates the index 
-   files that APT uses to access a distribution source. The index files should 
-   be generated on the origin site based on the content of that site.</para>
+   files that APT uses to access a distributions packages. The index files should 
+   be generated on the distributions master package server based on the content of that site.</para>
 
    <para><command>apt-ftparchive</command> is a superset of the &dpkg-scanpackages; program,
    incorporating its entire functionality via the <literal>packages</literal> command.
@@ -63,6 +63,7 @@
    elaborate means to 'script' the generation process for a complete 
    archive.</para>
 
+    <!-- FIXME: is this paragraph still true? specifically external programs -->
    <para>Internally <command>apt-ftparchive</command> can make use of binary databases to 
    cache the contents of a .deb file and it does not rely on any external 
    programs aside from &gzip;. When doing a full generate it automatically 
@@ -74,10 +75,10 @@
    <variablelist>
      <varlistentry><term>packages</term>
      <listitem><para>
-     The packages command generates a package file from a directory tree. It
-     takes the given directory and recursively searches it for .deb files, 
-     emitting a package record to stdout for each. This command is 
-     approximately equivalent to &dpkg-scanpackages;.</para>
+     The <literal>packages</literal> command generates a package index file from a directory tree.
+     It takes the given directory and recursively searches it for .deb files,
+     emitting a package record to stdout for each. This command is approximately
+     equivalent to &dpkg-scanpackages;.</para>
 
      <para>The option <option>--db</option> can be used to specify a binary caching DB.</para></listitem>
      </varlistentry>
@@ -96,8 +97,8 @@
 
      <varlistentry><term>contents</term>
      <listitem><para>
-     The <literal>contents</literal> command generates a contents file from a directory tree. It
-     takes the given directory and recursively searches it for .deb files, 
+     The <literal>contents</literal> command generates a contents file from a directory tree.
+     It takes the given directory and recursively searches it for .deb files, 
      and reads the file list from each file. It then sorts and writes to stdout
      the list of files matched to packages. Directories are not written to 
      the output. If multiple packages own the same file then each package is
@@ -108,8 +109,8 @@
 
      <varlistentry><term>release</term>
      <listitem><para>
-     The <literal>release</literal> command generates a Release file from a
-     directory tree. It recursively searches the given directory for
+     The <literal>release</literal> command generates a Release file from a directory tree.
+     It recursively searches the given directory for
      Packages, Packages.gz, Packages.bz2, Sources, Sources.gz,
      Sources.bz2, Release and md5sum.txt files.  It then writes to
      stdout a Release file containing an MD5 digest and SHA1 digest
@@ -175,7 +176,7 @@
       
       <varlistentry><term>CacheDir</term>
       <listitem><para>
-      Specifies the location of the cache files</para></listitem>
+      Specifies the location of the files for the binary caches.</para></listitem>
       </varlistentry>
       
       <varlistentry><term>FileListDir</term>
@@ -248,8 +249,9 @@
      
      <variablelist>     
       <varlistentry><term>MaxContentsChange</term>
+      <!-- FIXME: what is the default, is there one? tell people -->
       <listitem><para>
-      Sets  the number of kilobytes of contents 
+      Sets the number of kilobytes of contents
       files that are generated each day. The contents files are round-robined
       so that over several days they will all be rebuilt.</para></listitem>
       </varlistentry>
@@ -343,13 +345,15 @@
      The <literal>Tree</literal> section takes a scope tag which sets the 
      <literal>$(DIST)</literal> variable and defines the root of the tree 
      (the path is prefixed by <literal>ArchiveDir</literal>).
-     Typically this is a setting such as <filename>dists/woody</filename>.</para>
+     Typically this is a setting such as <filename>dists/squeeze</filename>.</para>
      <para>
      All of the settings defined in the <literal>TreeDefault</literal> section can be
      use in a <literal>Tree</literal> section as well as three new variables.</para>
      <para>
      When processing a <literal>Tree</literal> section <command>apt-ftparchive</command> 
      performs an operation similar to:
+     <!-- FIXME: this doesnt appear in the man page -->
+     <!-- use <literallayout>? -->
      <programlisting>
 for i in Sections do 
    for j in Architectures do
@@ -397,11 +401,11 @@
    
    <refsect2><title>BinDirectory Section</title>
      <para>
-     The <literal>bindirectory</literal> section defines a binary directory tree 
+     The <literal>BinDirectory</literal> section defines a binary directory tree
      with no special structure. The scope tag specifies the location of 
      the binary directory and the settings are similar to the <literal>Tree</literal> 
-     section with no substitution variables or
-     <literal>Section</literal><literal>Architecture</literal> settings.</para>
+     section with no substitution variables,
+     <literal>Section</literal> or<literal>Architecture</literal> settings.</para>
      <variablelist>
       <varlistentry><term>Packages</term>
       <listitem><para>
@@ -415,8 +419,9 @@
       </varlistentry>
       
       <varlistentry><term>Contents</term>
+      <!-- FIXME: whats the deal with this? -->
       <listitem><para>
-      Sets the Contents file output. (optional)</para></listitem>
+      Sets the Contents file output.</para></listitem>
       </varlistentry>
       
       <varlistentry><term>BinOverride</term>
@@ -445,6 +450,7 @@
       </varlistentry>
       
       <varlistentry><term>PathPrefix</term>
+      <!-- FIXME: when is this useful? -->
       <listitem><para>
       Appends a path to all the output paths.</para></listitem>
       </varlistentry>
@@ -478,7 +484,7 @@
  <refsect1><title>The Source Override File</title>
    <para>
    The source override file is fully compatible with &dpkg-scansources;. It
-   contains 2 fields separated by spaces. The first fields is the source 
+   contains 2 fields separated by spaces. The first field is the source
    package name, the second is the section to assign it.</para>
  </refsect1>   
 
@@ -560,7 +566,7 @@
 
 <refsect1><title>Examples</title>
 
-<para>To create a compressed Packages file for a directory containing
+<para>To create a compressed Packages index file for a directory containing
 binary packages (.deb):
 
 <programlisting>

=== modified file 'ftparchive/apt-ftparchive.cc'
--- ftparchive/apt-ftparchive.cc	2009-12-18 16:08:45 +0000
+++ ftparchive/apt-ftparchive.cc	2010-05-09 13:24:37 +0000
@@ -807,7 +807,7 @@
    }
    stable_sort(PkgList.begin(),PkgList.end(),PackageMap::ContentsCompare());
    
-   /* Now for Contents.. The process here is to do a make-like dependency
+   /* Now for Contents. The process here is to do a make-like dependency
       check. Each contents file is verified to be newer than the package files
       that describe the debs it indexes. Since the package files contain 
       hashes of the .debs this means they have not changed either so the 
@@ -815,7 +815,7 @@
    unsigned long MaxContentsChange = Setup.FindI("Default::MaxContentsChange",UINT_MAX)*1024;
    for (vector<PackageMap>::iterator I = PkgList.begin(); I != PkgList.end(); I++)
    {
-      // This record is not relevent
+      // This record is not relevant
       if (I->ContentsDone == true ||
 	  I->Contents.empty() == true)
 	 continue;

