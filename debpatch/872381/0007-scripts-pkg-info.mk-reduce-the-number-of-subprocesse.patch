From ba350d8115fc0cfe4e10358a73bc7403554dd898 Mon Sep 17 00:00:00 2001
From: Nicolas Boulenguez <nicolas@debian.org>
Date: Wed, 10 Jan 2024 20:33:27 +0100
Subject: [PATCH 07/10] scripts/pkg-info.mk: reduce the number of subprocesses

Ensure that dpkg-parsechangelog is only called at most once.

If so, call it once and cache all results for future expansions.
---
 scripts/mk/pkg-info.mk | 46 ++++++++++++++++++++++++++++++++++--------
 1 file changed, 38 insertions(+), 8 deletions(-)

diff --git a/scripts/mk/pkg-info.mk b/scripts/mk/pkg-info.mk
index 5b38d84e9..5b3fd5d8f 100644
--- a/scripts/mk/pkg-info.mk
+++ b/scripts/mk/pkg-info.mk
@@ -12,20 +12,50 @@
 #   SOURCE_DATE_EPOCH: source release date as seconds since the epoch, as
 #     specified by <https://reproducible-builds.org/specs/source-date-epoch/>
 #     (since dpkg 1.18.8).
+#     If it is undefined, the date of the latest changelog entry is used.
+#     In both cases, the value is exported.
 
 ifndef dpkg_pkg-info.mk_included
 dpkg_pkg-info.mk_included :=
 
-dpkg_late_eval ?= $(or $(value DPKG_CACHE_$(1)),$(eval DPKG_CACHE_$(1) := $(shell $(2)))$(value DPKG_CACHE_$(1)))
+# This variable is only expanded on demand, and we ensure that it
+# happens at most once..
+dpkg-parsechangelog_run = $(eval $(shell dpkg-parsechangelog \
+                                   | sed -n '$(dpkg-parsechangelog_sed)'))
 
-DEB_SOURCE = $(call dpkg_late_eval,DEB_SOURCE,dpkg-parsechangelog -SSource)
-DEB_VERSION = $(call dpkg_late_eval,DEB_VERSION,dpkg-parsechangelog -SVersion)
-DEB_VERSION_EPOCH_UPSTREAM = $(call dpkg_late_eval,DEB_VERSION_EPOCH_UPSTREAM,echo '$(DEB_VERSION)' | sed -e 's/-[^-]*$$//')
-DEB_VERSION_UPSTREAM_REVISION = $(call dpkg_late_eval,DEB_VERSION_UPSTREAM_REVISION,echo '$(DEB_VERSION)' | sed -e 's/^[0-9]*://')
-DEB_VERSION_UPSTREAM = $(call dpkg_late_eval,DEB_VERSION_UPSTREAM,echo '$(DEB_VERSION_EPOCH_UPSTREAM)' | sed -e 's/^[0-9]*://')
-DEB_DISTRIBUTION = $(call dpkg_late_eval,DEB_DISTRIBUTION,dpkg-parsechangelog -SDistribution)
+dpkg-parsechangelog_sed := \
+  s/^Source: \(.*\)/\
+    $$(eval DEB_SOURCE                    := \1)/p;\
+  s/^Version: \([0-9]*:\)\?\(.*\)\(-[^-]*\)$$/\
+    $$(eval DEB_VERSION                   := \1\2\3)\
+    $$(eval DEB_VERSION_EPOCH_UPSTREAM    := \1\2)\
+    $$(eval DEB_VERSION_UPSTREAM_REVISION := \2\3)\
+    $$(eval DEB_VERSION_UPSTREAM          := \2)/p;\
+  s/^Distribution: \(.*\)/\
+    $$(eval DEB_DISTRIBUTION              := \1)/p
 
-SOURCE_DATE_EPOCH ?= $(call dpkg_late_eval,SOURCE_DATE_EPOCH,dpkg-parsechangelog -STimestamp)
+ifdef SOURCE_DATE_EPOCH
+  # dpkg-buildpackage exports SOURCE_DATE_EPOCH.
+
+  # Only parse the changelog if a variable is actually used,
+  # but then replace each recursive definition with a non-recursive one
+  # (and of course return the asked value).
+  DEB_SOURCE                    = $(dpkg-parsechangelog_run)$(DEB_SOURCE)
+  DEB_VERSION                   = $(dpkg-parsechangelog_run)$(DEB_VERSION)
+  DEB_VERSION_EPOCH_UPSTREAM    = \
+    $(dpkg-parsechangelog_run)$(DEB_VERSION_EPOCH_UPSTREAM)
+  DEB_VERSION_UPSTREAM_REVISION = \
+    $(dpkg-parsechangelog_run)$(DEB_VERSION_UPSTREAM_REVISION)
+  DEB_VERSION_UPSTREAM          = \
+    $(dpkg-parsechangelog_run)$(DEB_VERSION_UPSTREAM)
+  DEB_DISTRIBUTION              = $(dpkg-parsechangelog_run)$(DEB_DISTRIBUTION)
+else
+  # We must run a subshell in order to compute SOURCE_DATE_EPOCH,
+  # so we may as well set all variables.
+  dpkg-parsechangelog_sed += \
+    ;s/^Timestamp: \(.*\)/$$(eval SOURCE_DATE_EPOCH:=\1)/p
+  $(dpkg-parsechangelog_run)
+endif
 
 export SOURCE_DATE_EPOCH
 
-- 
2.39.2

