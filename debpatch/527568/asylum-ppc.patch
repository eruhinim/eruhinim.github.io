--- a/vdu.c
+++ b/vdu.c
@@ -666,11 +666,11 @@
     {
 	glBindTexture(GL_TEXTURE_2D, *redtex);
         gluBuild2DMipmaps(GL_TEXTURE_2D, GL_RGBA, 128, 64,
-			  GL_RGBA, GL_UNSIGNED_BYTE, (char*)redpixels);
+			  GL_RGBA, GL_UNSIGNED_INT_8_8_8_8, (char*)redpixels);
         free(redpixels);
 	glBindTexture(GL_TEXTURE_2D, *greytex);
         gluBuild2DMipmaps(GL_TEXTURE_2D, GL_RGBA, 128, 64,
-			  GL_RGBA, GL_UNSIGNED_BYTE, (char*)greypixels);
+			  GL_RGBA, GL_UNSIGNED_INT_8_8_8_8, (char*)greypixels);
         free(greypixels);
     }
     else
@@ -744,7 +744,7 @@
     {
         DecompScreen->x = -1;  DecompScreen->y = -1;
         gluBuild2DMipmaps(GL_TEXTURE_2D, GL_RGBA, 512, 512,
-			  GL_RGBA, GL_UNSIGNED_BYTE, (char*)data);
+			  GL_RGBA, GL_UNSIGNED_INT_8_8_8_8, (char*)data);
         free(data);
     }
     else
@@ -816,7 +816,7 @@
 	glGenTextures(1, batex);
 	glBindTexture(GL_TEXTURE_2D, *batex);
 	gluBuild2DMipmaps(GL_TEXTURE_2D, 4, 2*64, 2*32,
-			  GL_RGBA, GL_UNSIGNED_BYTE, (char*)ba);
+			  GL_RGBA, GL_UNSIGNED_INT_8_8_8_8, (char*)ba);
     }
     else
     {
@@ -982,7 +982,7 @@
 	    //Without this line I don't get textures unless I use gluBuild2DMipmaps
 	    glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_NEAREST); 
 	    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, 256, 256, 0,
-			 GL_RGBA, GL_UNSIGNED_BYTE, (char*)data);
+			 GL_RGBA, GL_UNSIGNED_INT_8_8_8_8, (char*)data);
 	    free(data);
 	}
 	else SDL_UnlockSurface(sprites[i].s);
