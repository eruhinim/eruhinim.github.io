From e3947b51f36c939ebbc61f3962964c0dbbe340a6 Mon Sep 17 00:00:00 2001
From: Martin Pitt <martinpitt@gnome.org>
Date: Fri, 24 May 2013 06:45:57 +0200
Subject: [PATCH 2/2] Fix memory corruption with writing labels

In write_label(), do not assume that the passed label is big enough to actually
hold 11 characters. dosfslabel just passes the argv[] string, which must not
be modified; so create a copy for filling up with spaces.

See http://bugs.debian.org/702392 and https://launchpad.net/bugs/1183406
---
 src/boot.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/src/boot.c b/src/boot.c
index 86cc682..4b22bbe 100644
--- a/src/boot.c
+++ b/src/boot.c
@@ -567,11 +567,10 @@ static void write_volume_label(DOS_FS * fs, char *label)
 
 void write_label(DOS_FS * fs, char *label)
 {
-    int l = strlen(label);
+    /* we want to fill up the passed label with spaces to 11 chars */
+    char filled_label[] = "           ";
+    strncpy(filled_label, label, sizeof(filled_label) - 1);
 
-    while (l < 11)
-	label[l++] = ' ';
-
-    write_boot_label(fs, label);
-    write_volume_label(fs, label);
+    write_boot_label(fs, filled_label);
+    write_volume_label(fs, filled_label);
 }
-- 
1.8.1.2

