>From d1e8450e4c53a24189384b7bb72f91e25df2c4ab Mon Sep 17 00:00:00 2001
From: Andreas Henriksson <andreas@fatal.se>
Date: Thu, 30 Oct 2014 22:47:31 +0100
Subject: [PATCH] Do not start services with a matching timer unit

---
 script/dh_systemd_start | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/script/dh_systemd_start b/script/dh_systemd_start
index 297f9c5..7586dc8 100755
--- a/script/dh_systemd_start
+++ b/script/dh_systemd_start
@@ -52,6 +52,11 @@ Do not stop service on upgrade.
 Do not start the unit file after upgrades and after initial installation (the
 latter is only relevant for services without a corresponding init script).
 
+=item B<--no-omit-timer-services>
+
+By default, dh_systemd_start will omit services that has a matching timer unit.
+Using this flag means the service file will not be skipped.
+
 =back
 
 =head1 NOTES
@@ -74,6 +79,7 @@ init(options => {
 	"no-start" => \$dh{NO_START},
 	"R|restart-after-upgrade" => \$dh{RESTART_AFTER_UPGRADE},
 	"no-also" => \$dh{NO_ALSO},
+	"no-omit-timer-services" => \$dh{NO_OMIT_TIMER_SERVICES},
 });
 
 # Extracts the Also= or Alias= line(s) from a unit file.
@@ -139,6 +145,17 @@ foreach my $package (@{$dh{DOPACKAGES}}) {
 	# loop.
 	my %seen;
 
+	# Remove all service units that has a matching timer unit.
+	# The assumption is that service units only wants to be started by their timer.
+	if (!$dh{NO_OMIT_TIMER_SERVICES}) {
+		foreach my $omitservice (@_ = grep(/\.timer$/i, @args)) {
+			$omitservice =~ s/\.timer$/\.service/;
+			for (reverse(grep { $args[$_] eq $omitservice } 0..$#args)) {
+				splice(@args, $_, 1);
+			}
+		};
+	}
+
 	# We use while/shift because we push to the list in the body.
 	while (@args) {
 		my $name = shift @args;
-- 
2.1.1

