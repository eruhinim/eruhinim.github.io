--- /usr/bin/checkbashisms	2008-02-27 12:34:54.000000000 -0600
+++ /home/raphael/bin/local/checkbashisms	2008-02-28 17:32:40.000000000 -0600
@@ -137,6 +137,19 @@
 		'\[\[(?!:)' => q<alternative test command ([[ foo ]] should be [ foo ])>,
 		'<<<'                       => q<\<\<\< here string>,
 		'/dev/(tcp|udp)'	    => q</dev/(tcp|udp)>,
+		'(?:^|\s+)suspend\s' =>            q<suspend>,
+		'(?:^|\s+)caller\s' =>            q<caller>,
+		'(?:^|\s+)complete\s' =>            q<complete>,
+		'(?:^|\s+)compgen\s' =>            q<compgen>,
+		'(?:^|\s+)declare\s' =>            q<declare>,
+		'(?:^|\s+)typeset\s' =>            q<typset>,
+		'(?:^|\s+)disown\s' =>            q<disown>,
+		'(?:^|\s+)builtin\s' =>            q<builtin>,
+		'(?:^|\s+)set\s+-[BHT]+' =>            q<set -[BHT]>,
+		'(?:^|\s+)alias\s+-p' =>              q<alias -p>,
+		'(?:^|\s+)unalias\s+-a' =>              q<unalias -a>,
+		'(?:^|\s+)local\s+(-[a-zA-Z]+)' =>              q<local -opt>,
+		'(?:^|\s+)local\s+[^=;)}]+=' =>              q<local foo=bar>,
 	    );
 
 	    my %string_bashisms = (
@@ -153,6 +166,7 @@
 		'\$DIRSTACK\b'              => q<$DIRSTACK>,
 		'\$EUID\b'		    => q<$EUID should be "id -u">,
 		'\$SECONDS\b'		    => q<$SECONDS>,
+		'\$BASH(_[A-Z]+)?\b'               => q<$BASH(_SOMETHING)>,
 	    );
 
 	    if ($opt_echo) {
