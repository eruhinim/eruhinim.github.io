68c68
< To handle multiple stats (eg. using VirtualHosts in Apache) you should...
---
> To handle multiple stats (eg. using VirtualHosts in Apache) you should:
72,73c72,94
<  2) Name the configs "awstats." + whatever you want - ".conf" (eg.
<     awstats.www.debian.org.conf"). But avoid "awstats.awstats.conf.
---
>  2) Name the configs "awstats." + whatever you want + ".conf" (eg.
>     "awstats.example.com.conf"). Please avoid "awstats.awstats.conf".
> 
>     To retain use of a common config file containing defaults for all of your
>     sites, consider a scheme such as the following:
> 
>     Make a bunch of awstats.[site name here].conf files, and have the first line
>     include the parent awstats.conf file (which by default also includes
>     awstats.conf.local). The remainder of the file should have your site-
>     specific configuration settings, which override the defaults specified
>     in awstats.conf and awstats.conf.local.
> 
>     Here is an example of an awstats.example.com.conf file (of course, tailor
>     the file for your own configuration):
> 	Include "/etc/awstats/awstats.conf"
> 	LogFile="/var/log/apache2/example.com_access_log"
> 	SiteDomain="example.com"
> 	HostAliases="example.com www.yoursite.com"
> 	DirData="/var/lib/awstats/example.com"
> 
>     This way you can leave awstats.conf alone, and put your server-specific
>     settings into awstats.conf.local, and your site-specific settings into
>     each awstats.[site name here].conf file.
78a100,104
>  4) Edit /etc/cron.d/awstats for each site. Possibly a line like this for each
>     site:
> 	20 2 * * * www-data [ -x /usr/lib/cgi-bin/awstats.pl
> 	      -config=example.com -update ] > /dev/null
> 
