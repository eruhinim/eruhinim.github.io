diff -Nru critterding-1.0-beta12.1/debian/changelog critterding-1.0-beta12.1/debian/changelog
--- critterding-1.0-beta12.1/debian/changelog	2012-05-13 10:38:30.000000000 -0400
+++ critterding-1.0-beta12.1/debian/changelog	2016-07-17 17:11:02.000000000 -0400
@@ -1,3 +1,10 @@
+critterding (1.0-beta12.1-1.3) unstable; urgency=medium
+
+  * Non-maintainer upload.
+  * Fixing FTBFS on GCC 6. (Closes: 811621)
+
+ -- Breno Leitao <brenohl@br.ibm.com>  Sun, 17 Jul 2016 16:46:12 -0400
+
 critterding (1.0-beta12.1-1.2) unstable; urgency=low
 
   [ Cyril Brulebois ]
diff -Nru critterding-1.0-beta12.1/debian/patches/21FTBFS_gcc6.patch critterding-1.0-beta12.1/debian/patches/21FTBFS_gcc6.patch
--- critterding-1.0-beta12.1/debian/patches/21FTBFS_gcc6.patch	1969-12-31 19:00:00.000000000 -0500
+++ critterding-1.0-beta12.1/debian/patches/21FTBFS_gcc6.patch	2016-07-17 16:45:28.000000000 -0400
@@ -0,0 +1,20 @@
+Description: Fix FTBFS with GCC6
+ Currently, Brainz() tries to assign a bool value to a pointer, which
+breaks in GCC6. This patch simply fixes this issue, and it was fixed on
+any other assignment for Outputs[X].output, but not for this loop
+specifically.
+ 
+Author: Breno Leitao <brenohl@br.ibm.com>
+Bug-Debian: https://bugs.debian.org/811621
+
+--- critterding-1.0-beta12.1.orig/src/brainz/brainz.cpp
++++ critterding-1.0-beta12.1/src/brainz/brainz.cpp
+@@ -137,7 +137,7 @@ Brainz::Brainz()
+ 	
+ 		// clear Motor Outputs
+ 		for ( unsigned int i=0; i < numberOfOutputs; i++ )
+-			Outputs[i].output = false;
++			*Outputs[i].output = false;
+ 	
+ 		// clear Neurons
+ 		for ( unsigned int i=0; i < totalNeurons; i++ )
diff -Nru critterding-1.0-beta12.1/debian/patches/series critterding-1.0-beta12.1/debian/patches/series
--- critterding-1.0-beta12.1/debian/patches/series	2012-05-13 10:38:23.000000000 -0400
+++ critterding-1.0-beta12.1/debian/patches/series	2016-07-17 16:45:42.000000000 -0400
@@ -2,3 +2,4 @@
 10uninitialized_constant
 11const_cast
 20fix_ftbfs_gcc_4.7
+21FTBFS_gcc6.patch
