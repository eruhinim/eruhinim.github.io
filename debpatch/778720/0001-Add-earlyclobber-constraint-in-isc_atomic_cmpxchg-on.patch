From 801989597d5e7ebad86bb1d993975dfc83983133 Mon Sep 17 00:00:00 2001
From: Robert Edmonds <edmonds@debian.org>
Date: Mon, 7 Sep 2015 21:27:57 -0400
Subject: [PATCH] Add earlyclobber constraint in isc_atomic_cmpxchg() on mips

According to James Cowgill,

    The tmp register constraint should be earlyclobber ("=&r") because
    the other two registers (%3 and %4) will be read again after tmp
    (%2) is written if the code loops around. At the moment, GCC could
    make tmp and cmpval/val refer to the same register.

    (https://lists.debian.org/debian-mips/2015/09/msg00041.html)

Addresses-Debian-Bug: 778720
Signed-off-by: Robert Edmonds <edmonds@debian.org>
---
 lib/isc/mips/include/isc/atomic.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/isc/mips/include/isc/atomic.h b/lib/isc/mips/include/isc/atomic.h
index e3657d7..13b5cff 100644
--- a/lib/isc/mips/include/isc/atomic.h
+++ b/lib/isc/mips/include/isc/atomic.h
@@ -79,7 +79,7 @@ isc_atomic_cmpxchg(isc_int32_t *p, int cmpval, int val) {
 	"	beqz	%2, 1b		\n"
 	"2:	move	%0, $1		\n"
 	"	.set	pop		\n"
-	: "=&r"(orig), "+R" (*p), "=r" (tmp)
+	: "=&r"(orig), "+R" (*p), "=&r" (tmp)
 	: "r"(cmpval), "r"(val)
 	: "memory");
 
-- 
2.5.1

