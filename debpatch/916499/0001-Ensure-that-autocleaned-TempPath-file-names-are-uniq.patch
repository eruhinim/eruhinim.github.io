From 8c39a1dd0942e265ab48ce5b7a418b7ce435d451 Mon Sep 17 00:00:00 2001
From: Niko Tyni <ntyni@debian.org>
Date: Sun, 16 Dec 2018 20:10:54 +0200
Subject: [PATCH] Ensure that autocleaned TempPath file names are unique

In some circumstances the TempPath.__del__() finalizer may get
run late enough that a new TempPath instance has been created
with the same name.

Prepend a running counter to the actual file names used to prevent
collisions.

Closes: #916499
---
 lib/adt_testbed.py | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/lib/adt_testbed.py b/lib/adt_testbed.py
index f46a4df..4fe8874 100644
--- a/lib/adt_testbed.py
+++ b/lib/adt_testbed.py
@@ -1484,6 +1484,10 @@ class TempPath(Path):
 
     These are only guaranteed to exit within one testbed run.
     '''
+
+    # private; used to make sure the names of autocleaned files don't collide
+    _filename_prefix = 1
+
     def __init__(self, testbed, name, is_dir=False, autoclean=True):
         '''Create a temporary Path object.
 
@@ -1507,6 +1511,10 @@ class TempPath(Path):
         else:
             host = testbed.output_dir
         self.autoclean = autoclean
+        if autoclean:
+            name = str(self._filename_prefix) + '-' + name
+            TempPath._filename_prefix += 1
+
         Path.__init__(self, testbed, os.path.join(host, name),
                       os.path.join(testbed.scratch, name),
                       is_dir)
-- 
2.20.0

