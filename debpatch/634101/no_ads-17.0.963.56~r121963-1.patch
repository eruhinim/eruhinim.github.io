--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/chrome_browser.gypi
+++ chromium-browser-17.0.963.56~r121963/src/chrome/chrome_browser.gypi
@@ -946,8 +946,6 @@
         'browser/extensions/app_notify_channel_setup.h',
         'browser/extensions/app_notify_channel_ui.cc',
         'browser/extensions/app_notify_channel_ui.h',
-        'browser/extensions/apps_promo.cc',
-        'browser/extensions/apps_promo.h',
         'browser/extensions/browser_action_test_util.h',
         'browser/extensions/browser_action_test_util_gtk.cc',
         'browser/extensions/browser_action_test_util_mac.mm',
@@ -1503,8 +1501,6 @@
         'browser/instant/instant_loader_delegate.h',
         'browser/instant/instant_unload_handler.cc',
         'browser/instant/instant_unload_handler.h',
-        'browser/instant/promo_counter.cc',
-        'browser/instant/promo_counter.h',
         'browser/intents/register_intent_handler_infobar_delegate.cc',
         'browser/intents/register_intent_handler_infobar_delegate.h',
         'browser/intents/web_intents_registry.cc',
@@ -3922,12 +3918,6 @@
         'browser/ui/webui/ssl_client_certificate_selector_webui.h',
         'browser/ui/webui/sync_internals_ui.cc',
         'browser/ui/webui/sync_internals_ui.h',
-        'browser/ui/webui/sync_promo/sync_promo_handler.cc',
-        'browser/ui/webui/sync_promo/sync_promo_handler.h',
-        'browser/ui/webui/sync_promo/sync_promo_trial.cc',
-        'browser/ui/webui/sync_promo/sync_promo_trial.h',
-        'browser/ui/webui/sync_promo/sync_promo_ui.cc',
-        'browser/ui/webui/sync_promo/sync_promo_ui.h',
         'browser/ui/webui/sync_setup_handler.cc',
         'browser/ui/webui/sync_setup_handler.h',
         'browser/ui/webui/task_manager_dialog.cc',
@@ -3970,10 +3960,6 @@
         'browser/visitedlink/visitedlink_master.h',
         'browser/web_applications/web_app.cc',
         'browser/web_applications/web_app.h',
-        'browser/web_resource/notification_promo.cc',
-        'browser/web_resource/notification_promo.h',
-        'browser/web_resource/promo_resource_service.cc',
-        'browser/web_resource/promo_resource_service.h',
         'browser/web_resource/web_resource_service.cc',
         'browser/web_resource/web_resource_service.h',
         'browser/webdata/autocomplete_syncable_service.cc',
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/chrome_browser_main.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/chrome_browser_main.cc
@@ -77,7 +77,6 @@
 #include "chrome/browser/translate/translate_manager.h"
 #include "chrome/browser/ui/browser.h"
 #include "chrome/browser/ui/webui/chrome_url_data_manager_backend.h"
-#include "chrome/browser/ui/webui/sync_promo/sync_promo_trial.h"
 #include "chrome/common/child_process_logging.h"
 #include "chrome/common/chrome_constants.h"
 #include "chrome/common/chrome_paths.h"
@@ -1153,7 +1152,6 @@ void ChromeBrowserMainParts::SetupFieldT
   WarmConnectionFieldTrial();
   PredictorFieldTrial();
   DefaultAppsFieldTrial();
-  sync_promo_trial::Activate();
 }
 
 // -----------------------------------------------------------------------------
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/browser_resources.grd
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/browser_resources.grd
@@ -119,10 +119,6 @@
       <include name="IDR_TRANSLATE_JS" file="resources\translate.js" type="BINDATA" />
       <include name="IDR_WEBSTORE_MANIFEST" file="resources\webstore_app\manifest.json" type="BINDATA" />
       <include name="IDR_ENTERPRISE_WEBSTORE_MANIFEST" file="resources\enterprise_webstore_app\manifest.json" type="BINDATA" />
-      <if expr="not pp_ifdef('chromeos')">
-        <include name="IDR_SYNC_PROMO_JS" file="resources\sync_promo\sync_promo.js" flattenhtml="true" type="BINDATA" />
-        <include name="IDR_SYNC_PROMO_HTML" file="resources\sync_promo\sync_promo.html" flattenhtml="true" allowexternalscript="true" type="BINDATA" />
-      </if>
       <if expr="pp_ifdef('chromeos')">
         <include name="IDR_ABOUT_SYS_HTML" file="resources\chromeos\about_sys.html" flattenhtml="true" type="BINDATA" />
         <include name="IDR_ACTIVE_DOWNLOADS_HTML" file="resources\chromeos\active_downloads.html" flattenhtml="true" allowexternalscript="true" type="BINDATA" />
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/policy/configuration_policy_handler_list.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/policy/configuration_policy_handler_list.cc
@@ -184,8 +184,6 @@ const PolicyToPreferenceMapEntry kSimple
     prefs::kImportSavedPasswords },
   { Value::TYPE_INTEGER, kPolicyMaxConnectionsPerProxy,
     prefs::kMaxConnectionsPerProxy },
-  { Value::TYPE_BOOLEAN, kPolicyHideWebStorePromo,
-    prefs::kNTPHideWebStorePromo },
   { Value::TYPE_LIST, kPolicyURLBlacklist,
     prefs::kUrlBlacklist },
   { Value::TYPE_LIST, kPolicyURLWhitelist,
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/sync/sync_ui_util.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/sync/sync_ui_util.cc
@@ -252,14 +252,14 @@ MessageType GetStatusInfo(ProfileSyncSer
         // TODO(lipalani) : Ask tim if this is still needed.
         // NOT first machine.
         // Show a link ("needs attention"), but still indicate the
-        // current synced status.  Return SYNC_PROMO so that
+        // current synced status.  Return SYNC_ERROR so that
         // the configure link will still be shown.
         if (status_label && link_label) {
           status_label->assign(GetSyncedStateStatusLabel(service, style));
           link_label->assign(
               l10n_util::GetStringUTF16(IDS_SYNC_PASSWORD_SYNC_ATTENTION));
         }
-        return SYNC_PROMO;
+        return SYNC_ERROR;
       }
     }
 
@@ -324,16 +324,12 @@ MessageType GetStatusInfoForNewTabPage(P
   if (service->HasSyncSetupCompleted() &&
       service->IsPassphraseRequired()) {
     if (service->passphrase_required_reason() == sync_api::REASON_ENCRYPTION) {
-      // First machine migrating to passwords.  Show as a promotion.
+      // First machine migrating to passwords. 
       if (status_label && link_label) {
-        status_label->assign(
-            l10n_util::GetStringFUTF16(
-                IDS_SYNC_NTP_PASSWORD_PROMO,
-                l10n_util::GetStringUTF16(IDS_PRODUCT_NAME)));
         link_label->assign(
             l10n_util::GetStringUTF16(IDS_SYNC_NTP_PASSWORD_ENABLE));
       }
-      return SYNC_PROMO;
+      return SYNC_ERROR;
     } else {
       // NOT first machine.
       // Show a link and present as an error ("needs attention").
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/resources/sync_setup_overlay.html
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/resources/sync_setup_overlay.html
@@ -1,24 +1,6 @@
 <div id="sync-setup-overlay" class="page" hidden>
   <div id="sync-setup-login" hidden>
-    <h1 id="promo-title" i18n-content="promoTitle" hidden></h1>
     <div>
-      <div id="sync-setup-login-promo-column" hidden>
-        <h2 id="promo-message-title" i18n-content="promoMessageTitle"></h2>
-        <p>
-          <span i18n-values=".innerHTML:promoMessageBody"></span>
-          <a id="promo-learn-more-show" i18n-content="promoLearnMoreShow"
-              href="#" tabindex="1"></a>
-          <a id="promo-learn-more-hide" i18n-content="promoLearnMoreHide"
-              href="#" tabindex="1" hidden> </a>
-        </p>
-        <div id="promo-info-pane">
-          <img id="promo-infographic"
-              src="chrome://theme/IRD_SYNC_PROMO_INFO_GRAPHIC">
-          <div id="promo-information" i18n-values=".innerHTML:promoInformation"
-              hidden>
-          </div>
-        </div>
-      </div>
       <div id="sync-setup-login-content-column">
         <h1 id="sync-setup-overlay-title"
             i18n-content="syncSetupOverlayTitle">
@@ -127,12 +109,6 @@
         </div>
       </div>
     </div>
-    <div id="promo-skip" hidden>
-      <button id="promo-skip-button" type="reset"
-          i18n-content="promoSkipButton"> </button>
-      <button id="promo-advanced" i18n-content="promoAdvanced"
-          class="link-button"></button>
-    </div>
   </div>
   <div id="sync-setup-configure" hidden>
     <div id="confirm-sync-preferences">
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/resources/ntp4/apps_page.css
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/resources/ntp4/apps_page.css
@@ -103,56 +103,10 @@
   text-decoration: underline;
 }
 
-/* Promo */
-/* Show the promo if the webstore has a promo and is the only app on the page.
- */
-.tile:only-of-type > .has-promo > .app-contents > span {
-  display: none;
-}
-
-.tile:only-of-type > .has-promo .app-img-container > .apps-promo-logo {
-  display: block;
-}
-
-.apps-promo-logo {
-  display: none;
-  height: 128px;
-  width: 128px;
-}
-
-.tile:only-of-type > .has-promo .app-img-container > img:first-child {
-  display: none;
-}
-
 .app-img-container > img:first-child {
   display: block;
 }
 
-/* TODO(estade): animation? */
-.tile:only-of-type > .has-promo > .apps-promo-extras {
-  display: block;
-}
-
-.apps-promo-extras {
-  display: none;
-  /* 128 * 5/4 */
-  left: 160px;
-  position: absolute;
-  text-align: left;
-  top: 0;
-}
-
-html[dir="rtl"] .apps-promo-extras {
-  left: auto;
-  right: 160px;
-}
-
-.apps-promo-heading {
-  font-weight: bold;
-  margin-bottom: 5px;
-  -webkit-margin-start: 3px;
-}
-
 .g-button-basic {
   border-width: 6px 10px 12px 6px;
   color: #fff !important;
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/resources/ntp4/apps_page.js
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/resources/ntp4/apps_page.js
@@ -258,9 +258,6 @@ cr.define('ntp4', function() {
       this.appContents_.addEventListener('contextmenu',
                                          cr.ui.contextMenuHandler);
 
-      if (this.appData_.is_webstore)
-        this.createAppsPromoExtras_();
-
       this.addEventListener('mousedown', this.onMousedown_, true);
       this.addEventListener('keydown', this.onKeydown_);
       this.addEventListener('blur', this.onBlur_, true);
@@ -385,49 +382,6 @@ cr.define('ntp4', function() {
       }
     },
 
-    /**
-     * Creates the apps-promo section of the app (should only be called for the
-     * webstore app).
-     * @private
-     */
-    createAppsPromoExtras_: function() {
-      this.classList.add('webstore');
-
-      this.appsPromoExtras_ = $('apps-promo-extras-template').cloneNode(true);
-      this.appsPromoExtras_.id = '';
-      this.appsPromoHeading_ =
-          this.appsPromoExtras_.querySelector('.apps-promo-heading');
-      this.appsPromoLink_ =
-          this.appsPromoExtras_.querySelector('.apps-promo-link');
-      this.appsPromoLink_.addEventListener('click', this.onClick_.bind(this));
-
-      this.appsPromoLogo_ = this.ownerDocument.createElement('img');
-      this.appsPromoLogo_.className = 'apps-promo-logo';
-      this.appImgContainer_.appendChild(this.appsPromoLogo_);
-
-      this.appendChild(this.appsPromoExtras_);
-      this.appsPromoExtras_.hidden = false;
-    },
-
-    /**
-     * Sets the apps promo appearance. If |data| is null, there is no promo. If
-     * |data| is non-null, it contains strings to be shown for the promo. The
-     * promo is only shown when the webstore app icon is alone on a page.
-     * @param {Object} data A dictionary that contains apps promo strings.
-     */
-    setAppsPromoData: function(data) {
-      if (data) {
-        this.classList.add('has-promo');
-      } else {
-        this.classList.remove('has-promo');
-        return;
-      }
-
-      this.appsPromoHeading_.textContent = data.promoHeader;
-      this.appsPromoLink_.href = data.promoLink;
-      this.appsPromoLink_.textContent = data.promoButton;
-      this.appsPromoLogo_.src = data.promoLogo;
-    },
 
     /**
      * Set the size and position of the app tile.
@@ -468,10 +422,7 @@ cr.define('ntp4', function() {
      * @private
      */
     onClick_: function(e) {
-      var is_promo = this.appsPromoExtras_ &&
-          window.getComputedStyle(this.appsPromoExtras_).display != 'none';
       var url = !this.appData_.is_webstore ? '' :
-          is_promo ? this.appsPromoLink_.href :
                      appendParam(this.appData_.url,
                                  'utm_source',
                                  'chrome-ntp-icon');
@@ -855,12 +806,6 @@ cr.define('ntp4', function() {
     },
   };
 
-  AppsPage.setPromo = function(data) {
-    var store = document.querySelector('.webstore');
-    if (store)
-      store.setAppsPromoData(data);
-  };
-
   /**
    * Launches the specified app using the APP_LAUNCH_NTP_APP_RE_ENABLE
    * histogram. This should only be invoked from the AppLauncherHandler.
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/resources/ntp4/new_tab.html
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/resources/ntp4/new_tab.html
@@ -137,12 +137,6 @@
   </div>
 </div>
   
-<!-- Apps promo. -->
-<div id="apps-promo-extras-template" class="apps-promo-extras" hidden>
-  <h3 class="apps-promo-heading"></h3>
-  <a class="apps-promo-link g-button-basic"></a>
-</div>
-
 <!-- App Contents w/ Large Icon -->
 <div id="app-large-icon-template" class="app-contents" hidden>
   <div class="app-img-container">
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/resources/ntp4/page_list_view.js
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/resources/ntp4/page_list_view.js
@@ -310,8 +310,6 @@ cr.define('ntp4', function() {
           this.appsPages[pageIndex].appendApp(app);
       }
 
-      ntp4.AppsPage.setPromo(data.showPromo ? data : null);
-
       // Tell the slider about the pages.
       this.updateSliderCards();
 
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/resources/ntp4/new_tab.js
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/resources/ntp4/new_tab.js
@@ -154,14 +154,6 @@ cr.define('ntp4', function() {
       infoBubble.show();
     }
 
-    var serverpromo = localStrings.getString('serverpromo');
-    if (serverpromo) {
-      showNotification(parseHtmlSubset(serverpromo), [], function() {
-        chrome.send('closeNotificationPromo');
-      }, 60000);
-      chrome.send('notificationPromoViewed');
-    }
-
     var loginContainer = getRequiredElement('login-container');
     loginContainer.addEventListener('click', function() {
       var rect = loginContainer.getBoundingClientRect();
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/resources/sync_promo/sync_promo.js
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/resources/sync_promo/sync_promo.js
@@ -6,287 +6,4 @@
 <include src="../options/options_page.js"/>
 <include src="../sync_setup_overlay.js"/>
 
-cr.define('sync_promo', function() {
-  /**
-   * SyncPromo class
-   * Subclass of options.SyncSetupOverlay that customizes the sync setup
-   * overlay for use in the new tab page.
-   * @class
-   */
-  function SyncPromo() {
-    options.SyncSetupOverlay.call(this, 'syncSetup',
-                                  templateData.syncSetupOverlayTitle,
-                                  'sync-setup-overlay');
-  }
-
-  // Replicating enum from chrome/common/extensions/extension_constants.h.
-  const actions = (function() {
-    var i = 0;
-    return {
-      VIEWED: i++,
-      LEARN_MORE_CLICKED: i++,
-      ACCOUNT_HELP_CLICKED: i++,
-      CREATE_ACCOUNT_CLICKED: i++,
-      SKIP_CLICKED: i++,
-      SIGN_IN_ATTEMPTED: i++,
-      SIGNED_IN_SUCCESSFULLY: i++,
-      ADVANCED_CLICKED: i++,
-      ENCRYPTION_HELP_CLICKED: i++,
-      CANCELLED_AFTER_SIGN_IN: i++,
-      CONFIRMED_AFTER_SIGN_IN: i++,
-      CLOSED_TAB: i++,
-      CLOSED_WINDOW: i++,
-      LEFT_DURING_THROBBER: i++,
-    };
-  }());
-
-  cr.addSingletonGetter(SyncPromo);
-
-  SyncPromo.prototype = {
-    __proto__: options.SyncSetupOverlay.prototype,
-
-    showOverlay_: function() {
-      $('sync-setup-overlay').hidden = false;
-    },
-
-    closeOverlay_: function() {
-      chrome.send('SyncPromo:Close');
-    },
-
-    // Initializes the page.
-    initializePage: function() {
-      localStrings = new LocalStrings();
-
-      options.SyncSetupOverlay.prototype.initializePage.call(this);
-
-      // Hide parts of the login UI and show the promo UI.
-      this.hideOuterLoginUI_();
-      $('sync-setup-login-promo-column').hidden = false;
-      $('promo-skip').hidden = false;
-
-      this.showSetupUI_();
-      chrome.send('SyncPromo:Initialize');
-
-      var self = this;
-
-      $('promo-skip-button').addEventListener('click', function() {
-        chrome.send('SyncPromo:UserSkipped');
-        self.closeOverlay_();
-      });
-
-      var learnMoreClickedAlready = false;
-      $('promo-learn-more-show').addEventListener('click', function() {
-        self.showLearnMore_(true);
-        if (!learnMoreClickedAlready)
-          chrome.send('SyncPromo:UserFlowAction', [actions.LEARN_MORE_CLICKED]);
-        learnMoreClickedAlready = true;
-      });
-
-      $('promo-learn-more-hide').addEventListener('click', function() {
-        self.showLearnMore_(false);
-      });
-
-      $('promo-advanced').addEventListener('click', function() {
-        chrome.send('SyncPromo:ShowAdvancedSettings');
-      });
-
-      var accountHelpClickedAlready = false;
-      $('cannot-access-account-link').addEventListener('click', function() {
-        if (!accountHelpClickedAlready)
-          chrome.send('SyncPromo:UserFlowAction',
-                      [actions.ACCOUNT_HELP_CLICKED]);
-        accountHelpClickedAlready = true;
-      });
-
-      var createAccountClickedAlready = false;
-      $('create-account-link').addEventListener('click', function() {
-        if (!createAccountClickedAlready)
-          chrome.send('SyncPromo:UserFlowAction',
-                      [actions.CREATE_ACCOUNT_CLICKED]);
-        createAccountClickedAlready = true;
-      });
-
-      // We listen to the <form>'s submit vs. the <input type="submit"> click so
-      // we also track users that use the keyboard and press enter.
-      var signInAttemptedAlready = false;
-      $('gaia-login-form').addEventListener('submit', function() {
-        ++self.signInAttempts_;
-        if (!signInAttemptedAlready)
-          chrome.send('SyncPromo:UserFlowAction', [actions.SIGN_IN_ATTEMPTED]);
-        signInAttemptedAlready = true;
-      });
-
-      var encryptionHelpClickedAlready = false;
-      $('encryption-help-link').addEventListener('click', function() {
-        if (!encryptionHelpClickedAlready )
-          chrome.send('SyncPromo:UserFlowAction',
-                      [actions.ENCRYPTION_HELP_CLICKED]);
-        encryptionHelpClickedAlready = true;
-      });
-
-      var advancedOptionsClickedAlready = false;
-      $('customize-link').addEventListener('click', function() {
-        if (!advancedOptionsClickedAlready)
-          chrome.send('SyncPromo:UserFlowAction', [actions.ADVANCED_CLICKED]);
-        advancedOptionsClickedAlready = true;
-      });
-
-      // Re-used across both cancel buttons after a successful sign in.
-      var cancelFunc = function() {
-        chrome.send('SyncPromo:UserFlowAction',
-                    [actions.CANCELLED_AFTER_SIGN_IN]);
-      };
-      $('confirm-everything-cancel').addEventListener('click', cancelFunc);
-      $('choose-datatypes-cancel').addEventListener('click', cancelFunc);
-
-      this.infographic_ = $('promo-infographic');
-      this.learnMore_ = $('promo-information');
-
-      this.infographic_.addEventListener('webkitTransitionEnd',
-                                         this.toggleHidden_.bind(this));
-      this.learnMore_.addEventListener('webkitTransitionEnd',
-                                       this.toggleHidden_.bind(this));
-    },
-
-    /**
-     * Called when the page is unloading to record number of times a user tried
-     * to sign in and if they left while a throbber was running.
-     * @private
-     */
-    recordPageViewActions_: function() {
-      chrome.send('SyncPromo:RecordSignInAttempts', [this.signInAttempts_]);
-      if (this.throbberStart_)
-        chrome.send('SyncPromo:UserFlowAction', [actions.LEFT_DURING_THROBBER]);
-    },
-
-    /**
-     * Remove the [hidden] attribute from the node that was not previously
-     * transitioning.
-     * @param {Event} e A -webkit-transition end event.
-     * @private
-     */
-    toggleHidden_: function(e) {
-      // Only show the other element if the target of this event was hidden
-      // (showing also triggers a transition end).
-      if (e.target.hidden) {
-        if (e.target === this.infographic_)
-          this.learnMore_.hidden = false;
-        else
-          this.infographic_.hidden = false;
-      }
-    },
-
-    /**
-     * Shows or hides the sync information.
-     * @param {Boolean} show True if sync information should be shown, false
-     *     otherwise.
-     * @private
-     */
-    showLearnMore_: function(show) {
-      $('promo-learn-more-show').hidden = show;
-      $('promo-learn-more-hide').hidden = !show;
-      // Setting [hidden] triggers a transition, which (when ended) will trigger
-      // this.toggleHidden_.
-      (show ? this.infographic_ : this.learnMore_).hidden = true;
-    },
-
-    /** @inheritDoc */
-    sendConfiguration_: function() {
-      chrome.send('SyncPromo:UserFlowAction',
-                  [actions.CONFIRMED_AFTER_SIGN_IN]);
-      options.SyncSetupOverlay.prototype.sendConfiguration_.apply(this,
-          arguments);
-    },
-
-    /**
-     * Shows or hides the title of the promo page.
-     * @param {Boolean} visible true if the title should be visible, false
-     *     otherwise.
-     * @private
-     */
-    setPromoTitleVisible_: function(visible) {
-      $('promo-title').hidden = !visible;
-    },
-
-    /** @inheritDoc */
-    setThrobbersVisible_: function(visible) {
-      if (visible) {
-        this.throbberStart_ = Date.now();
-      } else {
-        if (this.throbberStart_) {
-          chrome.send('SyncPromo:RecordThrobberTime',
-                      [Date.now() - this.throbberStart_]);
-        }
-        this.throbberStart_ = 0;
-      }
-      // Pass through to SyncSetupOverlay to handle display logic.
-      options.SyncSetupOverlay.prototype.setThrobbersVisible_.apply(
-          this, arguments);
-    },
-
-    /**
-     * Number of times a user attempted to sign in to GAIA during this page
-     * view.
-     * @private
-     */
-    signInAttempts_: 0,
-
-    /**
-     * The start time of a throbber on the page.
-     * @private
-     */
-    throbberStart_: 0,
-  };
-
-  SyncPromo.showErrorUI = function() {
-    SyncPromo.getInstance().showErrorUI_();
-  };
-
-  SyncPromo.showSetupUI = function() {
-    SyncPromo.getInstance().showSetupUI_();
-  };
-
-  SyncPromo.showSyncSetupPage = function(page, args) {
-    SyncPromo.getInstance().showSyncSetupPage_(page, args);
-  };
-
-  SyncPromo.showSuccessAndClose = function() {
-    SyncPromo.getInstance().showSuccessAndClose_();
-  };
-
-  SyncPromo.showSuccessAndSettingUp = function() {
-    chrome.send('SyncPromo:UserFlowAction', [actions.SIGNED_IN_SUCCESSFULLY]);
-    SyncPromo.getInstance().showSuccessAndSettingUp_();
-  };
-
-  SyncPromo.showStopSyncingUI = function() {
-    SyncPromo.getInstance().showStopSyncingUI_();
-  };
-
-  SyncPromo.initialize = function() {
-    SyncPromo.getInstance().initializePage();
-  };
-
-  SyncPromo.setPromoTitleVisible = function(visible) {
-    SyncPromo.getInstance().setPromoTitleVisible_(visible);
-  };
-
-  SyncPromo.recordPageViewActions = function() {
-    SyncPromo.getInstance().recordPageViewActions_();
-  };
-
-  SyncPromo.populatePromoMessage = function(resName) {
-    SyncPromo.getInstance().populatePromoMessage_(resName);
-  };
-
-  // Export
-  return {
-    SyncPromo: SyncPromo
-  };
-});
-
 var OptionsPage = options.OptionsPage;
-var SyncSetupOverlay = sync_promo.SyncPromo;
-window.addEventListener('DOMContentLoaded', sync_promo.SyncPromo.initialize);
-window.addEventListener('beforeunload',
-    sync_promo.SyncPromo.recordPageViewActions.bind(sync_promo.SyncPromo));
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/resources/sync_promo/sync_promo.html
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/resources/sync_promo/sync_promo.html
@@ -5,24 +5,17 @@
 <html i18n-values="dir:textdirection">
 <head>
 <meta charset="utf-8">
-<title i18n-content="promoPageTitle"></title>
+<title></title>
 <script src="chrome://resources/js/local_strings.js"></script>
 <script src="chrome://resources/js/cr.js"></script>
 <script src="chrome://resources/js/util.js"></script>
 <script src="chrome://resources/js/cr/event_target.js"></script>
 <script src="../strings.js"></script>
-<script src="sync_promo.js"></script>
 <link rel="stylesheet" href="../shared/css/button.css">
 <link rel="stylesheet" href="../shared/css/throbber.css">
 <link rel="stylesheet" href="../sync_setup_overlay.css">
-<link rel="stylesheet" href="sync_promo.css">
 </head>
 <body>
-<div id="sync-promo">
-  <div id="sync-promo-contents">
-    <include src="../sync_setup_overlay.html">
-  </div>
-</div>
 </body>
 <script src="chrome://resources/js/i18n_template.js"></script>
 <script src="chrome://resources/js/i18n_process.js"></script>
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/resources/sync_promo/sync_promo.css
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/resources/sync_promo/sync_promo.css
@@ -38,17 +38,6 @@ body {
   width: 600px;
 }
 
-#sync-setup-login-promo-column {
-  left: 0;
-  position: absolute;
-  width: 444px;
-}
-
-html[dir='rtl'] #sync-setup-login-promo-column {
-  left: auto;
-  right: 0;
-}
-
 #sync-setup-login-content-column {
   float: right;
   width: 335px;
@@ -58,80 +47,9 @@ html[dir='rtl'] #sync-setup-login-conten
   float: left;
 }
 
-#promo-title {
-  margin-top: 33px;
-  margin-bottom: 64px;
-  text-align: center;
-}
-
-#promo-title[hidden] + div {
-  margin-top: 30px;
-}
-
-#promo-infographic {
-  margin-top: 14px;
-}
-
-#promo-skip {
-  clear: both;
-  display: block;
-  padding-top: 85px;
-  text-align: center;
-}
-
-#promo-advanced,
-#promo-advanced:hover,
-#sync-setup-login-promo-column a:link,
-#sync-setup-login-promo-column a:hover {
-  color: #15c;
-}
-
-#promo-advanced:active,
-#sync-setup-login-promo-column a:active {
-  color: #d14836;
-}
-
-/* When showing the full page promo, remove top margin from sign-in box. */
-#sync-promo .sign-in {
-  margin-top: 0;
-}
-
 #sync-setup-login h1 {
   color: #222;
   font-size: 27px;
   font-weight: normal;
 }
 
-#sync-setup-login-promo-column h2 {
-  color: #222;
-  font-size: 18px;
-  font-weight: normal;
-}
-
-#sync-setup-login-promo-column h3 {
-  color: #222;
-  font-size: 13px;
-  line-height: 13px;
-}
-
-#sync-setup-login-promo-column p {
-  color: #222;
-  font-size: 13px;
-  line-height: 20px;
-}
-
-#promo-info-pane {
-  height: 186px;
-  position: relative;
-}
-
-#promo-info-pane > * {
-  -webkit-transition: opacity 200ms linear;
-  opacity: 1;
-  position: absolute;
-}
-
-#promo-info-pane > [hidden] {
-  display: inline-block; /* Override default user-agent styles. */
-  opacity: 0;
-}
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/resources/aura/app_list/app_list.html
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/resources/aura/app_list/app_list.html
@@ -58,12 +58,6 @@
   </div>
 </div>
 
-<!-- Apps promo. -->
-<div id="apps-promo-extras-template" class="apps-promo-extras" hidden>
-  <h3 class="apps-promo-heading"></h3>
-  <a class="apps-promo-link g-button-basic"><a/>
-</div>
-
 <!-- App Contents w/ Large Icon -->
 <div id="app-large-icon-template" class="app-contents" hidden>
   <div class="app-img-container">
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/prefs/browser_prefs.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/prefs/browser_prefs.cc
@@ -15,7 +15,6 @@
 #include "chrome/browser/custom_handlers/protocol_handler_registry.h"
 #include "chrome/browser/debugger/devtools_window.h"
 #include "chrome/browser/download/download_prefs.h"
-#include "chrome/browser/extensions/apps_promo.h"
 #include "chrome/browser/extensions/component_loader.h"
 #include "chrome/browser/extensions/extension_prefs.h"
 #include "chrome/browser/extensions/extension_web_ui.h"
@@ -58,9 +57,7 @@
 #include "chrome/browser/ui/webui/ntp/new_tab_ui.h"
 #include "chrome/browser/ui/webui/options/extension_settings_handler.h"
 #include "chrome/browser/ui/webui/plugins_ui.h"
-#include "chrome/browser/ui/webui/sync_promo/sync_promo_ui.h"
 #include "chrome/browser/upgrade_detector.h"
-#include "chrome/browser/web_resource/promo_resource_service.h"
 #include "chrome/common/pref_names.h"
 #include "content/browser/host_zoom_map.h"
 #include "content/browser/ssl/ssl_manager.h"
@@ -98,7 +95,6 @@ namespace browser {
 void RegisterLocalState(PrefService* local_state) {
   // Prefs in Local State
   local_state->RegisterIntegerPref(prefs::kMultipleProfilePrefMigration, 0);
-  AppsPromo::RegisterPrefs(local_state);
   Browser::RegisterPrefs(local_state);
   FlagsUI::RegisterPrefs(local_state);
   WebCacheManager::RegisterPrefs(local_state);
@@ -110,7 +106,6 @@ void RegisterLocalState(PrefService* loc
   MetricsService::RegisterPrefs(local_state);
   NewTabPageHandler::RegisterPrefs(local_state);
   printing::PrintJobManager::RegisterPrefs(local_state);
-  PromoResourceService::RegisterPrefs(local_state);
 
 #if defined(ENABLE_SAFE_BROWSING)
   SafeBrowsingService::RegisterPrefs(local_state);
@@ -145,7 +140,6 @@ void RegisterLocalState(PrefService* loc
 
 void RegisterUserPrefs(PrefService* user_prefs) {
   // User prefs
-  AppsPromo::RegisterUserPrefs(user_prefs);
   AutofillManager::RegisterUserPrefs(user_prefs);
   SessionStartupPref::RegisterUserPrefs(user_prefs);
   BookmarkModel::RegisterUserPrefs(user_prefs);
@@ -162,7 +156,6 @@ void RegisterUserPrefs(PrefService* user
   NewTabUI::RegisterUserPrefs(user_prefs);
   PluginsUI::RegisterUserPrefs(user_prefs);
   ProfileImpl::RegisterUserPrefs(user_prefs);
-  PromoResourceService::RegisterUserPrefs(user_prefs);
   HostContentSettingsMap::RegisterUserPrefs(user_prefs);
   CookieSettings::RegisterUserPrefs(user_prefs);
   DevToolsWindow::RegisterUserPrefs(user_prefs);
@@ -189,7 +182,6 @@ void RegisterUserPrefs(PrefService* user
 #if defined(ENABLE_CONFIGURATION_POLICY)
   policy::URLBlacklistManager::RegisterPrefs(user_prefs);
 #endif
-  SyncPromoUI::RegisterUserPrefs(user_prefs);
   GAIAInfoUpdateService::RegisterUserPrefs(user_prefs);
   chrome_browser_net::HttpServerPropertiesManager::RegisterPrefs(user_prefs);
 #if !defined(OS_CHROMEOS)
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/instant/instant_confirm_dialog.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/instant/instant_confirm_dialog.cc
@@ -5,7 +5,6 @@
 #include "chrome/browser/instant/instant_confirm_dialog.h"
 
 #include "chrome/browser/instant/instant_controller.h"
-#include "chrome/browser/instant/promo_counter.h"
 #include "chrome/browser/prefs/pref_service.h"
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/common/pref_names.h"
@@ -25,10 +24,6 @@ void ShowInstantConfirmDialogIfNecessary
   if (!prefs)
     return;
 
-  PromoCounter* promo_counter = profile->GetInstantPromoCounter();
-  if (promo_counter)
-    promo_counter->Hide();
-
   if (prefs->GetBoolean(prefs::kInstantConfirmDialogShown)) {
     InstantController::Enable(profile);
     return;
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/instant/instant_controller.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/instant/instant_controller.cc
@@ -14,7 +14,6 @@
 #include "chrome/browser/instant/instant_delegate.h"
 #include "chrome/browser/instant/instant_field_trial.h"
 #include "chrome/browser/instant/instant_loader.h"
-#include "chrome/browser/instant/promo_counter.h"
 #include "chrome/browser/platform_util.h"
 #include "chrome/browser/prefs/pref_service.h"
 #include "chrome/browser/profiles/profile.h"
@@ -70,7 +69,6 @@ void InstantController::RegisterUserPref
   prefs->RegisterInt64Pref(prefs::kInstantEnabledTime,
                            false,
                            PrefService::SYNCABLE_PREF);
-  PromoCounter::RegisterUserPrefs(prefs, prefs::kInstantPromo);
 }
 
 // static
@@ -103,10 +101,6 @@ bool InstantController::IsEnabled(Profil
 
 // static
 void InstantController::Enable(Profile* profile) {
-  PromoCounter* promo_counter = profile->GetInstantPromoCounter();
-  if (promo_counter)
-    promo_counter->Hide();
-
   PrefService* service = profile->GetPrefs();
   if (!service)
     return;
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/profiles/profile_impl.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/profiles/profile_impl.h
@@ -26,7 +26,6 @@ class ExtensionPrefValueMap;
 class NetPrefObserver;
 class PrefService;
 class ProfileSyncComponentsFactory;
-class PromoResourceService;
 class SpeechInputPreferences;
 class SpellCheckProfile;
 class SSLConfigServiceManager;
@@ -121,7 +120,6 @@ class ProfileImpl : public Profile,
   virtual void ReinitializeSpellCheckHost(bool force) OVERRIDE;
   virtual void MarkAsCleanShutdown() OVERRIDE;
   virtual void InitExtensions(bool extensions_enabled) OVERRIDE;
-  virtual void InitPromoResources() OVERRIDE;
   virtual void InitRegisteredProtocolHandlers() OVERRIDE;
   virtual FilePath last_selected_directory() OVERRIDE;
   virtual void set_last_selected_directory(const FilePath& path) OVERRIDE;
@@ -131,7 +129,6 @@ class ProfileImpl : public Profile,
   virtual TokenService* GetTokenService() OVERRIDE;
   void InitSyncService(const std::string& cros_user);
   virtual ExtensionInfoMap* GetExtensionInfoMap() OVERRIDE;
-  virtual PromoCounter* GetInstantPromoCounter() OVERRIDE;
   virtual ChromeURLDataManager* GetChromeURLDataManager() OVERRIDE;
   virtual chrome_browser_net::Predictor* GetNetworkPredictor() OVERRIDE;
   virtual void ClearNetworkingHistorySince(base::Time time) OVERRIDE;
@@ -240,7 +237,6 @@ class ProfileImpl : public Profile,
   scoped_ptr<NetPrefObserver> net_pref_observer_;
   scoped_ptr<TemplateURLFetcher> template_url_fetcher_;
   scoped_ptr<BookmarkModel> bookmark_bar_model_;
-  scoped_refptr<PromoResourceService> promo_resource_service_;
   scoped_refptr<ProtocolHandlerRegistry> protocol_handler_registry_;
 
   scoped_ptr<TokenService> token_service_;
@@ -285,11 +281,6 @@ class ProfileImpl : public Profile,
 
   scoped_ptr<SpellCheckProfile> spellcheck_profile_;
 
-#if defined(OS_WIN)
-  bool checked_instant_promo_;
-  scoped_ptr<PromoCounter> instant_promo_counter_;
-#endif
-
   // The AppCacheService for this profile, shared by all requests contexts
   // associated with this profile. Should only be used on the IO thread.
   scoped_refptr<ChromeAppCacheService> appcache_service_;
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/profiles/off_the_record_profile_impl.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/profiles/off_the_record_profile_impl.h
@@ -102,7 +102,6 @@ class OffTheRecordProfileImpl : public P
   virtual history::TopSites* GetTopSites() OVERRIDE;
   virtual void MarkAsCleanShutdown() OVERRIDE;
   virtual void InitExtensions(bool extensions_enabled) OVERRIDE;
-  virtual void InitPromoResources() OVERRIDE;
   virtual void InitRegisteredProtocolHandlers() OVERRIDE;
   virtual FilePath last_selected_directory() OVERRIDE;
   virtual void set_last_selected_directory(const FilePath& path) OVERRIDE;
@@ -117,7 +116,6 @@ class OffTheRecordProfileImpl : public P
   virtual ChromeBlobStorageContext* GetBlobStorageContext() OVERRIDE;
   virtual ExtensionInfoMap* GetExtensionInfoMap() OVERRIDE;
   virtual ChromeURLDataManager* GetChromeURLDataManager() OVERRIDE;
-  virtual PromoCounter* GetInstantPromoCounter() OVERRIDE;
 
 #if defined(OS_CHROMEOS)
   virtual void ChangeAppLocale(const std::string& locale,
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/profiles/off_the_record_profile_impl.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/profiles/off_the_record_profile_impl.cc
@@ -480,10 +480,6 @@ void OffTheRecordProfileImpl::InitExtens
   NOTREACHED();
 }
 
-void OffTheRecordProfileImpl::InitPromoResources() {
-  NOTREACHED();
-}
-
 void OffTheRecordProfileImpl::InitRegisteredProtocolHandlers() {
   NOTREACHED();
 }
@@ -540,10 +536,6 @@ ChromeURLDataManager* OffTheRecordProfil
   return chrome_url_data_manager_.get();
 }
 
-PromoCounter* OffTheRecordProfileImpl::GetInstantPromoCounter() {
-  return NULL;
-}
-
 #if defined(OS_CHROMEOS)
 void OffTheRecordProfileImpl::ChangeAppLocale(const std::string& locale,
                                               AppLocaleChangedVia) {
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/profiles/profile.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/profiles/profile.h
@@ -64,7 +64,6 @@ class NetworkActionPredictor;
 class PasswordStore;
 class PrefService;
 class ProfileSyncService;
-class PromoCounter;
 class ProtocolHandlerRegistry;
 class SpeechInputPreferences;
 class SpellCheckHost;
@@ -437,9 +436,6 @@ class Profile : public content::BrowserC
   // are controlled by |extensions_enabled|.
   virtual void InitExtensions(bool extensions_enabled) = 0;
 
-  // Start up service that gathers data from a promo resource feed.
-  virtual void InitPromoResources() = 0;
-
   // Register URLRequestFactories for protocols registered with
   // registerProtocolHandler.
   virtual void InitRegisteredProtocolHandlers() = 0;
@@ -451,9 +447,6 @@ class Profile : public content::BrowserC
   // Returns the IO-thread-accessible profile data for this profile.
   virtual ExtensionInfoMap* GetExtensionInfoMap() = 0;
 
-  // Returns the PromoCounter for Instant, or NULL if not applicable.
-  virtual PromoCounter* GetInstantPromoCounter() = 0;
-
   // Returns the ChromeURLDataManager for this profile.
   virtual ChromeURLDataManager* GetChromeURLDataManager() = 0;
 
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/profiles/profile_impl.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/profiles/profile_impl.cc
@@ -85,7 +85,6 @@
 #include "chrome/browser/user_style_sheet_watcher.h"
 #include "chrome/browser/visitedlink/visitedlink_event_listener.h"
 #include "chrome/browser/visitedlink/visitedlink_master.h"
-#include "chrome/browser/web_resource/promo_resource_service.h"
 #include "chrome/browser/webdata/web_data_service.h"
 #include "chrome/common/chrome_constants.h"
 #include "chrome/common/chrome_notification_types.h"
@@ -115,7 +114,6 @@
 #include "webkit/quota/quota_manager.h"
 
 #if defined(OS_WIN)
-#include "chrome/browser/instant/promo_counter.h"
 #include "chrome/browser/password_manager/password_store_win.h"
 #include "chrome/installer/util/install_util.h"
 #elif defined(OS_MACOSX)
@@ -238,9 +236,6 @@ ProfileImpl::ProfileImpl(const FilePath&
       created_web_data_service_(false),
       created_password_store_(false),
       start_time_(Time::Now()),
-#if defined(OS_WIN)
-      checked_instant_promo_(false),
-#endif
       delegate_(delegate),
       predictor_(NULL),
       session_restore_enabled_(false) {
@@ -479,14 +474,6 @@ void ProfileImpl::InitExtensions(bool ex
   }
 }
 
-void ProfileImpl::InitPromoResources() {
-  if (promo_resource_service_)
-    return;
-
-  promo_resource_service_ = new PromoResourceService(this);
-  promo_resource_service_->StartAfterDelay();
-}
-
 void ProfileImpl::InitRegisteredProtocolHandlers() {
   if (protocol_handler_registry_)
     return;
@@ -1420,28 +1407,6 @@ ChromeURLDataManager* ProfileImpl::GetCh
   return chrome_url_data_manager_.get();
 }
 
-PromoCounter* ProfileImpl::GetInstantPromoCounter() {
-#if defined(OS_WIN)
-  // TODO: enable this when we're ready to turn on the promo.
-  /*
-  if (!checked_instant_promo_) {
-    checked_instant_promo_ = true;
-    PrefService* prefs = GetPrefs();
-    if (!prefs->GetBoolean(prefs::kInstantEnabledOnce) &&
-        !InstantController::IsEnabled(this) &&
-        InstallUtil::IsChromeSxSProcess()) {
-      DCHECK(!instant_promo_counter_.get());
-      instant_promo_counter_.reset(
-          new PromoCounter(this, prefs::kInstantPromo, "Instant.Promo", 3, 3));
-    }
-  }
-  */
-  return instant_promo_counter_.get();
-#else
-  return NULL;
-#endif
-}
-
 #if defined(OS_CHROMEOS)
 void ProfileImpl::ChangeAppLocale(
     const std::string& new_locale, AppLocaleChangedVia via) {
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/profiles/profile_manager.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/profiles/profile_manager.cc
@@ -25,7 +25,6 @@
 #include "chrome/browser/sync/profile_sync_service.h"
 #include "chrome/browser/ui/browser.h"
 #include "chrome/browser/ui/browser_window.h"
-#include "chrome/browser/ui/webui/sync_promo/sync_promo_ui.h"
 #include "chrome/common/chrome_constants.h"
 #include "chrome/common/chrome_notification_types.h"
 #include "chrome/common/chrome_switches.h"
@@ -466,8 +465,6 @@ void ProfileManager::DoFinalInitForServi
                                          bool go_off_the_record) {
   const CommandLine& command_line = *CommandLine::ForCurrentProcess();
   profile->InitExtensions(!go_off_the_record);
-  if (!command_line.HasSwitch(switches::kDisableWebResources))
-    profile->InitPromoResources();
 }
 
 void ProfileManager::DoFinalInitLogging(Profile* profile) {
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/extensions/extension_service.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/extensions/extension_service.cc
@@ -32,7 +32,6 @@
 #include "chrome/browser/chrome_plugin_service_filter.h"
 #include "chrome/browser/download/download_extension_api.h"
 #include "chrome/browser/extensions/app_notification_manager.h"
-#include "chrome/browser/extensions/apps_promo.h"
 #include "chrome/browser/extensions/component_loader.h"
 #include "chrome/browser/extensions/crx_installer.h"
 #include "chrome/browser/extensions/default_apps_trial.h"
@@ -385,7 +384,6 @@ ExtensionService::ExtensionService(Profi
       menu_manager_(profile),
       app_notification_manager_(new AppNotificationManager(profile)),
       permissions_manager_(ALLOW_THIS_IN_INITIALIZER_LIST(this)),
-      apps_promo_(profile->GetPrefs()),
       event_routers_initialized_(false),
       extension_warnings_(profile) {
   CHECK(BrowserThread::CurrentlyOn(BrowserThread::UI));
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/extensions/extension_service.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/extensions/extension_service.h
@@ -22,7 +22,6 @@
 #include "base/property_bag.h"
 #include "base/time.h"
 #include "base/tuple.h"
-#include "chrome/browser/extensions/apps_promo.h"
 #include "chrome/browser/extensions/extension_icon_manager.h"
 #include "chrome/browser/extensions/extension_menu_manager.h"
 #include "chrome/browser/extensions/extension_permissions_api.h"
@@ -201,8 +200,6 @@ class ExtensionService
 
   const FilePath& install_directory() const { return install_directory_; }
 
-  AppsPromo* apps_promo() { return &apps_promo_; }
-
   extensions::ProcessMap* process_map() { return &process_map_; }
 
   // Whether this extension can run in an incognito window.
@@ -776,9 +773,6 @@ class ExtensionService
   ExtensionIconManager omnibox_icon_manager_;
   ExtensionIconManager omnibox_popup_icon_manager_;
 
-  // Manages the promotion of the web store.
-  AppsPromo apps_promo_;
-
   // Flag to make sure event routers are only initialized once.
   bool event_routers_initialized_;
 
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/browser_navigator.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/browser_navigator.cc
@@ -642,8 +642,7 @@ bool IsURLAllowedInIncognito(const GURL&
   return !(url.scheme() == chrome::kChromeUIScheme &&
       (url.host() == chrome::kChromeUISettingsHost ||
        url.host() == chrome::kChromeUIExtensionsHost ||
-       url.host() == chrome::kChromeUIBookmarksHost ||
-       url.host() == chrome::kChromeUISyncPromoHost));
+       url.host() == chrome::kChromeUIBookmarksHost));
 }
 
 }  // namespace browser
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/browser.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/browser.cc
@@ -5308,15 +5308,11 @@ void Browser::OnWindowDidShow() {
   if (!is_type_tabbed())
     return;
 
-  // Suppress the first run bubble if we're showing the sync promo.
   TabContents* contents = GetSelectedTabContents();
-  bool is_showing_promo = contents &&
-      contents->GetURL().SchemeIs(chrome::kChromeUIScheme) &&
-      contents->GetURL().host() == chrome::kChromeUISyncPromoHost;
 
   // Show the First Run information bubble if we've been told to.
   PrefService* local_state = g_browser_process->local_state();
-  if (!is_showing_promo && local_state &&
+  if (local_state &&
       local_state->GetBoolean(prefs::kShouldShowFirstRunBubble)) {
     FirstRun::BubbleType bubble_type = FirstRun::MINIMAL_BUBBLE;
     if (local_state->
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/browser_init.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/browser_init.cc
@@ -63,7 +63,6 @@
 #include "chrome/browser/ui/browser_navigator.h"
 #include "chrome/browser/ui/browser_window.h"
 #include "chrome/browser/ui/tab_contents/tab_contents_wrapper.h"
-#include "chrome/browser/ui/webui/sync_promo/sync_promo_ui.h"
 #include "chrome/common/chrome_constants.h"
 #include "chrome/common/chrome_paths.h"
 #include "chrome/common/chrome_result_codes.h"
@@ -1243,32 +1242,6 @@ void BrowserInit::LaunchWithProfile::Add
     }
   }
 
-  // If the sync promo page is going to be displayed then insert it at the front
-  // of the list.
-  if (SyncPromoUI::ShouldShowSyncPromoAtStartup(profile_, is_first_run_)) {
-    SyncPromoUI::DidShowSyncPromoAtStartup(profile_);
-    GURL old_url = (*startup_urls)[0];
-    (*startup_urls)[0] =
-        SyncPromoUI::GetSyncPromoURL(GURL(chrome::kChromeUINewTabURL), true);
-
-    // An empty URL means to go to the home page.
-    if (old_url.is_empty() &&
-        profile_->GetHomePage() == GURL(chrome::kChromeUINewTabURL)) {
-      old_url = GURL(chrome::kChromeUINewTabURL);
-    }
-
-    // If the old URL is not the NTP then insert it right after the sync promo.
-    if (old_url != GURL(chrome::kChromeUINewTabURL))
-      startup_urls->insert(startup_urls->begin() + 1, old_url);
-
-    // If we have more than two startup tabs then skip the welcome page.
-    if (startup_urls->size() > 2) {
-      std::vector<GURL>::iterator it = std::find(
-          startup_urls->begin(), startup_urls->end(), GetWelcomePageURL());
-      if (it != startup_urls->end())
-        startup_urls->erase(it);
-    }
-  }
 }
 
 void BrowserInit::LaunchWithProfile::CheckDefaultBrowser(Profile* profile) {
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/browser_navigator_browsertest.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/browser_navigator_browsertest.cc
@@ -991,22 +991,6 @@ IN_PROC_BROWSER_TEST_F(BrowserNavigatorT
   RunDoNothingIfIncognitoIsForcedTest(GURL(chrome::kChromeUIBookmarksURL));
 }
 
-// This test verifies that the sync promo page isn't opened in the incognito
-// window.
-IN_PROC_BROWSER_TEST_F(BrowserNavigatorTest,
-                       Disposition_SyncPromo_UseNonIncognitoWindow) {
-  RunUseNonIncognitoWindowTest(GURL(chrome::kChromeUISyncPromoURL));
-}
-
-// The Sync promo page is expected to always open in normal mode regardless of
-// whether the user is trying to open it in incognito mode or not.  This test
-// verifies that if incognito mode is forced (by policy), the sync promo page
-// doesn't open at all.
-IN_PROC_BROWSER_TEST_F(BrowserNavigatorTest,
-                       Disposition_SyncPromo_DoNothingIfIncognitoIsForced) {
-  RunDoNothingIfIncognitoIsForcedTest(GURL(chrome::kChromeUISyncPromoURL));
-}
-
 // This test makes sure a crashed singleton tab reloads from a new navigation.
 IN_PROC_BROWSER_TEST_F(BrowserNavigatorTest,
                        NavigateToCrashedSingletonTab) {
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/cocoa/omnibox/omnibox_popup_view_mac.mm
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/cocoa/omnibox/omnibox_popup_view_mac.mm
@@ -13,7 +13,6 @@
 #include "chrome/browser/autocomplete/autocomplete_match.h"
 #include "chrome/browser/autocomplete/autocomplete_popup_model.h"
 #include "chrome/browser/instant/instant_confirm_dialog.h"
-#include "chrome/browser/instant/promo_counter.h"
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/browser/ui/cocoa/event_utils.h"
 #include "chrome/browser/ui/cocoa/image_utils.h"
@@ -554,9 +553,6 @@ void OmniboxPopupViewMac::OpenURLForRow(
 }
 
 void OmniboxPopupViewMac::UserPressedOptIn(bool opt_in) {
-  PromoCounter* counter = profile_->GetInstantPromoCounter();
-  DCHECK(counter);
-  counter->Hide();
   if (opt_in) {
     browser::ShowInstantConfirmDialogIfNecessary([field_ window], profile_);
   }
@@ -566,8 +562,7 @@ void OmniboxPopupViewMac::UserPressedOpt
 }
 
 bool OmniboxPopupViewMac::ShouldShowInstantOptIn() {
-  PromoCounter* counter = profile_->GetInstantPromoCounter();
-  return (counter && counter->ShouldShow(base::Time::Now()));
+	return false;
 }
 
 @implementation AutocompleteButtonCell
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/views/autocomplete/autocomplete_popup_contents_view.cc
@@ -14,7 +14,6 @@
 #include "base/utf_string_conversions.h"
 #include "chrome/browser/autocomplete/autocomplete_popup_model.h"
 #include "chrome/browser/instant/instant_confirm_dialog.h"
-#include "chrome/browser/instant/promo_counter.h"
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/browser/ui/omnibox/omnibox_view.h"
 #include "chrome/browser/ui/views/autocomplete/autocomplete_result_view.h"
@@ -58,7 +57,7 @@ const int kEditFontAdjust = 0;
 const int kEditFontAdjust = -1;
 #endif
 
-// Horizontal padding between the buttons on the opt in promo.
+// Horizontal padding between the buttons on the opt in
 const int kOptInButtonPadding = 2;
 
 // Padding around the opt in view.
@@ -67,7 +66,7 @@ const int kOptInRightPadding = 10;
 const int kOptInTopPadding = 6;
 const int kOptInBottomPadding = 5;
 
-// Horizontal/Vertical inset of the promo background.
+// Horizontal/Vertical inset of the opt in background.
 const int kOptInBackgroundHInset = 6;
 const int kOptInBackgroundVInset = 2;
 
@@ -185,7 +184,7 @@ class AutocompletePopupContentsView::Ins
   }
 
  private:
-  // Creates and returns a button configured for the opt-in promo.
+  // Creates and returns a button configured for the opt-in.
   views::View* CreateButton(int id, const gfx::Font& font) {
     // NOTE: we can't use NativeButton as the popup is a layered window and
     // native buttons don't draw  in layered windows.
@@ -317,15 +316,8 @@ void AutocompletePopupContentsView::Upda
   for (size_t i = model_->result().size(); i < child_rv_count; ++i)
     child_at(i)->SetVisible(false);
 
-  PromoCounter* counter = profile_->GetInstantPromoCounter();
-  if (!opt_in_view_ && counter && counter->ShouldShow(base::Time::Now())) {
-    opt_in_view_ = new InstantOptInView(this, result_bold_font_, result_font_);
-    AddChildView(opt_in_view_);
-  } else if (opt_in_view_ && (!counter ||
-                              !counter->ShouldShow(base::Time::Now()))) {
-    delete opt_in_view_;
-    opt_in_view_ = NULL;
-  }
+	delete opt_in_view_;
+	opt_in_view_ = NULL;
 
   gfx::Rect new_target_bounds = CalculateTargetBounds(CalculatePopupHeight());
 
@@ -686,9 +678,6 @@ gfx::Rect AutocompletePopupContentsView:
 void AutocompletePopupContentsView::UserPressedOptIn(bool opt_in) {
   delete opt_in_view_;
   opt_in_view_ = NULL;
-  PromoCounter* counter = profile_->GetInstantPromoCounter();
-  DCHECK(counter);
-  counter->Hide();
   if (opt_in) {
     browser::ShowInstantConfirmDialogIfNecessary(
         location_bar_->GetWidget()->GetNativeWindow(), profile_);
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/webui/sync_setup_handler.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/webui/sync_setup_handler.cc
@@ -23,8 +23,6 @@
 #include "chrome/browser/sync/sync_setup_flow.h"
 #include "chrome/browser/sync/util/oauth.h"
 #include "chrome/browser/ui/browser_list.h"
-#include "chrome/browser/ui/webui/sync_promo/sync_promo_trial.h"
-#include "chrome/browser/ui/webui/sync_promo/sync_promo_ui.h"
 #include "chrome/browser/ui/webui/user_selectable_sync_type.h"
 #include "chrome/common/net/gaia/gaia_constants.h"
 #include "chrome/common/pref_names.h"
@@ -286,29 +284,10 @@ void SyncSetupHandler::GetStaticLocalize
                       ASCIIToUTF16(google_util::StringAppendGoogleLocaleParam(
                           chrome::kSyncGoogleDashboardURL))));
   localized_strings->SetString(
-      "promoTitle",
-      GetStringFUTF16(IDS_SYNC_PROMO_TITLE,
-                      GetStringUTF16(IDS_PRODUCT_NAME)));
-  localized_strings->SetString(
-      "promoMessageTitle",
-      GetStringFUTF16(IDS_SYNC_PROMO_MESSAGE_TITLE,
-                      GetStringUTF16(IDS_SHORT_PRODUCT_NAME)));
-  localized_strings->SetString(
       "syncEverythingHelpURL",
       google_util::StringAppendGoogleLocaleParam(
           chrome::kSyncEverythingLearnMoreURL));
 
-  // The experimental body string only appears if we are on the launch page
-  // version of the Sync Promo.
-  int message_body_resource_id = IDS_SYNC_PROMO_MESSAGE_BODY_A;
-  if (web_ui && SyncPromoUI::GetIsLaunchPageForSyncPromoURL(
-      web_ui->tab_contents()->GetURL())) {
-    message_body_resource_id = sync_promo_trial::GetMessageBodyResID();
-  }
-  localized_strings->SetString(
-      "promoMessageBody",
-      GetStringUTF16(message_body_resource_id));
-
   std::string create_account_url = google_util::StringAppendGoogleLocaleParam(
       chrome::kSyncCreateNewAccountURL);
   string16 create_account = GetStringUTF16(IDS_SYNC_CREATE_ACCOUNT);
@@ -334,7 +313,6 @@ void SyncSetupHandler::GetStaticLocalize
     { "cancel", IDS_CANCEL },
     { "settingUp", IDS_SYNC_LOGIN_SETTING_UP },
     { "errorSigningIn", IDS_SYNC_ERROR_SIGNING_IN },
-    { "signinHeader", IDS_SYNC_PROMO_SIGNIN_HEADER},
     { "captchaInstructions", IDS_SYNC_GAIA_CAPTCHA_INSTRUCTIONS },
     { "invalidAccessCode", IDS_SYNC_INVALID_ACCESS_CODE_LABEL },
     { "enterAccessCode", IDS_SYNC_ENTER_ACCESS_CODE_LABEL },
@@ -388,12 +366,6 @@ void SyncSetupHandler::GetStaticLocalize
     { "encryptAllOption", IDS_SYNC_ENCRYPT_ALL_DATA },
     { "encryptAllOption", IDS_SYNC_ENCRYPT_ALL_DATA },
     { "aspWarningText", IDS_SYNC_ASP_PASSWORD_WARNING_TEXT },
-    { "promoPageTitle", IDS_SYNC_PROMO_TAB_TITLE},
-    { "promoSkipButton", IDS_SYNC_PROMO_SKIP_BUTTON},
-    { "promoAdvanced", IDS_SYNC_PROMO_ADVANCED},
-    { "promoLearnMoreShow", IDS_SYNC_PROMO_LEARN_MORE_SHOW},
-    { "promoLearnMoreHide", IDS_SYNC_PROMO_LEARN_MORE_HIDE},
-    { "promoInformation", IDS_SYNC_PROMO_INFORMATION},
   };
 
   RegisterStrings(localized_strings, resources, arraysize(resources));
@@ -492,10 +464,6 @@ void SyncSetupHandler::ShowSetupDone(con
   web_ui_->CallJavascriptFunction(
       "SyncSetupOverlay.showSyncSetupPage", page);
 
-  // Suppress the sync promo once the user signs into sync. This way the user
-  // doesn't see the sync promo even if they sign out of sync later on.
-  SyncPromoUI::SetUserSkippedSyncPromo(Profile::FromWebUI(web_ui_));
-
   Profile* profile = Profile::FromWebUI(web_ui_);
   ProfileSyncService* service = profile->GetProfileSyncService();
   if (!service->HasSyncSetupCompleted()) {
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/webui/chrome_web_ui_factory.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/webui/chrome_web_ui_factory.cc
@@ -59,8 +59,6 @@
 #include "chrome/browser/ui/webui/chromeos/sim_unlock_ui.h"
 #include "chrome/browser/ui/webui/chromeos/system_info_ui.h"
 #include "chrome/browser/ui/webui/active_downloads_ui.h"
-#else
-#include "chrome/browser/ui/webui/sync_promo/sync_promo_ui.h"
 #endif
 
 #if defined(USE_VIRTUAL_KEYBOARD)
@@ -259,19 +257,6 @@ WebUIFactoryFunction GetWebUIFactoryFunc
   if (url.spec() == chrome::kChromeUIConstrainedHTMLTestURL)
     return &NewWebUI<ConstrainedHtmlUI>;
 
-#if !defined(OS_CHROMEOS)
-  if (url.host() == chrome::kChromeUISyncPromoHost) {
-    // If the sync promo page is enabled then use the sync promo WebUI otherwise
-    // use the NTP WebUI. We don't want to return NULL if the sync promo page
-    // is disabled because the page can be disabled mid-flight (for example,
-    // if sync login finishes).
-    if (SyncPromoUI::ShouldShowSyncPromo(profile))
-      return &NewWebUI<SyncPromoUI>;
-    else
-      return &NewWebUI<NewTabUI>;
-  }
-#endif
-
   if (url.host() == chrome::kChromeUIChromeURLsHost ||
       url.host() == chrome::kChromeUICreditsHost ||
       url.host() == chrome::kChromeUIDNSHost ||
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/webui/ntp/new_tab_page_sync_handler.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/webui/ntp/new_tab_page_sync_handler.cc
@@ -45,8 +45,6 @@ NewTabPageSyncHandler::MessageType
   switch (type) {
     case sync_ui_util::SYNC_ERROR:
       return SYNC_ERROR;
-    case sync_ui_util::SYNC_PROMO:
-      return SYNC_PROMO;
     case sync_ui_util::PRE_SYNCED:
     case sync_ui_util::SYNCED:
     default:
@@ -152,8 +150,6 @@ void NewTabPageSyncHandler::SendSyncMess
   } else {
     if (type == SYNC_ERROR)
       title = l10n_util::GetStringUTF8(IDS_SYNC_NTP_SYNC_SECTION_ERROR_TITLE);
-    else if (type == SYNC_PROMO)
-      title = l10n_util::GetStringUTF8(IDS_SYNC_NTP_SYNC_SECTION_PROMO_TITLE);
     else
       NOTREACHED();
 
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/webui/ntp/ntp_login_handler.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/webui/ntp/ntp_login_handler.h
@@ -40,12 +40,6 @@ class NTPLoginHandler : public WebUIMess
   static void GetLocalizedValues(Profile* profile, DictionaryValue* values);
 
  private:
-  // User actions while on the NTP when clicking on or viewing the sync promo.
-  enum NTPSignInPromoBuckets {
-    NTP_SIGN_IN_PROMO_VIEWED,
-    NTP_SIGN_IN_PROMO_CLICKED,
-    NTP_SIGN_IN_PROMO_BUCKET_BOUNDARY,
-  };
 
   // Called from JS when the NTP is loaded. |args| is the list of arguments
   // passed from JS and should be an empty list.
@@ -56,14 +50,14 @@ class NTPLoginHandler : public WebUIMess
   // arguments passed from JS and should be an empty list.
   void HandleShowSyncLoginUI(const ListValue* args);
 
-  // Records actions in SyncPromo.NTPPromo histogram.
+  // Records actions in histogram.
   void RecordInHistogram(int type);
 
-  // Called from JS when the sync promo NTP bubble has been displayed. |args| is
+  // Called from JS when the sync NTP bubble has been displayed. |args| is
   // the list of arguments passed from JS and should be an empty list.
   void HandleLoginMessageSeen(const ListValue* args);
 
-  // Called from JS when the user clicks on the advanced link the sync promo NTP
+  // Called from JS when the user clicks on the advanced link the sync NTP
   // bubble. Use use this to navigate to the sync settings page. |args| is the
   // list of arguments passed from JS and should be an empty list.
   void HandleShowAdvancedLoginUI(const ListValue* args);
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/webui/ntp/ntp_resource_cache.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/webui/ntp/ntp_resource_cache.cc
@@ -26,9 +26,7 @@
 #include "chrome/browser/ui/webui/ntp/new_tab_page_handler.h"
 #include "chrome/browser/ui/webui/ntp/new_tab_ui.h"
 #include "chrome/browser/ui/webui/ntp/ntp_login_handler.h"
-#include "chrome/browser/ui/webui/sync_promo/sync_promo_ui.h"
 #include "chrome/browser/ui/webui/sync_setup_handler.h"
-#include "chrome/browser/web_resource/promo_resource_service.h"
 #include "chrome/common/chrome_notification_types.h"
 #include "chrome/common/chrome_switches.h"
 #include "chrome/common/extensions/extension.h"
@@ -171,8 +169,6 @@ NTPResourceCache::NTPResourceCache(Profi
   registrar_.Add(this, chrome::NOTIFICATION_BROWSER_THEME_CHANGED,
                  content::Source<ThemeService>(
                      ThemeServiceFactory::GetForProfile(profile)));
-  registrar_.Add(this, chrome::NOTIFICATION_PROMO_RESOURCE_STATE_CHANGED,
-                 content::NotificationService::AllSources());
   registrar_.Add(this, chrome::NTP4_INTRO_PREF_CHANGED,
                  content::NotificationService::AllSources());
 
@@ -181,7 +177,6 @@ NTPResourceCache::NTPResourceCache(Profi
   pref_change_registrar_.Add(prefs::kSyncAcknowledgedSyncTypes, this);
   pref_change_registrar_.Add(prefs::kShowBookmarkBar, this);
   pref_change_registrar_.Add(prefs::kNTPShownPage, this);
-  pref_change_registrar_.Add(prefs::kSyncPromoShowNTPBubble, this);
 }
 
 NTPResourceCache::~NTPResourceCache() {}
@@ -216,8 +211,7 @@ void NTPResourceCache::Observe(int type,
     const content::NotificationSource& source,
     const content::NotificationDetails& details) {
   // Invalidate the cache.
-  if (chrome::NOTIFICATION_BROWSER_THEME_CHANGED == type ||
-      chrome::NOTIFICATION_PROMO_RESOURCE_STATE_CHANGED == type) {
+  if (chrome::NOTIFICATION_BROWSER_THEME_CHANGED == type) {
     new_tab_incognito_html_ = NULL;
     new_tab_html_ = NULL;
     new_tab_incognito_css_ = NULL;
@@ -329,8 +323,6 @@ void NTPResourceCache::CreateNewTabHTML(
       l10n_util::GetStringUTF16(IDS_APP_CONTEXT_MENU_OPEN_WINDOW));
   localized_strings.SetString("applaunchtypefullscreen",
       l10n_util::GetStringUTF16(IDS_APP_CONTEXT_MENU_OPEN_FULLSCREEN));
-  localized_strings.SetString("syncpromotext",
-      l10n_util::GetStringUTF16(IDS_SYNC_START_SYNC_BUTTON_LABEL));
   localized_strings.SetString("syncLinkText",
       l10n_util::GetStringUTF16(IDS_SYNC_ADVANCED_OPTIONS));
 #if defined(OS_CHROMEOS)
@@ -373,13 +365,6 @@ void NTPResourceCache::CreateNewTabHTML(
     localized_strings.SetString("customlogo", "false");
   }
 
-  // If the user has preferences for a start and end time for a promo from
-  // the server, and this promo string exists, set the localized string.
-  if (PromoResourceService::CanShowNotificationPromo(profile_)) {
-    localized_strings.SetString("serverpromo",
-        profile_->GetPrefs()->GetString(prefs::kNTPPromoLine));
-  }
-
   // Load the new tab page appropriate for this build
   std::string full_html;
   base::StringPiece new_tab_html(ResourceBundle::GetSharedInstance().
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/webui/ntp/new_tab_page_handler.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/webui/ntp/new_tab_page_handler.h
@@ -23,12 +23,6 @@ class NewTabPageHandler : public WebUIMe
   virtual WebUIMessageHandler* Attach(WebUI* web_ui) OVERRIDE;
   virtual void RegisterMessages() OVERRIDE;
 
-  // Callback for "closeNotificationPromo".
-  void HandleCloseNotificationPromo(const ListValue* args);
-
-  // Callback for "notificationPromoViewed".
-  void HandleNotificationPromoViewed(const ListValue* args);
-
   // Callback for "pageSelected".
   void HandlePageSelected(const ListValue* args);
 
@@ -68,7 +62,7 @@ class NewTabPageHandler : public WebUIMe
   static const int kHistogramEnumerationMax =
       (LAST_PAGE_ID >> kPageIdOffset) + 1;
 
-  // Helper to send out promo resource change notification.
+  // Helper to send out resource change notification.
   void Notify(chrome::NotificationType notification_type);
 
   DISALLOW_COPY_AND_ASSIGN(NewTabPageHandler);
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/webui/ntp/app_launcher_handler.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/webui/ntp/app_launcher_handler.h
@@ -62,9 +62,6 @@ class AppLauncherHandler : public WebUIM
   // ownership of the pointer.
   base::DictionaryValue* GetAppInfo(const Extension* extension);
 
-  // Populate the given dictionary with the web store promo content.
-  void FillPromoDictionary(base::DictionaryValue* value);
-
   // Callback for the "getApps" message.
   void HandleGetApps(const base::ListValue* args);
 
@@ -77,9 +74,6 @@ class AppLauncherHandler : public WebUIM
   // Callback for the "uninstallApp" message.
   void HandleUninstallApp(const base::ListValue* args);
 
-  // Callback for the "hideAppPromo" message.
-  void HandleHideAppsPromo(const base::ListValue* args);
-
   // Callback for the "createAppShortcut" message.
   void HandleCreateAppShortcut(const base::ListValue* args);
 
@@ -89,9 +83,6 @@ class AppLauncherHandler : public WebUIM
   // Callback for the "setPageIndex" message.
   void HandleSetPageIndex(const base::ListValue* args);
 
-  // Callback for the "promoSeen" message.
-  void HandlePromoSeen(const base::ListValue* args);
-
   // Callback for the "saveAppPageName" message.
   void HandleSaveAppPageName(const base::ListValue* args);
 
@@ -120,12 +111,11 @@ class AppLauncherHandler : public WebUIM
     int page_index;
   };
 
-  // Records a web store launch in the appropriate histograms. |promo_active|
-  // specifies if the web store promotion was active.
-  static void RecordWebStoreLaunch(bool promo_active);
+  // Records a web store launch in the appropriate histograms.
+  static void RecordWebStoreLaunch(bool dummy);
 
   // Records an app launch in the corresponding |bucket| of the app launch
-  // histogram. |promo_active| specifies if the web store promotion was active.
+  // histogram. 
   static void RecordAppLaunchByID(extension_misc::AppLaunchBucket bucket);
 
   // Records an app launch in the corresponding |bucket| of the app launch
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/webui/ntp/ntp_login_handler.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/webui/ntp/ntp_login_handler.cc
@@ -25,9 +25,7 @@
 #include "chrome/browser/ui/browser_list.h"
 #include "chrome/browser/ui/browser_window.h"
 #include "chrome/browser/ui/tab_contents/tab_contents_wrapper.h"
-#include "chrome/browser/ui/webui/sync_promo/sync_promo_ui.h"
 #include "chrome/browser/ui/webui/web_ui_util.h"
-#include "chrome/browser/web_resource/promo_resource_service.h"
 #include "chrome/common/chrome_notification_types.h"
 #include "chrome/common/pref_names.h"
 #include "chrome/common/url_constants.h"
@@ -117,13 +115,6 @@ void NTPLoginHandler::HandleShowSyncLogi
       prefs::kGoogleServicesUsername);
 
   if (username.empty()) {
-    // The user isn't signed in, show the sync promo.
-    if (SyncPromoUI::ShouldShowSyncPromo(profile)) {
-      web_ui_->tab_contents()->OpenURL(GURL(chrome::kChromeUISyncPromoURL),
-                                       GURL(), CURRENT_TAB,
-                                       content::PAGE_TRANSITION_LINK);
-      RecordInHistogram(NTP_SIGN_IN_PROMO_CLICKED);
-    }
   } else if (args->GetSize() == 4) {
     // The user is signed in, show the profiles menu.
     Browser* browser =
@@ -149,19 +140,9 @@ void NTPLoginHandler::HandleShowSyncLogi
 }
 
 void NTPLoginHandler::RecordInHistogram(int type) {
-  // Invalid type to record.
-  if (type < NTP_SIGN_IN_PROMO_VIEWED ||
-      type > NTP_SIGN_IN_PROMO_CLICKED) {
-    NOTREACHED();
-  } else {
-    UMA_HISTOGRAM_ENUMERATION("SyncPromo.NTPPromo", type,
-                              NTP_SIGN_IN_PROMO_BUCKET_BOUNDARY);
-  }
 }
 
 void NTPLoginHandler::HandleLoginMessageSeen(const ListValue* args) {
-  Profile::FromWebUI(web_ui_)->GetPrefs()->SetBoolean(
-      prefs::kSyncPromoShowNTPBubble, false);
 }
 
 void NTPLoginHandler::HandleShowAdvancedLoginUI(const ListValue* args) {
@@ -193,20 +174,6 @@ void NTPLoginHandler::UpdateLogin() {
       if (header.empty())
         header = UTF8ToUTF16(username);
     }
-  } else if (SyncPromoUI::ShouldShowSyncPromo(profile) &&
-             (SyncPromoUI::UserHasSeenSyncPromoAtStartup(profile) ||
-              PromoResourceService::CanShowNTPSignInPromo(profile))) {
-    string16 signed_in_link = l10n_util::GetStringUTF16(
-        IDS_SYNC_PROMO_NOT_SIGNED_IN_STATUS_LINK);
-    signed_in_link = ASCIIToUTF16("<span class='link-span'>") + signed_in_link +
-                     ASCIIToUTF16("</span>");
-    header = l10n_util::GetStringFUTF16(
-        IDS_SYNC_PROMO_NOT_SIGNED_IN_STATUS_HEADER,
-        l10n_util::GetStringUTF16(IDS_SHORT_PRODUCT_NAME));
-    sub_header = l10n_util::GetStringFUTF16(
-        IDS_SYNC_PROMO_NOT_SIGNED_IN_STATUS_SUB_HEADER, signed_in_link);
-    // Record that the user was shown the promo.
-    RecordInHistogram(NTP_SIGN_IN_PROMO_VIEWED);
   }
 
   StringValue header_value(header);
@@ -234,20 +201,12 @@ bool NTPLoginHandler::ShouldShow(Profile
 void NTPLoginHandler::GetLocalizedValues(Profile* profile,
                                          DictionaryValue* values) {
   PrefService* prefs = profile->GetPrefs();
-  if (prefs->GetString(prefs::kGoogleServicesUsername).empty() ||
-      !prefs->GetBoolean(prefs::kSyncPromoShowNTPBubble)) {
+  if (prefs->GetString(prefs::kGoogleServicesUsername).empty()) {
     return;
   }
 
-  values->SetString("login_status_message",
-      l10n_util::GetStringFUTF16(IDS_SYNC_PROMO_NTP_BUBBLE_MESSAGE,
-          l10n_util::GetStringUTF16(IDS_SHORT_PRODUCT_NAME)));
   values->SetString("login_status_url",
       google_util::StringAppendGoogleLocaleParam(chrome::kSyncLearnMoreURL));
   values->SetString("login_status_learn_more",
       l10n_util::GetStringUTF16(IDS_LEARN_MORE));
-  values->SetString("login_status_advanced",
-      l10n_util::GetStringUTF16(IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED));
-  values->SetString("login_status_dismiss",
-      l10n_util::GetStringUTF16(IDS_SYNC_PROMO_NTP_BUBBLE_OK));
 }
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/webui/ntp/app_launcher_handler.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/webui/ntp/app_launcher_handler.cc
@@ -18,7 +18,6 @@
 #include "base/utf_string_conversions.h"
 #include "base/values.h"
 #include "chrome/browser/extensions/app_notification_manager.h"
-#include "chrome/browser/extensions/apps_promo.h"
 #include "chrome/browser/extensions/crx_installer.h"
 #include "chrome/browser/extensions/extension_prefs.h"
 #include "chrome/browser/extensions/extension_service.h"
@@ -200,9 +199,6 @@ void AppLauncherHandler::RegisterMessage
   web_ui_->RegisterMessageCallback("uninstallApp",
       base::Bind(&AppLauncherHandler::HandleUninstallApp,
                  base::Unretained(this)));
-  web_ui_->RegisterMessageCallback("hideAppsPromo",
-      base::Bind(&AppLauncherHandler::HandleHideAppsPromo,
-                 base::Unretained(this)));
   web_ui_->RegisterMessageCallback("createAppShortcut",
       base::Bind(&AppLauncherHandler::HandleCreateAppShortcut,
                  base::Unretained(this)));
@@ -212,9 +208,6 @@ void AppLauncherHandler::RegisterMessage
   web_ui_->RegisterMessageCallback("setPageIndex",
       base::Bind(&AppLauncherHandler::HandleSetPageIndex,
                  base::Unretained(this)));
-  web_ui_->RegisterMessageCallback("promoSeen",
-      base::Bind(&AppLauncherHandler::HandlePromoSeen,
-                 base::Unretained(this)));
   web_ui_->RegisterMessageCallback("saveAppPageName",
       base::Bind(&AppLauncherHandler::HandleSaveAppPageName,
                  base::Unretained(this)));
@@ -299,11 +292,6 @@ void AppLauncherHandler::Observe(int typ
       break;
     }
     case chrome::NOTIFICATION_EXTENSION_LAUNCHER_REORDERED:
-    // The promo may not load until a couple seconds after the first NTP view,
-    // so we listen for the load notification and notify the NTP when ready.
-    case chrome::NOTIFICATION_WEB_STORE_PROMO_LOADED:
-      // TODO(estade): try to get rid of this inefficient operation.
-      HandleGetApps(NULL);
       break;
     case chrome::NOTIFICATION_PREF_CHANGED: {
       DictionaryValue dictionary;
@@ -388,10 +376,7 @@ void AppLauncherHandler::FillAppDictiona
   dictionary->SetBoolean("disableCreateAppShortcut", true);
 #endif
 
-  dictionary->SetBoolean(
-      "showLauncher",
-      extension_service_->apps_promo()->ShouldShowAppLauncher(
-          extension_service_->GetAppIds()));
+  dictionary->SetBoolean("showLauncher", false);
 
   PrefService* prefs = Profile::FromWebUI(web_ui_)->GetPrefs();
   const ListValue* app_page_names = prefs->GetList(prefs::kNTPAppPageNames);
@@ -421,44 +406,11 @@ DictionaryValue* AppLauncherHandler::Get
   return app_info;
 }
 
-void AppLauncherHandler::FillPromoDictionary(DictionaryValue* dictionary) {
-  AppsPromo::PromoData data = AppsPromo::GetPromo();
-  dictionary->SetString("promoHeader", data.header);
-  dictionary->SetString("promoButton", data.button);
-  dictionary->SetString("promoLink", data.link.spec());
-  dictionary->SetString("promoLogo", data.logo.spec());
-  dictionary->SetString("promoExpire", data.expire);
-}
-
 void AppLauncherHandler::HandleGetApps(const ListValue* args) {
   DictionaryValue dictionary;
 
-  // Tell the client whether to show the promo for this view. We don't do this
-  // in the case of PREF_CHANGED because:
-  //
-  // a) At that point in time, depending on the pref that changed, it can look
-  //    like the set of apps installed has changed, and we will mark the promo
-  //    expired.
-  // b) Conceptually, it doesn't really make sense to count a
-  //    prefchange-triggered refresh as a promo 'view'.
-  AppsPromo* apps_promo = extension_service_->apps_promo();
   Profile* profile = Profile::FromWebUI(web_ui_);
-  bool apps_promo_just_expired = false;
-  if (apps_promo->ShouldShowPromo(extension_service_->GetAppIds(),
-                                  &apps_promo_just_expired)) {
-    dictionary.SetBoolean("showPromo", true);
-    FillPromoDictionary(&dictionary);
-  } else {
-    dictionary.SetBoolean("showPromo", false);
-  }
-
-  // If the default apps have just expired (user viewed them too many times with
-  // no interaction), then we uninstall them and focus the recent sites section.
-  if (apps_promo_just_expired) {
-    ignore_changes_ = true;
-    UninstallDefaultApps();
-    ignore_changes_ = false;
-  }
+	dictionary.SetBoolean("showPromo", false);
 
   SetAppToBeHighlighted();
   FillAppDictionary(&dictionary);
@@ -480,8 +432,6 @@ void AppLauncherHandler::HandleGetApps(c
         content::Source<Profile>(profile));
     registrar_.Add(this, chrome::NOTIFICATION_EXTENSION_LAUNCHER_REORDERED,
         content::Source<ExtensionPrefs>(extension_service_->extension_prefs()));
-    registrar_.Add(this, chrome::NOTIFICATION_WEB_STORE_PROMO_LOADED,
-        content::Source<Profile>(profile));
     registrar_.Add(this, chrome::NOTIFICATION_EXTENSION_INSTALL_ERROR,
         content::Source<CrxInstaller>(NULL));
     registrar_.Add(this, chrome::NOTIFICATION_EXTENSION_LOAD_ERROR,
@@ -521,9 +471,6 @@ void AppLauncherHandler::HandleLaunchApp
         web_ui_util::GetDispositionFromClick(args, 3) : CURRENT_TAB;
   if (extension_id != extension_misc::kWebStoreAppId) {
     RecordAppLaunchByID(launch_bucket);
-    extension_service_->apps_promo()->ExpireDefaultApps();
-  } else {
-    RecordWebStoreLaunch(url.find("chrome-ntp-promo") != std::string::npos);
   }
 
   if (disposition == NEW_FOREGROUND_TAB || disposition == NEW_BACKGROUND_TAB) {
@@ -607,16 +554,6 @@ void AppLauncherHandler::HandleUninstall
   }
 }
 
-void AppLauncherHandler::HandleHideAppsPromo(const ListValue* args) {
-  // If the user has intentionally hidden the promotion, we'll uninstall all the
-  // default apps (we know the user hasn't installed any apps on their own at
-  // this point, or the promotion wouldn't have been shown).
-  // TODO(estade): this isn't used right now as we sort out the future of the
-  // apps promo on ntp4.
-  UninstallDefaultApps();
-  extension_service_->apps_promo()->HidePromo();
-}
-
 void AppLauncherHandler::HandleCreateAppShortcut(const ListValue* args) {
   std::string extension_id;
   CHECK(args->GetString(0, &extension_id));
@@ -667,12 +604,6 @@ void AppLauncherHandler::HandleSetPageIn
       static_cast<int>(page_index));
 }
 
-void AppLauncherHandler::HandlePromoSeen(const ListValue* args) {
-  UMA_HISTOGRAM_ENUMERATION(extension_misc::kAppsPromoHistogram,
-                            extension_misc::PROMO_SEEN,
-                            extension_misc::PROMO_BUCKET_BOUNDARY);
-}
-
 void AppLauncherHandler::HandleSaveAppPageName(const ListValue* args) {
   string16 name;
   CHECK(args->GetString(0, &name));
@@ -808,16 +739,12 @@ void AppLauncherHandler::RegisterUserPre
 }
 
 // statiic
-void AppLauncherHandler::RecordWebStoreLaunch(bool promo_active) {
+void AppLauncherHandler::RecordWebStoreLaunch(bool dummy) {
   UMA_HISTOGRAM_ENUMERATION(extension_misc::kAppLaunchHistogram,
                             extension_misc::APP_LAUNCH_NTP_WEBSTORE,
                             extension_misc::APP_LAUNCH_BUCKET_BOUNDARY);
 
-  if (!promo_active) return;
-
-  UMA_HISTOGRAM_ENUMERATION(extension_misc::kAppsPromoHistogram,
-                            extension_misc::PROMO_LAUNCH_WEB_STORE,
-                            extension_misc::PROMO_BUCKET_BOUNDARY);
+  return;
 }
 
 // static
@@ -954,11 +881,4 @@ ExtensionInstallUI* AppLauncherHandler::
 }
 
 void AppLauncherHandler::UninstallDefaultApps() {
-  AppsPromo* apps_promo = extension_service_->apps_promo();
-  const ExtensionIdSet& app_ids = apps_promo->old_default_apps();
-  for (ExtensionIdSet::const_iterator iter = app_ids.begin();
-       iter != app_ids.end(); ++iter) {
-    if (extension_service_->GetExtensionById(*iter, true))
-      extension_service_->UninstallExtension(*iter, false, NULL);
-  }
 }
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/ui/webui/ntp/new_tab_page_handler.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/ui/webui/ntp/new_tab_page_handler.cc
@@ -15,7 +15,6 @@
 #include "chrome/browser/profiles/profile.h"
 #include "chrome/browser/sync/profile_sync_service.h"
 #include "chrome/browser/ui/webui/ntp/new_tab_ui.h"
-#include "chrome/browser/web_resource/notification_promo.h"
 #include "chrome/common/pref_names.h"
 #include "content/public/browser/notification_service.h"
 #include "grit/chromium_strings.h"
@@ -49,12 +48,6 @@ WebUIMessageHandler* NewTabPageHandler::
 }
 
 void NewTabPageHandler::RegisterMessages() {
-  web_ui()->RegisterMessageCallback("closeNotificationPromo",
-      base::Bind(&NewTabPageHandler::HandleCloseNotificationPromo,
-                 base::Unretained(this)));
-  web_ui()->RegisterMessageCallback("notificationPromoViewed",
-      base::Bind(&NewTabPageHandler::HandleNotificationPromoViewed,
-                 base::Unretained(this)));
   web_ui()->RegisterMessageCallback("pageSelected",
       base::Bind(&NewTabPageHandler::HandlePageSelected,
                  base::Unretained(this)));
@@ -66,20 +59,6 @@ void NewTabPageHandler::RegisterMessages
                  base::Unretained(this)));
 }
 
-void NewTabPageHandler::HandleCloseNotificationPromo(const ListValue* args) {
-  scoped_refptr<NotificationPromo> notification_promo =
-      NotificationPromo::Create(Profile::FromWebUI(web_ui()), NULL);
-  notification_promo->HandleClosed();
-  Notify(chrome::NOTIFICATION_PROMO_RESOURCE_STATE_CHANGED);
-}
-
-void NewTabPageHandler::HandleNotificationPromoViewed(const ListValue* args) {
-  scoped_refptr<NotificationPromo> notification_promo =
-      NotificationPromo::Create(Profile::FromWebUI(web_ui_), NULL);
-  if (notification_promo->HandleViewed())
-    Notify(chrome::NOTIFICATION_PROMO_RESOURCE_STATE_CHANGED);
-}
-
 void NewTabPageHandler::HandlePageSelected(const ListValue* args) {
   double page_id_double;
   CHECK(args->GetDouble(0, &page_id_double));
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/chromeos/preferences.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/chromeos/preferences.cc
@@ -189,11 +189,6 @@ void Preferences::RegisterUserPrefs(Pref
                              true,
                              PrefService::SYNCABLE_PREF);
 
-  // 3G first-time usage promo will be shown at least once.
-  prefs->RegisterBooleanPref(prefs::kShow3gPromoNotification,
-                             true,
-                             PrefService::UNSYNCABLE_PREF);
-
   // OAuth1 all access token and secret pair.
   prefs->RegisterStringPref(prefs::kOAuth1Token,
                             "",
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/chromeos/status/network_menu_button.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/chromeos/status/network_menu_button.cc
@@ -37,10 +37,6 @@
 
 namespace {
 
-// Time in milliseconds to delay showing of promo
-// notification when Chrome window is not on screen.
-const int kPromoShowDelayMs = 10000;
-
 const int kNotificationCountPrefDefault = -1;
 
 bool GetBooleanPref(const char* pref_name) {
@@ -72,26 +68,6 @@ void SetIntegerLocalPref(const char* pre
   prefs->SetInteger(pref_name, value);
 }
 
-// Returns prefs::kShow3gPromoNotification or false
-// if there's no active browser.
-bool ShouldShow3gPromoNotification() {
-  return GetBooleanPref(prefs::kShow3gPromoNotification);
-}
-
-void SetShow3gPromoNotification(bool value) {
-  SetBooleanPref(prefs::kShow3gPromoNotification, value);
-}
-
-// Returns prefs::kCarrierDealPromoShown which is number of times
-// carrier deal notification has been shown to users on this machine.
-int GetCarrierDealPromoShown() {
-  return GetIntegerLocalPref(prefs::kCarrierDealPromoShown);
-}
-
-void SetCarrierDealPromoShown(int value) {
-  SetIntegerLocalPref(prefs::kCarrierDealPromoShown, value);
-}
-
 }  // namespace
 
 namespace chromeos {
@@ -102,7 +78,6 @@ namespace chromeos {
 NetworkMenuButton::NetworkMenuButton(StatusAreaButton::Delegate* delegate)
     : StatusAreaButton(delegate, this),
       mobile_data_bubble_(NULL),
-      check_for_promo_(true),
       was_sim_locked_(false),
       ALLOW_THIS_IN_INITIALIZER_LIST(weak_ptr_factory_(this)) {
   set_id(VIEW_ID_STATUS_BUTTON_NETWORK_MENU);
@@ -136,7 +111,6 @@ NetworkMenuButton::~NetworkMenuButton()
 // static
 void NetworkMenuButton::RegisterPrefs(PrefService* local_state) {
   // Carrier deal notification shown count defaults to 0.
-  local_state->RegisterIntegerPref(prefs::kCarrierDealPromoShown, 0);
 }
 
 ////////////////////////////////////////////////////////////////////////////////
@@ -171,7 +145,6 @@ void NetworkMenuButton::OnNetworkManager
   network_menu_->UpdateMenu();
   RefreshNetworkObserver(cros);
   RefreshNetworkDeviceObserver(cros);
-  ShowOptionalMobileDataPromoNotification(cros);
 }
 
 ////////////////////////////////////////////////////////////////////////////////
@@ -305,19 +278,7 @@ const MobileConfig::Carrier* NetworkMenu
 
 const MobileConfig::CarrierDeal* NetworkMenuButton::GetCarrierDeal(
     const MobileConfig::Carrier* carrier) {
-  const MobileConfig::CarrierDeal* deal = carrier->GetDefaultDeal();
-  if (deal) {
-    // Check deal for validity.
-    int carrier_deal_promo_pref = GetCarrierDealPromoShown();
-    if (carrier_deal_promo_pref >= deal->notification_count())
-      return NULL;
-    const std::string locale = g_browser_process->GetApplicationLocale();
-    std::string deal_text = deal->GetLocalizedString(locale,
-                                                     "notification_text");
-    if (deal_text.empty())
-      return NULL;
-  }
-  return deal;
+	return NULL;
 }
 
 void NetworkMenuButton::SetNetworkIcon() {
@@ -358,89 +319,6 @@ void NetworkMenuButton::RefreshNetworkDe
   }
 }
 
-void NetworkMenuButton::ShowOptionalMobileDataPromoNotification(
-    NetworkLibrary* cros) {
-  // Display one-time notification for non-Guest users on first use
-  // of Mobile Data connection or if there's a carrier deal defined
-  // show that even if user has already seen generic promo.
-  if (StatusAreaViewChromeos::IsBrowserMode() &&
-      !UserManager::Get()->IsLoggedInAsGuest() &&
-      check_for_promo_ && BrowserList::GetLastActive() &&
-      cros->cellular_connected() && !cros->ethernet_connected() &&
-      !cros->wifi_connected()) {
-    std::string deal_text;
-    int carrier_deal_promo_pref = kNotificationCountPrefDefault;
-    const MobileConfig::CarrierDeal* deal = NULL;
-    const MobileConfig::Carrier* carrier = GetCarrier(cros);
-    if (carrier)
-      deal = GetCarrierDeal(carrier);
-    if (deal) {
-      carrier_deal_promo_pref = GetCarrierDealPromoShown();
-      const std::string locale = g_browser_process->GetApplicationLocale();
-      deal_text = deal->GetLocalizedString(locale, "notification_text");
-      deal_info_url_ = deal->info_url();
-      deal_topup_url_ = carrier->top_up_url();
-    } else if (!ShouldShow3gPromoNotification()) {
-      check_for_promo_ = false;
-      return;
-    }
-
-    gfx::Rect button_bounds = GetScreenBounds();
-    // StatusArea button Y position is usually -1, fix it so that
-    // Contains() method for screen bounds works correctly.
-    button_bounds.set_y(button_bounds.y() + 1);
-    gfx::Rect screen_bounds(chromeos::CalculateScreenBounds(gfx::Size()));
-
-    // Chrome window is initialized in visible state off screen and then is
-    // moved into visible screen area. Make sure that we're on screen
-    // so that bubble is shown correctly.
-    if (!screen_bounds.Contains(button_bounds)) {
-      // If we're not on screen yet, delay notification display.
-      // It may be shown earlier, on next NetworkLibrary callback processing.
-      if (!weak_ptr_factory_.HasWeakPtrs()) {
-        MessageLoop::current()->PostDelayedTask(FROM_HERE,
-            base::Bind(
-                &NetworkMenuButton::ShowOptionalMobileDataPromoNotification,
-                weak_ptr_factory_.GetWeakPtr(),
-                cros),
-            kPromoShowDelayMs);
-      }
-      return;
-    }
-
-    string16 message = l10n_util::GetStringUTF16(IDS_3G_NOTIFICATION_MESSAGE);
-    if (!deal_text.empty())
-      message = UTF8ToUTF16(deal_text + "\n\n") + message;
-
-    // Use deal URL if it's defined or general "Network Settings" URL.
-    int link_message_id;
-    if (deal_topup_url_.empty())
-      link_message_id = IDS_OFFLINE_NETWORK_SETTINGS;
-    else
-      link_message_id = IDS_STATUSBAR_NETWORK_VIEW_ACCOUNT;
-
-    std::vector<string16> links;
-    links.push_back(l10n_util::GetStringUTF16(link_message_id));
-    if (!deal_info_url_.empty())
-      links.push_back(l10n_util::GetStringUTF16(IDS_LEARN_MORE));
-    mobile_data_bubble_ = new MessageBubble(
-        this,
-        views::BubbleBorder::TOP_RIGHT,
-        ResourceBundle::GetSharedInstance().GetBitmapNamed(IDR_NOTIFICATION_3G),
-        message,
-        links);
-    mobile_data_bubble_->set_link_listener(this);
-    browser::CreateViewsBubbleAboveLockScreen(mobile_data_bubble_);
-    mobile_data_bubble_->Show();
-    mobile_data_bubble_->GetWidget()->AddObserver(this);
-
-    check_for_promo_ = false;
-    SetShow3gPromoNotification(false);
-    if (carrier_deal_promo_pref != kNotificationCountPrefDefault)
-      SetCarrierDealPromoShown(carrier_deal_promo_pref + 1);
-  }
-}
-
 void NetworkMenuButton::SetTooltipAndAccessibleName(const string16& label) {
   SetTooltipText(label);
   SetAccessibleName(label);
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/browser/chromeos/status/network_menu_button.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/browser/chromeos/status/network_menu_button.h
@@ -117,9 +117,6 @@ class NetworkMenuButton : public StatusA
   // old network observer and add a network observer for the active network.
   void RefreshNetworkObserver(NetworkLibrary* cros);
 
-  // Shows 3G promo notification if needed.
-  void ShowOptionalMobileDataPromoNotification(NetworkLibrary* cros);
-
   void SetTooltipAndAccessibleName(const string16& label);
 
   // The Network menu.
@@ -131,13 +128,9 @@ class NetworkMenuButton : public StatusA
   // The network icon and associated data.
   scoped_ptr<NetworkMenuIcon> network_icon_;
 
-  // Notification bubble for 3G promo.
+  // Notification bubble.
   MessageBubble* mobile_data_bubble_;
 
-  // True if check for promo needs to be done,
-  // otherwise just ignore it for current session.
-  bool check_for_promo_;
-
   // Cellular device SIM was locked when we last checked
   bool was_sim_locked_;
 
@@ -151,7 +144,7 @@ class NetworkMenuButton : public StatusA
   // Current carrier deal top-up URL.
   std::string deal_topup_url_;
 
-  // Factory for delaying showing promo notification.
+  // Factory for delaying showing notification.
   base::WeakPtrFactory<NetworkMenuButton> weak_ptr_factory_;
 
   DISALLOW_COPY_AND_ASSIGN(NetworkMenuButton);
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/test/base/testing_profile.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/test/base/testing_profile.cc
@@ -819,10 +819,6 @@ ExtensionInfoMap* TestingProfile::GetExt
   return NULL;
 }
 
-PromoCounter* TestingProfile::GetInstantPromoCounter() {
-  return NULL;
-}
-
 ChromeURLDataManager* TestingProfile::GetChromeURLDataManager() {
   if (!chrome_url_data_manager_.get())
     chrome_url_data_manager_.reset(
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/test/base/testing_profile.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/test/base/testing_profile.h
@@ -257,7 +257,6 @@ class TestingProfile : public Profile {
   virtual WebKitContext* GetOffTheRecordWebKitContext();
   virtual void MarkAsCleanShutdown() OVERRIDE {}
   virtual void InitExtensions(bool extensions_enabled) OVERRIDE {}
-  virtual void InitPromoResources() OVERRIDE {}
   virtual void InitRegisteredProtocolHandlers() OVERRIDE {}
 
   virtual FilePath last_selected_directory() OVERRIDE;
@@ -288,7 +287,6 @@ class TestingProfile : public Profile {
       const std::string& cros_notes) OVERRIDE;
   virtual ChromeBlobStorageContext* GetBlobStorageContext() OVERRIDE;
   virtual ExtensionInfoMap* GetExtensionInfoMap() OVERRIDE;
-  virtual PromoCounter* GetInstantPromoCounter() OVERRIDE;
   virtual ChromeURLDataManager* GetChromeURLDataManager() OVERRIDE;
   virtual chrome_browser_net::Predictor* GetNetworkPredictor() OVERRIDE;
   virtual void ClearNetworkingHistorySince(base::Time time) OVERRIDE;
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/app/generated_resources.grd
+++ chromium-browser-17.0.963.56~r121963/src/chrome/app/generated_resources.grd
@@ -10326,9 +10326,6 @@ Some features may be unavailable.  Pleas
       <message name="IDS_SYNC_ERROR_SIGNING_IN" desc="An error was encountered while signing the user in.">
         Error signing in.
       </message>
-      <message name="IDS_SYNC_PROMO_SIGNIN_HEADER" desc="The header at the top of the GAIA sign in box. Note that sync here is intended as a verb, not a noun.">
-        Sign in and sync
-      </message>
       <message name="IDS_SYNC_UNRECOVERABLE_ERROR" desc="Message shown when sync
         setup failed due to an unrecoverable error and can't continue.">
         Oops, Sync has stopped working.
@@ -10458,12 +10455,6 @@ Some features may be unavailable.  Pleas
       <message name="IDS_SYNC_NTP_SYNC_SECTION_ERROR_TITLE" desc="The title to display in the New Tab Page sync status section in case of an error.">
         Sync failed
       </message>
-      <message name="IDS_SYNC_NTP_SYNC_SECTION_PROMO_TITLE" desc="The title to display in the New Tab Page sync status section in case of a promotion.">
-        New!
-      </message>
-      <message name="IDS_SYNC_NTP_PASSWORD_PROMO" desc="The message to display to promote passwords sync now being available.">
-        <ph name="PRODUCT_NAME">$1<ex>Chrome</ex></ph> can now sync your passwords.
-      </message>
       <message name="IDS_SYNC_NTP_PASSWORD_ENABLE" desc="The link text to present for passwords sync.">
         Enable
       </message>
@@ -10474,61 +10465,7 @@ Some features may be unavailable.  Pleas
         Synced as <ph name="USER_EMAIL_ADDRESS">$1<ex>foo@gmail.com</ex></ph>
       </message>
 
-      <!-- Sync Promo New Tab Page bubble strings -->
-      <message name="IDS_SYNC_PROMO_NTP_BUBBLE_MESSAGE" desc="The body of the sync promo NTP bubble.">
-        You're now signed in to <ph name="SHORT_PRODUCT_NAME">$1<ex>Chrome</ex></ph>. Your bookmarks, history, and other settings are being synced with your Google Account.
-      </message>
-      <message name="IDS_SYNC_PROMO_NTP_BUBBLE_MESSAGE_ALT1" desc="And alternate string for the body of the sync promo NTP bubble.">
-        You're now signed in to <ph name="SHORT_PRODUCT_NAME">$1<ex>Chrome</ex></ph>. Your bookmarks, history, and other settings are being synced with your Google Account using default settings.
-      </message>
-      <message name="IDS_SYNC_PROMO_NTP_BUBBLE_LEARN_MORE" desc="The learn more link in the sync promo NTP bubble. Clicking the link will take users to a page explaining what sync is.">
-        Learn more
-      </message>
-      <if expr="not pp_ifdef('use_titlecase')">
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_OK" desc="The ok button in the sync promo NTP bubble. Clicking on the button will dismiss the bubble.">
-          OK
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED" desc="The advanced link in the sync promo NTP bubble. Clicking the link will take the user to advanced settings.">
-          Advanced...
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED_ALT1" desc="An alternative text for the advanced link in the sync promo NTP bubble.">
-          Configure...
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED_ALT2" desc="An alternative text for the advanced link in the sync promo NTP bubble.">
-          Edit...
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED_ALT3" desc="An alternative text for the advanced link in the sync promo NTP bubble.">
-          Advanced settings...
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED_ALT4" desc="An alternative text for the advanced link in the sync promo NTP bubble.">
-          Configure settings...
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED_ALT5" desc="An alternative text for the advanced link in the sync promo NTP bubble.">
-          Advanced setup...
-        </message>
-      </if>
       <if expr="pp_ifdef('use_titlecase')">
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_OK" desc="In title case. The ok button in the sync promo NTP bubble. Clicking on the button will dismiss the bubble.">
-          OK
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED" desc="In title case. The advanced link in the sync promo NTP bubble. Clicking the link will take the user to advanced settings.">
-          Advanced...
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED_ALT1" desc="In title case. An alternative text for the advanced link in the sync promo NTP bubble.">
-          Configure...
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED_ALT2" desc="In title case. An alternative text for the advanced link in the sync promo NTP bubble.">
-          Edit...
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED_ALT3" desc="In title case. An alternative text for the advanced link in the sync promo NTP bubble.">
-          Advanced Settings...
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED_ALT4" desc="In title case. An alternative text for the advanced link in the sync promo NTP bubble.">
-          Configure Settings...
-        </message>
-        <message name="IDS_SYNC_PROMO_NTP_BUBBLE_ADVANCED_ALT5" desc="In title case. An alternative text for the advanced link in the sync promo NTP bubble.">
-          Advanced Setup...
-        </message>
       </if>
 
       <!-- Customize Sync dialog -->
@@ -10865,67 +10802,6 @@ Some features may be unavailable.  Pleas
         </message>
       </if>
 
-      <!-- Sync promo page chrome://syncpromo -->
-      <message name="IDS_SYNC_PROMO_TAB_TITLE" desc="The title of the sync promo tab.">
-        Sign in
-      </message>
-      <message name="IDS_SYNC_PROMO_TITLE" desc="The title at the top of the sync promo">
-        Welcome to <ph name="PRODUCT_NAME">$1<ex>Google Chrome</ex></ph>
-      </message>
-      <message name="IDS_SYNC_PROMO_MESSAGE_TITLE" desc="The first part of the sync promo message.">
-        Set up <ph name="SHORT_PRODUCT_NAME">$1<ex>Chrome</ex></ph> with your Google Account
-      </message>
-      <message name="IDS_SYNC_PROMO_MESSAGE_BODY_A" desc="The body of the sync promo message. This is experiment choice 0, and the control/default message.">
-        Get your bookmarks, history, and settings on all your devices.
-      </message>
-      <message name="IDS_SYNC_PROMO_MESSAGE_BODY_B" desc="The body of the sync promo message. Experiment choice 1.">
-        Back up your bookmarks, history, and settings online.
-      </message>
-      <message name="IDS_SYNC_PROMO_MESSAGE_BODY_C" desc="The body of the sync promo message. Experiment choice 2.">
-        Sync your personalized browser features between all your devices.
-      </message>
-      <message name="IDS_SYNC_PROMO_MESSAGE_BODY_D" desc="The body of the sync promo message. Experiment choice 3.">
-        Get your bookmarks, history, and settings on all your devices. Plus, you'll be automatically signed in to your favorite Google services.
-      </message>
-      <if expr="pp_ifdef('use_titlecase')">
-        <message name="IDS_SYNC_PROMO_SKIP_BUTTON" desc="In Title Case: The button at the bottom to let the user skip the sync promo.">
-          No Thanks
-        </message>
-      </if>
-      <if expr="not pp_ifdef('use_titlecase')">
-        <message name="IDS_SYNC_PROMO_SKIP_BUTTON" desc="The button at the bottom to let the user skip the sync promo.">
-          No thanks
-        </message>
-      </if>
-      <message name="IDS_SYNC_PROMO_ADVANCED" desc="The link button at the bottom to let the user customize the sync settings.">
-        Advanced...
-      </message>
-      <message name="IDS_SYNC_PROMO_LEARN_MORE_SHOW" desc="Text for the link at the end of the message body to show more information about sync.">
-        Learn more
-      </message>
-      <message name="IDS_SYNC_PROMO_LEARN_MORE_HIDE" desc="Text for the link to hide the sync information.">
-        Hide
-      </message>
-      <message name="IDS_SYNC_PROMO_INFORMATION" desc="Information about sync displayed when the user clicks the Learn More link.">
-        &lt;h3&gt;Backup&lt;/h3&gt;
-        &lt;p&gt;
-        Signing in to Chrome saves your bookmarks, history, and settings securely to your Google Account, so they’re always backed up online. If something happens to your computer, just sign in to Chrome on your new machine to get all your Chrome data back.
-        &lt;/p&gt;
-        &lt;h3&gt;Sync&lt;/h3&gt;
-        &lt;p&gt;
-        When you sign in to Chrome on multiple computers, anything you change on one computer instantly syncs to all your other computers—no wires needed. For example, add a bookmark on your laptop, and it will also appear on your desktop. That way, you can always pick up right where you left off.
-        &lt;/p&gt;
-      </message>
-      <message name="IDS_SYNC_PROMO_NOT_SIGNED_IN_STATUS_HEADER" desc="The first line of the of the message shown in NTP when a user is not signed into sync.">
-        Not signed in to <ph name="SHORT_PRODUCT_NAME">$1<ex>Chrome</ex></ph>
-      </message>
-      <message name="IDS_SYNC_PROMO_NOT_SIGNED_IN_STATUS_SUB_HEADER" desc="The second line of the of the message shown in NTP when a user is not signed into sync.">
-        (You're missing out&#8212;<ph name="IDS_SYNC_PROMO_NOT_SIGNED_IN_STATUS_LINK">$1<ex>sign in</ex></ph>)
-      </message>
-      <message name="IDS_SYNC_PROMO_NOT_SIGNED_IN_STATUS_LINK" desc="The linkified portion of the sync sign in promo on the NTP. Clicking this text allows the user to sign in to sync.">
-        sign in
-      </message>
-
       <!-- Translate Info Bar -->
       <message name="IDS_TRANSLATE_INFOBAR_OPTIONS" desc="Text to show for the translate infobar options menu button">
         Options
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/common/url_constants.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/common/url_constants.h
@@ -61,7 +61,6 @@ extern const char kChromeUISessionsURL[]
 extern const char kChromeUISettingsURL[];
 extern const char kChromeUIShorthangURL[];
 extern const char kChromeUISSLClientCertificateSelectorURL[];
-extern const char kChromeUISyncPromoURL[];
 extern const char kChromeUITaskManagerURL[];
 extern const char kChromeUITermsURL[];
 extern const char kChromeUIThumbnailURL[];
@@ -164,7 +163,6 @@ extern const char kChromeUISSLClientCert
 extern const char kChromeUIStatsHost[];
 extern const char kChromeUISyncHost[];
 extern const char kChromeUISyncInternalsHost[];
-extern const char kChromeUISyncPromoHost[];
 extern const char kChromeUISyncResourcesHost[];
 extern const char kChromeUITaskManagerHost[];
 extern const char kChromeUITCMallocHost[];
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/common/url_constants.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/common/url_constants.cc
@@ -66,7 +66,6 @@ const char kChromeUISessionsURL[] = "chr
 const char kChromeUISettingsURL[] = "chrome://settings/";
 const char kChromeUIShorthangURL[] = "chrome://shorthang/";
 const char kChromeUISSLClientCertificateSelectorURL[] = "chrome://select-cert/";
-const char kChromeUISyncPromoURL[] = "chrome://syncpromo/";
 const char kChromeUITaskManagerURL[] = "chrome://tasks/";
 const char kChromeUITermsURL[] = "chrome://terms/";
 const char kChromeUIThumbnailURL[] = "chrome://thumb/";
@@ -172,7 +171,6 @@ const char kChromeUISSLClientCertificate
 const char kChromeUIStatsHost[] = "stats";
 const char kChromeUISyncHost[] = "sync";
 const char kChromeUISyncInternalsHost[] = "sync-internals";
-const char kChromeUISyncPromoHost[] = "syncpromo";
 const char kChromeUISyncResourcesHost[] = "syncresources";
 const char kChromeUITaskManagerHost[] = "tasks";
 const char kChromeUITCMallocHost[] = "tcmalloc";
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/common/chrome_switches.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/common/chrome_switches.cc
@@ -631,10 +631,6 @@ const char kFocusExistingTabOnOpen[]
 // whether or not it's actually the first run.
 const char kFirstRun[]                      = "first-run";
 
-// Forces the apps/webstore promo to be shown, independent of whether it has
-// timed out, etc. Useful for testing.
-const char kForceAppsPromoVisible[]         = "force-apps-promo-visible";
-
 // If accelerated compositing is supported, always enter compositing mode for
 // the base layer even when compositing is not strictly required.
 const char kForceCompositingMode[]          = "force-compositing-mode";
@@ -921,9 +917,6 @@ const char kProfilingFile[]
 // specified.
 const char kProfilingFlush[]                = "profiling-flush";
 
-// Specifies a custom URL for fetching NTP promo data.
-const char kPromoServerURL[]                = "promo-server-url";
-
 // Forces proxy auto-detection.
 const char kProxyAutoDetect[]               = "proxy-auto-detect";
 
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/common/pref_names.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/common/pref_names.h
@@ -15,7 +15,6 @@
 namespace prefs {
 
 // Profile prefs. Please add Local State prefs below instead.
-extern const char kAppsPromoCounter[];
 extern const char kDefaultApps[];
 extern const char kDefaultAppsInstalled[];
 extern const char kHomePageIsNewTabPage[];
@@ -141,7 +140,6 @@ extern const char kInstantConfirmDialogS
 extern const char kInstantEnabled[];
 extern const char kInstantEnabledOnce[];
 extern const char kInstantEnabledTime[];
-extern const char kInstantPromo[];
 extern const char kMultipleProfilePrefMigration[];
 extern const char kNetworkPredictionEnabled[];
 extern const char kDefaultAppsInstallState[];
@@ -212,7 +210,6 @@ extern const char kLabsAdvancedFilesyste
 extern const char kLabsMediaplayerEnabled[];
 extern const char kEnableScreenLock[];
 extern const char kShowPlanNotifications[];
-extern const char kShow3gPromoNotification[];
 extern const char kUseSharedProxies[];
 extern const char kOAuth1Token[];
 extern const char kOAuth1Secret[];
@@ -456,43 +453,13 @@ extern const char kNTPTipsResourceServer
 extern const char kNTP4IntroDisplayCount[];
 extern const char kNTPMostVisitedURLsBlacklist[];
 extern const char kNTPMostVisitedPinnedURLs[];
-extern const char kNTPPromoResourceCache[];
-extern const char kNTPPromoResourceCacheUpdate[];
-extern const char kNTPPromoIsLoggedInToPlus[];
-extern const char kNTPPromoFeatureMask[];
-extern const char kNTPPromoResourceServer[];
 extern const char kNTPDateResourceServer[];
 extern const char kNTPShownBookmarksFolder[];
 extern const char kNTPShownPage[];
 extern const char kNTPCustomLogoStart[];
 extern const char kNTPCustomLogoEnd[];
-extern const char kNTPPromoVersion[];
-extern const char kNTPPromoLocale[];
-extern const char kNTPPromoStart[];
-extern const char kNTPPromoEnd[];
-extern const char kNTPPromoLine[];
-extern const char kNTPPromoClosed[];
-extern const char kNTPPromoGroup[];
-extern const char kNTPPromoGroupTimeSlice[];
-extern const char kNTPPromoGroupMax[];
-extern const char kNTPPromoViews[];
-extern const char kNTPPromoViewsMax[];
-extern const char kNTPPromoPlatform[];
-extern const char kNTPPromoBuild[];
-extern const char kNTPSignInPromoGroup[];
-extern const char kNTPSignInPromoGroupMax[];
 extern const char kNTPWebStoreEnabled[];
-extern const char kNTPWebStorePromoLastId[];
-extern const char kNTPWebStorePromoId[];
-extern const char kNTPWebStorePromoHeader[];
-extern const char kNTPWebStorePromoButton[];
-extern const char kNTPWebStorePromoLink[];
-extern const char kNTPWebStorePromoLogo[];
-extern const char kNTPWebStorePromoLogoSource[];
-extern const char kNTPWebStorePromoExpire[];
-extern const char kNTPWebStorePromoUserGroup[];
 extern const char kNTPAppPageNames[];
-extern const char kNTPHideWebStorePromo[];
 
 extern const char kDevToolsDisabled[];
 extern const char kDevToolsOpenDocked[];
@@ -524,11 +491,6 @@ extern const char kSyncEncryptionBootstr
 extern const char kSyncAcknowledgedSyncTypes[];
 extern const char kSyncMaxInvalidationVersions[];
 
-extern const char kSyncPromoStartupCount[];
-extern const char kSyncPromoViewCount[];
-extern const char kSyncPromoUserSkipped[];
-extern const char kSyncPromoShowOnFirstRunAllowed[];
-extern const char kSyncPromoShowNTPBubble[];
 
 extern const char kProfileGAIAInfoUpdateTime[];
 extern const char kProfileGAIAInfoPictureURL[];
@@ -592,7 +554,6 @@ extern const char kManagedAutoSelectCert
 #if defined(OS_CHROMEOS)
 extern const char kSignedSettingsCache[];
 extern const char kHardwareKeyboardLayout[];
-extern const char kCarrierDealPromoShown[];
 #endif
 
 extern const char kClearPluginLSODataEnabled[];
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/common/chrome_switches.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/common/chrome_switches.h
@@ -179,7 +179,6 @@ extern const char kFeedbackServer[];
 extern const char kFileDescriptorLimit[];
 extern const char kFocusExistingTabOnOpen[];
 extern const char kFirstRun[];
-extern const char kForceAppsPromoVisible[];
 extern const char kForceCompositingMode[];
 extern const char kGaiaHost[];
 extern const char kGaiaProfileInfo[];
@@ -252,7 +251,6 @@ extern const char kProfileDirectory[];
 extern const char kProfilingAtStart[];
 extern const char kProfilingFile[];
 extern const char kProfilingFlush[];
-extern const char kPromoServerURL[];
 extern const char kProxyAutoDetect[];
 extern const char kProxyBypassList[];
 extern const char kProxyPacUrl[];
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/common/pref_names.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/common/pref_names.cc
@@ -11,10 +11,6 @@ namespace prefs {
 // *************** PROFILE PREFS ***************
 // These are attached to the user profile
 
-// A counter that controls whether the apps promo is shown in the app launcher
-// or not.
-const char kAppsPromoCounter[] = "apps_promo_counter";
-
 // A string property indicating whether default apps should be installed
 // in this profile.  Use the value "install" to enable defaults apps, or
 // "noinstall" to disable them.  This property is usually set in the
@@ -376,10 +372,6 @@ const char kInstantEnabledOnce[] = "inst
 // Time when instant was last enabled.
 const char kInstantEnabledTime[] = "instant.enabled_time";
 
-// Used to maintain instant promo keys. See PromoCounter for details of subkeys
-// that are used.
-const char kInstantPromo[] = "instant.promo";
-
 // Used to migrate preferences from local state to user preferences to
 // enable multiple profiles.
 // BITMASK with possible values (see browser_prefs.cc for enum):
@@ -595,10 +587,6 @@ const char kEnableScreenLock[] = "settin
 const char kShowPlanNotifications[] =
     "settings.internet.mobile.show_plan_notifications";
 
-// A boolean pref of whether to show 3G promo notification.
-const char kShow3gPromoNotification[] =
-    "settings.internet.mobile.show_3g_promo_notification";
-
 // A boolean pref that uses shared proxies.
 const char kUseSharedProxies[] = "settings.use_shared_proxies";
 
@@ -1274,22 +1262,6 @@ const char kNTPMostVisitedURLsBlacklist[
 // Page.
 const char kNTPMostVisitedPinnedURLs[] = "ntp.pinned_urls";
 
-// Data downloaded from promo resource pages (JSON, RSS) to be used to
-// dynamically deliver data for the new tab page.
-const char kNTPPromoResourceCache[] = "ntp.promo_resource_cache";
-
-// Last time of update of promo_resource_cache.
-const char kNTPPromoResourceCacheUpdate[] = "ntp.promo_resource_cache_update";
-
-// Is user logged into G+ (used for G+ extension promo).
-const char kNTPPromoIsLoggedInToPlus[] = "ntp.promo_is_logged_in_to_plus";
-
-// Bit mask used to decide when to show the NTP Promo.
-const char kNTPPromoFeatureMask[] = "ntp.promo_feature_mask";
-
-// Serves promo resources for the NTP.
-const char kNTPPromoResourceServer[] = "ntp.web_resource_server";
-
 // Serves tips for the NTP.
 const char kNTPTipsResourceServer[] = "ntp.tips_resource_server";
 
@@ -1307,89 +1279,12 @@ const char kNTPShownPage[] = "ntp.shown_
 const char kNTPCustomLogoStart[] = "ntp.alt_logo_start";
 const char kNTPCustomLogoEnd[] = "ntp.alt_logo_end";
 
-// The promo resource service version number.
-const char kNTPPromoVersion[] = "ntp.promo_version";
-
-// The last locale the promo was fetched for.
-const char kNTPPromoLocale[] = "ntp.promo_locale";
-
-// Whether promo should be shown to Dev builds, Beta and Dev, or all builds.
-const char kNTPPromoBuild[] = "ntp.promo_build";
-
-// True if user has explicitly closed the promo line.
-const char kNTPPromoClosed[] = "ntp.promo_closed";
-
-// Users are randomly divided into 100 groups in order to slowly roll out
-// special promos.
-const char kNTPPromoGroup[] = "ntp.promo_group";
-
-// Amount of time each promo group should be shown a promo that is being slowly
-// rolled out, in hours.
-const char kNTPPromoGroupTimeSlice[] = "ntp.promo_group_timeslice";
-
-// Number of groups to roll out this promo to.
-const char kNTPPromoGroupMax[] = "ntp.promo_group_max";
-
-// Number of views of this promo.
-const char kNTPPromoViews[] = "ntp.promo_views";
-
-// Max number of views of this promo.
-const char kNTPPromoViewsMax[] = "ntp.promo_views_max";
-
-// Target platform for this promo.
-const char kNTPPromoPlatform[] = "ntp.promo_platform";
-
-// Promo line from server.
-const char kNTPPromoLine[] = "ntp.promo_line";
-
-// Dates between which the NTP should show a promotional line downloaded
-// from the promo server.
-const char kNTPPromoStart[] = "ntp.promo_start";
-const char kNTPPromoEnd[] = "ntp.promo_end";
-
-// A randomly generated group created to control the number of users we show the
-// sync promo to on the NTP.
-const char kNTPSignInPromoGroup[] = "ntp.sign_in_promo.group";
-
-// The maximum allowable group that can be shown the sync promotion on the NTP.
-const char kNTPSignInPromoGroupMax[] = "ntp.sign_in_promo.group_max";
-
 // Boolean indicating whether the web store is active for the current locale.
 const char kNTPWebStoreEnabled[] = "ntp.webstore_enabled";
 
-// The id of the last web store promo actually displayed on the NTP.
-const char kNTPWebStorePromoLastId[] = "ntp.webstore_last_promo_id";
-
-// The id of the current web store promo.
-const char kNTPWebStorePromoId[] = "ntp.webstorepromo.id";
-
-// The header line for the NTP web store promo.
-const char kNTPWebStorePromoHeader[] = "ntp.webstorepromo.header";
-
-// The button text for the NTP web store promo.
-const char kNTPWebStorePromoButton[] = "ntp.webstorepromo.button";
-
-// The button link for the NTP web store promo.
-const char kNTPWebStorePromoLink[] = "ntp.webstorepromo.link";
-
-// The image URL for the NTP web store promo logo.
-const char kNTPWebStorePromoLogo[] = "ntp.webstorepromo.logo";
-
-// The original URL for the NTP web store promo logo.
-const char kNTPWebStorePromoLogoSource[] = "ntp.webstorepromo.logo_source";
-
-// The "hide this" link text for the NTP web store promo.
-const char kNTPWebStorePromoExpire[] = "ntp.webstorepromo.expire";
-
-// Specifies what users should maximize the NTP web store promo.
-const char kNTPWebStorePromoUserGroup[] = "ntp.webstorepromo.usergroup";
-
 // Customized app page names that appear on the New Tab Page.
 const char kNTPAppPageNames[] = "ntp.app_page_names";
 
-// When true, web store promos will never be shown.
-const char kNTPHideWebStorePromo[] = "ntp.hide_webstore_promo";
-
 const char kDevToolsDisabled[] = "devtools.disabled";
 
 // A boolean specifying whether dev tools window should be opened docked.
@@ -1457,26 +1352,6 @@ const char kSyncUsingSecondaryPassphrase
 // String that identifies the user logged into sync and other google services.
 const char kGoogleServicesUsername[] = "google.services.username";
 
-// Tracks the number of times that we have shown the sync promo at startup.
-const char kSyncPromoStartupCount[] = "sync_promo.startup_count";
-
-// A counter to remember the number of times we've been to the sync promo page
-// (not at startup).
-const char kSyncPromoViewCount[] = "sync_promo.view_count";
-
-// Boolean tracking whether the user chose to skip the sync promo.
-const char kSyncPromoUserSkipped[] = "sync_promo.user_skipped";
-
-// Boolean that specifies if the sync promo is allowed to show on first run.
-// This preference is specified in the master preference file to suppress the
-// sync promo for some installations.
-const char kSyncPromoShowOnFirstRunAllowed[] =
-    "sync_promo.show_on_first_run_allowed";
-
-// Boolean that specifies if we should show a bubble in the new tab page.
-// The bubble is used to confirm that the user is signed into sync.
-const char kSyncPromoShowNTPBubble[] = "sync_promo.show_ntp_bubble";
-
 // Time when the user's GAIA info was last updated (represented as an int64).
 const char kProfileGAIAInfoUpdateTime[] = "profile.gaia_info_update_time";
 
@@ -1553,10 +1428,6 @@ const char kSignedSettingsCache[] = "sig
 // "xkb:us::eng".
 const char kHardwareKeyboardLayout[] = "intl.hardware_keyboard";
 
-// An integer pref which shows number of times carrier deal promo
-// notification has been shown to user.
-const char kCarrierDealPromoShown[] =
-    "settings.internet.mobile.carrier_deal_promo_shown";
 #endif
 
 // Whether there is a Flash version installed that supports clearing LSO data.
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/common/extensions/extension_constants.h
+++ chromium-browser-17.0.963.56~r121963/src/chrome/common/extensions/extension_constants.h
@@ -361,19 +361,6 @@ namespace extension_misc {
     LAUNCH_SHELL
   };
 
-  // The name of the apps promo histogram.
-  extern const char kAppsPromoHistogram[];
-
-  // The buckets used in the apps promo histogram.
-  enum AppsPromoBuckets {
-    PROMO_LAUNCH_APP,
-    PROMO_LAUNCH_WEB_STORE,
-    PROMO_CLOSE,
-    PROMO_EXPIRE,
-    PROMO_SEEN,
-    PROMO_BUCKET_BOUNDARY
-  };
-
   // The name of the app launch histogram.
   extern const char kAppLaunchHistogram[];
 
--- chromium-browser-17.0.963.56~r121963.orig/src/chrome/common/extensions/extension_constants.cc
+++ chromium-browser-17.0.963.56~r121963/src/chrome/common/extensions/extension_constants.cc
@@ -506,7 +506,6 @@ namespace extension_misc {
 const char kBookmarkManagerId[] = "eemcgdkfndhakfknompkggombfjjjeno";
 const char kWebStoreAppId[] = "ahfgeienlihckogmohjhadlkjgocpleb";
 const char kCloudPrintAppId[] = "mfehgcgbbipciphmccgaenjidiccnmng";
-const char kAppsPromoHistogram[] = "Extensions.AppsPromo";
 const char kAppLaunchHistogram[] = "Extensions.AppLaunch";
 #if defined(OS_CHROMEOS)
 const char kAccessExtensionPath[] =
