FUSE passes something like "/src" in path.  When we call
pathconf, if the path passed as argument doesn't exist, it
returns -1 because it can't determine the relevant filesystem.
We end up allocating only enough space to store the dirent struct
up to the d_name field and no more, but when we call readdir
further down, it wants to write to d_name.  With the current
libc6 package (2.13-34) this causes an invalid memory access
error and bindfs aborts.

How to reproduce:

tar xvzf bindfs_1.10.3.orig.tar.gz
cd bindfs-1.10.3
./configure
make
cd ..
mkdir bindfs-1.10.3.new
./bindfs-1.10.3/src/bindfs -n -d bindfs-1.10.3 bindfs-1.10.3.new
cd bindfs-1.10.3.new
make

diff -ruN bindfs-1.10.3.orig/src/bindfs.c bindfs-1.10.3/src/bindfs.c
--- bindfs-1.10.3.orig/src/bindfs.c	2012-05-18 07:45:33.000000000 -0600
+++ bindfs-1.10.3/src/bindfs.c	2012-07-14 20:34:16.121237773 -0600
@@ -399,7 +399,7 @@
     struct dirent *de;
     struct stat st;
     int result = 0;
-    (void) path;
+    path = process_path(path);
     
     de_buf = malloc(offsetof(struct dirent, d_name) + pathconf(path, _PC_NAME_MAX) + 1);
     
