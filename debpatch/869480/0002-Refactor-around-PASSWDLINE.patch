From 9a9af03a2736aa76e2fa08fe432764d3b98089de Mon Sep 17 00:00:00 2001
From: Osamu Aoki <osamu@debian.org>
Date: Sun, 23 Jul 2017 20:30:55 +0900
Subject: [PATCH 2/5] Refactor around PASSWDLINE

Drop using double quote to minimize backslash escapes
Use listextract instead of extract
LOGIN with extact {::} looks strange
---
 .../debconf/conf.d/auth/30_exim4-config_examples   | 48 ++++++++++------------
 1 file changed, 22 insertions(+), 26 deletions(-)

diff --git a/debian/debconf/conf.d/auth/30_exim4-config_examples b/debian/debconf/conf.d/auth/30_exim4-config_examples
index b3b1ce6..4680b27 100644
--- a/debian/debconf/conf.d/auth/30_exim4-config_examples
+++ b/debian/debconf/conf.d/auth/30_exim4-config_examples
@@ -204,31 +204,27 @@
 # You can set AUTH_CLIENT_ALLOW_NOTLS_PASSWORDS to allow unencrypted
 # clear text password authentication on all connections.
 
+# this returns the matching line from passwd.client (by smarthost)
+PASSWDLINE  =  ${lookup{$host}nwildlsearch{CONFDIR/passwd.client}{$value}fail}
+
 cram_md5:
   driver = cram_md5
   public_name = CRAM-MD5
-  client_name = ${extract{1}{:}{${lookup{$host}nwildlsearch{CONFDIR/passwd.client}{$value}fail}}}
-  client_secret = ${extract{2}{:}{${lookup{$host}nwildlsearch{CONFDIR/passwd.client}{$value}fail}}}
-
-# this returns the matching line from passwd.client and doubles all ^
-PASSWDLINE=${sg{\
-                ${lookup{$host}nwildlsearch{CONFDIR/passwd.client}{$value}fail}\
-	        }\
-	        {\\N[\\^]\\N}\
-	        {^^}\
-	    }
+  client_name = ${listextract{1}{PASSWDLINE}}
+  client_secret = ${listextract{2}{PASSWDLINE}}
 
 plain:
   driver = plaintext
   public_name = PLAIN
 .ifndef AUTH_CLIENT_ALLOW_NOTLS_PASSWORDS
-  client_send = "<; ${if !eq{$tls_out_cipher}{}\
-                    {^${extract{1}{:}{PASSWDLINE}}\
-		     ^${sg{PASSWDLINE}{\\N([^:]+:)(.*)\\N}{\\$2}}\
-		   }fail}"
+  client_send = <; ${if !eq{$tls_out_cipher}{}\
+                        {\
+                   ^${listextract{1}{${sg{PASSWDLINE}{\N[\^]\N}{^^}}}}\
+		   ^${listextract{2}{${sg{PASSWDLINE}{\N[\^]\N}{^^}}}}\
+		        }fail}
 .else
-  client_send = "<; ^${extract{1}{:}{PASSWDLINE}}\
-		    ^${sg{PASSWDLINE}{\\N([^:]+:)(.*)\\N}{\\$2}}"
+  client_send = <; ^${listextract{1}{${sg{PASSWDLINE}{\N[\^]\N}{^^}}}}\
+		   ^${listextract{2}{${sg{PASSWDLINE}{\N[\^]\N}{^^}}}}
 .endif
 
 login:
@@ -237,18 +233,18 @@ login:
 .ifndef AUTH_CLIENT_ALLOW_NOTLS_PASSWORDS
   # Return empty string if not non-TLS AND looking up $host in passwd-file
   # yields a non-empty string; fail otherwise.
-  client_send = "<; ${if and{\
-                          {!eq{$tls_out_cipher}{}}\
-                          {!eq{PASSWDLINE}{}}\
-                         }\
-                      {}fail}\
-                 ; ${extract{1}{::}{PASSWDLINE}}\
-		 ; ${sg{PASSWDLINE}{\\N([^:]+:)(.*)\\N}{\\$2}}"
+  client_send = <; ${if and{\
+                           {!eq{$tls_out_cipher}{}}\
+                           {!eq{PASSWDLINE}{}}\
+                           }\
+                        {}fail}\
+                 ; ${listextract{1}{PASSWDLINE}}\
+		 ; ${listextract{2}{PASSWDLINE}}
 .else
   # Return empty string if looking up $host in passwd-file yields a
   # non-empty string; fail otherwise.
-  client_send = "<; ${if !eq{PASSWDLINE}{}\
+  client_send = <; ${if !eq{PASSWDLINE}{}\
                       {}fail}\
-                 ; ${extract{1}{::}{PASSWDLINE}}\
-		 ; ${sg{PASSWDLINE}{\\N([^:]+:)(.*)\\N}{\\$2}}"
+                 ; ${listextract{1}{PASSWDLINE}}\
+                 ; ${listextract{2}{PASSWDLINE}}
 .endif
-- 
2.11.0

