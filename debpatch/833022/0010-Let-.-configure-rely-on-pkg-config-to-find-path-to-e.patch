From ad1e3a7d268daf14bbafc8b6cc42791d2f314fdf Mon Sep 17 00:00:00 2001
From: Nicolas Boulenguez <nicolas.boulenguez@free.fr>
Date: Sun, 31 Jul 2016 00:41:19 +0200
Subject: [PATCH 10/12] Let ./configure rely on pkg-config to find path to
 external libraries. Current settings ignore CFLAGS like -DREENTRANT for
 pulseaudio.

---
 debian/control                              |   2 +
 debian/patches/pkg-config-if-available.diff | 427 ++++++++++++++++++++++++++++
 debian/patches/series                       |   1 +
 debian/rules                                |   6 -
 4 files changed, 430 insertions(+), 6 deletions(-)
 create mode 100644 debian/patches/pkg-config-if-available.diff

diff --git a/debian/control b/debian/control
index e20c003..3229eb3 100644
--- a/debian/control
+++ b/debian/control
@@ -6,6 +6,8 @@ Standards-Version: 3.9.8
 Build-Depends: debhelper (>= 9~), libvorbis-dev, libasound2-dev [!kfreebsd-i386 !kfreebsd-amd64 !hurd-i386], libjack-dev, libtwolame-dev, dh-autoreconf, libpulse-dev, libsamplerate0-dev, libopus-dev, libmp3lame-dev
 # dpgk-dev provides /usr/share/dpkg/architecture.mk.
  ,dpkg-dev (>= 1.16.1),
+# Configure tests rely on pkg-config.
+ ,pkg-config
 Homepage: http://www.darkice.org/
 
 Package: darkice
diff --git a/debian/patches/pkg-config-if-available.diff b/debian/patches/pkg-config-if-available.diff
new file mode 100644
index 0000000..e5362ea
--- /dev/null
+++ b/debian/patches/pkg-config-if-available.diff
@@ -0,0 +1,427 @@
+Description: use pkg-config to set CFLAGS and LIBS when available.
+ Pkg-config handles cross compilations for example.
+ Use CFLAGS LIBS LDADD current autoconf nomenclature.
+Author: Nicolas Boulenguez <nicolas@debian.org>
+Author: Monsieur Noit <benoit.delcour@gmail.com>
+
+--- a/configure.in
++++ b/configure.in
+@@ -41,8 +41,8 @@
+ dnl-----------------------------------------------------------------------------
+ dnl link the lame library if requested
+ dnl-----------------------------------------------------------------------------
+-AC_SUBST(LAME_INCFLAGS)
+-AC_SUBST(LAME_LDFLAGS)
++AC_SUBST(LAME_CFLAGS)
++AC_SUBST(LAME_LIBS)
+ 
+ AC_ARG_WITH(lame,
+ [  --with-lame             use lame for encoding mp3 streams [yes] ],
+@@ -60,9 +60,9 @@
+     if test "x${LAME_LIB_LOC}" != "x" ; then
+         AC_DEFINE( HAVE_LAME_LIB, 1, [build with lame library] )
+         if test "x${LAME_INC_LOC}" != "x${SYSTEM_INCLUDE}" ; then
+-            LAME_INCFLAGS="-I${LAME_INC_LOC}"
++            LAME_CFLAGS="-I${LAME_INC_LOC}"
+         fi
+-        LAME_LDFLAGS="-L${LAME_LIB_LOC} -lmp3lame"
++        LAME_LIBS="-L${LAME_LIB_LOC} -lmp3lame"
+         AC_MSG_RESULT( [found at ${CONFIG_LAME_PREFIX}] )
+     else
+         AC_MSG_WARN( [not found, building without lame])
+@@ -72,44 +72,22 @@
+ fi
+ 
+ 
++PKG_PROG_PKG_CONFIG()
++
++
+ dnl-----------------------------------------------------------------------------
+ dnl link the ogg vorbis libraries if requested
+ dnl-----------------------------------------------------------------------------
+-AC_SUBST(VORBIS_INCFLAGS)
+-AC_SUBST(VORBIS_LDFLAGS)
++AC_SUBST(VORBIS_CFLAGS)
++AC_SUBST(VORBIS_LIBS)
+ 
+ AC_ARG_WITH(vorbis,
+ [  --with-vorbis           use Ogg Vorbis for encoding vorbis streams [yes] ],
+     USE_VORBIS=${withval}, USE_VORBIS="yes" )
+-AC_ARG_WITH(vorbis-prefix,
+-[  --with-vorbis-prefix=DIR    alternate location for vorbis [/usr]
+-                              look for libraries in VORBIS-PREFIX/lib,
+-                              for headers in VORBIS-PREFIX/include],
+-    CONFIG_VORBIS_PREFIX="${withval}", CONFIG_VORBIS_PREFIX="/usr")
+-
+ if test "x${USE_VORBIS}" = "xyes" ; then
+-    AC_MSG_CHECKING( [for vorbis libraries at ${CONFIG_VORBIS_PREFIX}] )
+-    LA_SEARCH_LIB( OGG_LIB_LOC, OGG_INC_LOC, libogg.a libogg.so, ogg/ogg.h,
+-                   ${CONFIG_VORBIS_PREFIX})
+-    LA_SEARCH_LIB( VORBIS_LIB_LOC, VORBIS_INC_LOC, libvorbis.a libvorbis.so, vorbis/codec.h,
+-                   ${CONFIG_VORBIS_PREFIX})
+-    LA_SEARCH_LIB( VORBISENC_LIB_LOC, VORBISENC_INC_LOC,
+-                   libvorbisenc.a libvorbisenc.so, vorbis/vorbisenc.h,
+-                   ${CONFIG_VORBIS_PREFIX})
+-
+-    if test "x${OGG_LIB_LOC}" != "x" -a \
+-            "x${VORBIS_LIB_LOC}" != "x" -a \
+-            "x${VORBISENC_LIB_LOC}" != "x" ; then
+-
+-        AC_DEFINE( HAVE_VORBIS_LIB, 1, [build with Ogg Vorbis library] )
+-        if test "x${OGG_INC_LOC}" != "x${SYSTEM_INCLUDE}" ; then
+-            VORBIS_INCFLAGS="-I${OGG_INC_LOC}"
+-        fi
+-        VORBIS_LDFLAGS="-L${OGG_LIB_LOC} -logg -lvorbis -lvorbisenc"
+-        AC_MSG_RESULT( [found at ${CONFIG_VORBIS_PREFIX}] )
+-    else
+-        AC_MSG_WARN( [not found, building without Ogg Vorbis])
+-    fi
++    AC_MSG_CHECKING( [for vorbis libraries] )
++    PKG_CHECK_MODULES( [VORBIS], [ogg vorbis vorbisenc],
++    [AC_DEFINE( HAVE_VORBIS_LIB, 1, [build with Ogg Vorbis library] )])
+ else
+     AC_MSG_RESULT( [building without Ogg Vorbis] )
+ fi
+@@ -118,37 +96,16 @@
+ dnl-----------------------------------------------------------------------------
+ dnl link the ogg / opus libraries if requested
+ dnl-----------------------------------------------------------------------------
+-AC_SUBST(OPUS_INCFLAGS)
+-AC_SUBST(OPUS_LDFLAGS)
++AC_SUBST(OPUS_CFLAGS)
++AC_SUBST(OPUS_LIBS)
+ 
+ AC_ARG_WITH(opus,
+ [  --with-opus           use Ogg Opus for encoding opus streams [yes] ],
+     USE_OPUS=${withval}, USE_OPUS="yes" )
+-AC_ARG_WITH(opus-prefix,
+-[  --with-opus-prefix=DIR    alternate location for opus [/usr]
+-                              look for libraries in OPUS-PREFIX/lib,
+-                              for headers in OPUS-PREFIX/include],
+-    CONFIG_OPUS_PREFIX="${withval}", CONFIG_OPUS_PREFIX="/usr")
+-
+ if test "x${USE_OPUS}" = "xyes" ; then
+-    AC_MSG_CHECKING( [for opus libraries at ${CONFIG_OPUS_PREFIX}] )
+-    LA_SEARCH_LIB( OGG_LIB_LOC, OGG_INC_LOC, libogg.a libogg.so, ogg/ogg.h,
+-                   ${CONFIG_OPUS_PREFIX})
+-    LA_SEARCH_LIB( OPUS_LIB_LOC, OPUS_INC_LOC, libopus.a libopus.so, opus/opus.h,
+-                   ${CONFIG_OPUS_PREFIX})
+-
+-    if test "x${OGG_LIB_LOC}" != "x" -a \
+-            "x${OPUS_LIB_LOC}" != "x" ; then
+-
+-        AC_DEFINE( HAVE_OPUS_LIB, 1, [build with Ogg Opus library] )
+-        if test "x${OGG_INC_LOC}" != "x${SYSTEM_INCLUDE}" ; then
+-            OPUS_INCFLAGS="-I${OGG_INC_LOC}"
+-        fi
+-        OPUS_LDFLAGS="-L${OGG_LIB_LOC} -logg -lopus"
+-        AC_MSG_RESULT( [found at ${CONFIG_OPUS_PREFIX}] )
+-    else
+-        AC_MSG_WARN( [not found, building without Ogg Opus])
+-    fi
++    AC_MSG_CHECKING( [for opus libraries] )
++    PKG_CHECK_MODULES( [OPUS], [ogg opus],
++    [AC_DEFINE( HAVE_OPUS_LIB, 1, [build with Ogg Opus library] )])
+ else
+     AC_MSG_RESULT( [building without Ogg Opus] )
+ fi
+@@ -156,8 +113,8 @@
+ dnl-----------------------------------------------------------------------------
+ dnl link the faac library if requested
+ dnl-----------------------------------------------------------------------------
+-AC_SUBST(FAAC_INCFLAGS)
+-AC_SUBST(FAAC_LDFLAGS)
++AC_SUBST(FAAC_CFLAGS)
++AC_SUBST(FAAC_LIBS)
+ 
+ AC_ARG_WITH(faac,
+ [  --with-faac             use faac for encoding AAC streams [yes] ],
+@@ -175,9 +132,9 @@
+     if test "x${FAAC_LIB_LOC}" != "x" ; then
+         AC_DEFINE( HAVE_FAAC_LIB, 1, [build with faac library] )
+         if test "x${FAAC_INC_LOC}" != "x${SYSTEM_INCLUDE}" ; then
+-            FAAC_INCFLAGS="-I${FAAC_INC_LOC}"
++            FAAC_CFLAGS="-I${FAAC_INC_LOC}"
+         fi
+-        FAAC_LDFLAGS="-L${FAAC_LIB_LOC} -lfaac"
++        FAAC_LIBS="-L${FAAC_LIB_LOC} -lfaac"
+         AC_MSG_RESULT( [found at ${CONFIG_FAAC_PREFIX}] )
+     else
+         AC_MSG_WARN( [not found, building without faac])
+@@ -190,32 +147,17 @@
+ dnl-----------------------------------------------------------------------------
+ dnl link the aacplus library if requested
+ dnl-----------------------------------------------------------------------------
+-AC_SUBST(AACPLUS_INCFLAGS)
+-AC_SUBST(AACPLUS_LDFLAGS)
++AC_SUBST(AACPLUS_CFLAGS)
++AC_SUBST(AACPLUS_LIBS)
+ 
+ AC_ARG_WITH(aacplus,
+ [  --with-aacplus             use aacplus for encoding AAC HEv2 streams [yes] ],
+     USE_AACPLUS=${withval}, USE_AACPLUS="yes" )
+-AC_ARG_WITH(aacplus-prefix,
+-[  --with-aacplus-prefix=DIR  alternate location for aacplus [/usr]
+-                              look for libraries in AACPLUS-PREFIX/lib,
+-                              for headers in AACPLUS-PREFIX/include],
+-    CONFIG_AACPLUS_PREFIX="${withval}", CONFIG_AACPLUS_PREFIX="/usr")
+ 
+ if test "x${USE_AACPLUS}" = "xyes" ; then
+-    AC_MSG_CHECKING( [for aacplus library at ${CONFIG_AACPLUS_PREFIX}] )
+-    LA_SEARCH_LIB( AACPLUS_LIB_LOC, AACPLUS_INC_LOC, libaacplus.a libaacplus.so, aacplus.h,
+-                   ${CONFIG_AACPLUS_PREFIX})
+-    if test "x${AACPLUS_LIB_LOC}" != "x" ; then
+-        AC_DEFINE( HAVE_AACPLUS_LIB, 1, [build with aacplus library] )
+-        if test "x${AACPLUS_INC_LOC}" != "x${SYSTEM_INCLUDE}" ; then
+-            AACPLUS_INCFLAGS="-I${AACPLUS_INC_LOC}"
+-        fi
+-        AACPLUS_LDFLAGS="-L${AACPLUS_LIB_LOC} -laacplus"
+-        AC_MSG_RESULT( [found at ${CONFIG_AACPLUS_PREFIX}] )
+-    else
+-        AC_MSG_WARN( [not found, building without aacplus])
+-    fi
++    AC_MSG_CHECKING( [for aacplus library] )
++    PKG_CHECK_MODULES( [AACPLUS], [aacplus],
++    [AC_DEFINE( HAVE_AACPLUS_LIB, 1, [build with aacplus library] )])
+ else
+     AC_MSG_RESULT( [building without aacplus] )
+ fi
+@@ -224,32 +166,17 @@
+ dnl-----------------------------------------------------------------------------
+ dnl link the twolame library if requested
+ dnl-----------------------------------------------------------------------------
+-AC_SUBST(TWOLAME_INCFLAGS)
+-AC_SUBST(TWOLAME_LDFLAGS)
++AC_SUBST(TWOLAME_CFLAGS)
++AC_SUBST(TWOLAME_LIBS)
+ 
+ AC_ARG_WITH(twolame,
+ [  --with-twolame             use twolame for encoding MP2 streams [yes] ],
+     USE_TWOLAME=${withval}, USE_TWOLAME="yes" )
+-AC_ARG_WITH(twolame-prefix,
+-[  --with-twolame-prefix=DIR  alternate location for twolame [/usr]
+-                              look for libraries in TWOLAME-PREFIX/lib,
+-                              for headers in TWOLAME-PREFIX/include],
+-    CONFIG_TWOLAME_PREFIX="${withval}", CONFIG_TWOLAME_PREFIX="/usr")
+ 
+ if test "x${USE_TWOLAME}" = "xyes" ; then
+-    AC_MSG_CHECKING( [for twolame library at ${CONFIG_TWOLAME_PREFIX}] )
+-    LA_SEARCH_LIB( TWOLAME_LIB_LOC, TWOLAME_INC_LOC, libtwolame.a libtwolame.so, twolame.h,
+-                   ${CONFIG_TWOLAME_PREFIX})
+-    if test "x${TWOLAME_LIB_LOC}" != "x" ; then
+-        AC_DEFINE( HAVE_TWOLAME_LIB, 1, [build with twolame library] )
+-        if test "x${TWOLAME_INC_LOC}" != "x${SYSTEM_INCLUDE}" ; then
+-            TWOLAME_INCFLAGS="-I${TWOLAME_INC_LOC}"
+-        fi
+-        TWOLAME_LDFLAGS="-L${TWOLAME_LIB_LOC} -ltwolame"
+-        AC_MSG_RESULT( [found at ${CONFIG_TWOLAME_PREFIX}] )
+-    else
+-        AC_MSG_WARN( [not found, building without twolame])
+-    fi
++    AC_MSG_CHECKING( [for twolame library] )
++    PKG_CHECK_MODULES( [TWOLAME], [twolame],
++    [AC_DEFINE( HAVE_TWOLAME_LIB, 1, [build with twolame library] )])
+ else
+     AC_MSG_RESULT( [building without twolame] )
+ fi
+@@ -258,12 +185,12 @@
+ dnl-----------------------------------------------------------------------------
+ dnl make sure at least one of lame and vorbis present
+ dnl-----------------------------------------------------------------------------
+-if test "x${LAME_LDFLAGS}" = "x" \
+-     -a "x${VORBIS_LDFLAGS}" = "x" \
+-     -a "x${OPUS_LDFLAGS}" = "x" \
+-     -a "x${FAAC_LDFLAGS}" = "x" \
+-     -a "x${AACPLUS_LDFLAGS}" = "x" \
+-     -a "x${TWOLAME_LDFLAGS}" = "x"; then
++if test "x${LAME_LIBS}" = "x" \
++     -a "x${VORBIS_LIBS}" = "x" \
++     -a "x${OPUS_LIBS}" = "x" \
++     -a "x${FAAC_LIBS}" = "x" \
++     -a "x${AACPLUS_LIBS}" = "x" \
++     -a "x${TWOLAME_LIBS}" = "x"; then
+     AC_MSG_ERROR([neither lame, Ogg Vorbis, opus, faac, aac+ nor twolame configured])
+ fi
+ 
+@@ -271,34 +198,16 @@
+ dnl-----------------------------------------------------------------------------
+ dnl link ALSA sound system if requested 
+ dnl-----------------------------------------------------------------------------
+-AC_SUBST(ALSA_INCFLAGS)
+-AC_SUBST(ALSA_LDFLAGS)
++AC_SUBST(ALSA_CFLAGS)
++AC_SUBST(ALSA_LIBS)
+ 
+ AC_ARG_WITH(alsa,
+ [  --with-alsa             use ALSA sound system [yes] ],
+     USE_ALSA=${withval}, USE_ALSA="yes" )
+-AC_ARG_WITH(alsa-prefix,
+-[  --with-alsa-prefix=DIR      alternate location for ALSA [/usr]
+-                              look for libraries in ALSA-PREFIX/lib,
+-                              for headers in ALSA-PREFIX/include],
+-    CONFIG_ALSA_PREFIX="${withval}", CONFIG_ALSA_PREFIX="/usr")
+-
+ if test "x${USE_ALSA}" = "xyes" ; then
+-    AC_MSG_CHECKING( [for alsa libraries at ${CONFIG_ALSA_PREFIX}] )
+-    LA_SEARCH_LIB( ALSA_LIB_LOC, ALSA_INC_LOC, libasound.so, alsa/asoundlib.h,
+-                   ${CONFIG_ALSA_PREFIX})
+-
+-    if test "x${ALSA_LIB_LOC}" != "x" ; then
+-
+-        AC_DEFINE( HAVE_ALSA_LIB, 1, [build with ALSA sound system] )
+-        if test "x${ALSA_INC_LOC}" != "x${SYSTEM_INCLUDE}" ; then
+-            ALSA_INCFLAGS="-I${ALSA_INC_LOC}"
+-        fi
+-        ALSA_LDFLAGS="-L${ALSA_LIB_LOC} -lasound"
+-        AC_MSG_RESULT( [found at ${CONFIG_ALSA_PREFIX}] )
+-    else
+-        AC_MSG_WARN( [not found, building without ALSA support])
+-    fi
++    AC_MSG_CHECKING( [for alsa libraries] )
++    PKG_CHECK_MODULES( [ALSA], [alsa],
++    [AC_DEFINE( HAVE_ALSA_LIB, 1, [build with ALSA sound system] )])
+ else
+     AC_MSG_RESULT( [building without ALSA support] )
+ fi
+@@ -307,34 +216,16 @@
+ dnl-----------------------------------------------------------------------------
+ dnl link PULSEAUDIO sound system if requested 
+ dnl-----------------------------------------------------------------------------
+-AC_SUBST(PULSEAUDIO_INCFLAGS)
+-AC_SUBST(PULSEAUDIO_LDFLAGS)
++AC_SUBST(PULSEAUDIO_CFLAGS)
++AC_SUBST(PULSEAUDIO_LIBS)
+ 
+ AC_ARG_WITH(pulseaudio,
+ [  --with-pulseaudio             use PULSEAUDIO sound system [yes] ],
+     USE_PULSEAUDIO=${withval}, USE_PULSEAUDIO="yes" )
+-AC_ARG_WITH(pulseaudio-prefix,
+-[  --with-pulseaudio-prefix=DIR      alternate location for PULSEAUDIO [/usr]
+-                              look for libraries in PULSEAUDIO-PREFIX/lib,
+-                              for headers in PULSEAUDIO-PREFIX/include],
+-    CONFIG_PULSEAUDIO_PREFIX="${withval}", CONFIG_PULSEAUDIO_PREFIX="/usr")
+-
+ if test "x${USE_PULSEAUDIO}" = "xyes" ; then
+-    AC_MSG_CHECKING( [for pulseaudio libraries at ${CONFIG_PULSEAUDIO_PREFIX}] )
+-    LA_SEARCH_LIB( PULSEAUDIO_LIB_LOC, PULSEAUDIO_INC_LOC, libpulse.so, pulse/pulseaudio.h,
+-                   ${CONFIG_PULSEAUDIO_PREFIX})
+-
+-    if test "x${PULSEAUDIO_LIB_LOC}" != "x" ; then
+-
+-        AC_DEFINE( HAVE_PULSEAUDIO_LIB, 1, [build with PULSEAUDIO sound system] )
+-        if test "x${PULSEAUDIO_INC_LOC}" != "x${SYSTEM_INCLUDE}" ; then
+-            PULSEAUDIO_INCFLAGS="-I${PULSEAUDIO_INC_LOC}"
+-        fi
+-        PULSEAUDIO_LDFLAGS="-L${PULSEAUDIO_LIB_LOC} -lpulse-simple -L${PULSEAUDIO_LIB_LOC} -lpulse"
+-        AC_MSG_RESULT( [found at ${CONFIG_PULSEAUDIO_PREFIX}] )
+-    else
+-        AC_MSG_WARN( [not found, building without PULSEAUDIO support])
+-    fi
++    AC_MSG_CHECKING( [for pulseaudio libraries] )
++    PKG_CHECK_MODULES( [PULSEAUDIO], [libpulse-simple libpulse],
++    [AC_DEFINE( HAVE_PULSEAUDIO_LIB, 1, [build with PULSEAUDIO sound system] )])
+ else
+     AC_MSG_RESULT( [building without PULSEAUDIO support] )
+ fi
+@@ -344,34 +235,15 @@
+ dnl link JACK sound server if requested 
+ dnl-----------------------------------------------------------------------------
+ AC_SUBST(JACK_CFLAGS)
+-AC_SUBST(JACK_LDFLAGS)
+-AC_SUBST(JACK_INCFLAGS)
++AC_SUBST(JACK_LIBS)
+ 
+ AC_ARG_WITH(jack,
+ [  --with-jack             use JACK sound system [yes] ],
+     USE_JACK=${withval}, USE_JACK="yes" )
+-AC_ARG_WITH(jack-prefix,
+-[  --with-jack-prefix=DIR      alternate location for JACK [/usr]
+-                              look for libraries in JACK-PREFIX/lib,
+-                              for headers in JACK-PREFIX/include],
+-    CONFIG_JACK_PREFIX="${withval}", CONFIG_JACK_PREFIX="/usr")
+-
+ if test "x${USE_JACK}" = "xyes" ; then
+     AC_MSG_CHECKING( [for jack libraries at ${CONFIG_JACK_PREFIX}] )
+-    LA_SEARCH_LIB( JACK_LIB_LOC, JACK_INC_LOC, libjack.la libjack.so libjack.dylib, jack/jack.h,
+-                   ${CONFIG_JACK_PREFIX})
+-
+-    if test "x${JACK_LIB_LOC}" != "x" ; then
+-
+-        AC_DEFINE( HAVE_JACK_LIB, 1, [build with JACK audio server support] )
+-        if test "x${JACK_INC_LOC}" != "x${SYSTEM_INCLUDE}" ; then
+-            JACK_INCFLAGS="-I${JACK_INC_LOC}"
+-        fi
+-        JACK_LDFLAGS="-L${JACK_LIB_LOC} -ljack"
+-        AC_MSG_RESULT( [found at ${CONFIG_JACK_PREFIX}] )
+-    else
+-        AC_MSG_WARN( [not found, building without JACK support])
+-    fi
++    PKG_CHECK_MODULES( [JACK], [jack],
++    [AC_DEFINE( HAVE_JACK_LIB, 1, [build with JACK audio server support] )])
+ else
+     AC_MSG_RESULT( [building without JACK support] )
+ fi
+@@ -381,39 +253,20 @@
+ dnl link Secret Rabbit Code (aka libsamplerate) if requested 
+ dnl-----------------------------------------------------------------------------
+ AC_SUBST(SRC_CFLAGS)
+-AC_SUBST(SRC_LDFLAGS)
+-AC_SUBST(SRC_INCFLAGS)
++AC_SUBST(SRC_LIBS)
+ 
+ AC_ARG_WITH(samplerate,
+ [  --with-samplerate             use Secret Rabbit Code (aka libsamplerate) for samplerate conversion [yes] ],
+     USE_SRC=${withval}, USE_SRC="yes" )
+-AC_ARG_WITH(samplerate-prefix,
+-[  --with-samplerate-prefix=DIR      alternate location for samplerate [/usr]
+-                              look for libraries in SRC-PREFIX/lib,
+-                              for headers in SRC-PREFIX/include],
+-    CONFIG_SRC_PREFIX="${withval}", CONFIG_SRC_PREFIX="/usr")
+-
+ if test "x${USE_SRC}" = "xyes" ; then
+-    AC_MSG_CHECKING( [for samplerate libraries at ${CONFIG_SRC_PREFIX}] )
+-    LA_SEARCH_LIB( SRC_LIB_LOC, SRC_INC_LOC, libsamplerate.la libsamplerate.so libsamplerate.dylib, samplerate.h,
+-                   ${CONFIG_SRC_PREFIX})
+-
+-    if test "x${SRC_LIB_LOC}" != "x" ; then
+-
+-        AC_DEFINE( HAVE_SRC_LIB, 1, [build with samplerate conversion through libsamplerate] )
+-        if test "x${SRC_INC_LOC}" != "x${SYSTEM_INCLUDE}" ; then
+-            SRC_INCFLAGS="-I${SRC_INC_LOC}"
+-        fi
+-        SRC_LDFLAGS="-L${SRC_LIB_LOC} -lsamplerate"
+-        AC_MSG_RESULT( [found at ${CONFIG_SRC_PREFIX}] )
+-    else
+-        AC_MSG_WARN( [not found, building libsamplerate support])
+-    fi
++    AC_MSG_CHECKING( [for samplerate libraries] )
++    PKG_CHECK_MODULES( [SRC], [samplerate],
++    [AC_DEFINE( HAVE_SRC_LIB, 1, [build with samplerate conversion through libsamplerate] )])
+ else
+     AC_MSG_RESULT( [building without libsamplerate support] )
+ fi
+ 
+-AM_CONDITIONAL(HAVE_SRC_LIB, test "x${SRC_LIB_LOC}" != "x")
++AM_CONDITIONAL(HAVE_SRC_LIB, test "x${SRC_LIBS}" != "x")
+ dnl-----------------------------------------------------------------------------
+ dnl check for MSG_NOSIGNAL for the send() function in libsocket
+ dnl-----------------------------------------------------------------------------
+--- a/src/Makefile.am
++++ b/src/Makefile.am
+@@ -1,10 +1,10 @@
+ bin_PROGRAMS = darkice
+-AM_CXXFLAGS = -O2 -pedantic -Wall @DEBUG_CXXFLAGS@ @PTHREAD_CFLAGS@
+-			  @JACK_CFLAGS@ 
+-INCLUDES = @LAME_INCFLAGS@ @VORBIS_INCFLAGS@ @OPUS_INCFLAGS@ @FAAC_INCFLAGS@ @AACPLUS_INCFLAGS@ @TWOLAME_INCFLAGS@ \
+-		@ALSA_INCFLAGS@ @PULSEAUDIO_INCFLAGS@ @JACK_INCFLAGS@ @SRC_INCFLAGS@
+-LDADD = @PTHREAD_LIBS@ @LAME_LDFLAGS@ @VORBIS_LDFLAGS@ @OPUS_LDFLAGS@ @FAAC_LDFLAGS@ @AACPLUS_LDFLAGS@ @TWOLAME_LDFLAGS@ \
+-		@ALSA_LDFLAGS@ @PULSEAUDIO_LDFLAGS@ @JACK_LDFLAGS@ @SRC_LDFLAGS@
++
++darkice_CXXFLAGS = \
++ -O2 -pedantic -Wall @DEBUG_CXXFLAGS@ \
++  $(PTHREAD_CFLAGS) $(LAME_CFLAGS) $(VORBIS_CFLAGS) $(OPUS_CFLAGS) $(FAAC_CFLAGS) $(AACPLUS_CFLAGS) $(TWOLAME_CFLAGS) $(ALSA_CFLAGS) $(PULSEAUDIO_CFLAGS) $(JACK_CFLAGS) $(SRC_CFLAGS)
++darkice_LDADD = \
++ $(PTHREAD_LIBS) $(LAME_LIBS) $(VORBIS_LIBS) $(OPUS_LIBS) $(FAAC_LIBS) $(AACPLUS_LIBS) $(TWOLAME_LIBS) $(ALSA_LIBS) $(PULSEAUDIO_LIBS) $(JACK_LIBS) $(SRC_LIBS)
+ 
+ if HAVE_SRC_LIB
+ AFLIB_SOURCE = 
diff --git a/debian/patches/series b/debian/patches/series
index 7f98598..0cebedd 100644
--- a/debian/patches/series
+++ b/debian/patches/series
@@ -7,3 +7,4 @@ accept-data-until-next-ogg-packet-is-ready-in-vorbis.diff
 fixed-issue-98.diff
 fixes-for-opus-encoder-by-christian-franke-nobody-no.diff
 server-connection-related-fixes.diff
+pkg-config-if-available.diff
diff --git a/debian/rules b/debian/rules
index 5de5d8b..5131efc 100755
--- a/debian/rules
+++ b/debian/rules
@@ -25,12 +25,6 @@ $(POLICY_TARGETS):
 override_dh_auto_configure:
 	dh_auto_configure -- \
 		--with-lame-prefix=/usr/lib/$(DEB_HOST_MULTIARCH) \
-		--with-vorbis-prefix=/usr/lib/$(DEB_HOST_MULTIARCH) \
-		--with-opus-prefix=/usr/lib/$(DEB_HOST_MULTIARCH) \
-		--with-alsa-prefix=/usr/lib/$(DEB_HOST_MULTIARCH) \
-		--with-pulseaudio-prefix=/usr/lib/$(DEB_HOST_MULTIARCH) \
-		--with-samplerate-prefix=/usr/lib/$(DEB_HOST_MULTIARCH) \
-		--with-jack-prefix=/usr/lib/$(DEB_HOST_MULTIARCH) \
 		--sysconfdir=/usr/share/doc/darkice/examples \
 		--without-aacplus \
 		--without-faac
-- 
2.8.1

