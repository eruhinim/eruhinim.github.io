>From 9054d421d5f483a616adc9bf3d39f23750da528f Mon Sep 17 00:00:00 2001
From: Marc Haber <mh+debian-packages@zugschlus.de>
Date: Sat, 16 Jan 2016 22:40:40 +0100
Subject: [PATCH 2/2] add --copy-stage1-path functionality and docs

---
 debootstrap   | 32 ++++++++++++++++++++++++++++++--
 debootstrap.8 |  7 +++++++
 2 files changed, 37 insertions(+), 2 deletions(-)

diff --git a/debootstrap b/debootstrap
index fe4de7b..d5ebfbb 100755
--- a/debootstrap
+++ b/debootstrap
@@ -47,6 +47,7 @@ CERTIFICATE=""
 CHECKCERTIF=""
 PRIVATEKEY=""
 EXCLUDE_STAGE1_PATH=""
+COPY_STAGE1_PATH=""
 
 DEF_MIRROR="http://httpredir.debian.org/debian"
 DEF_HTTPS_MIRROR="https://mirrors.kernel.org/debian"
@@ -125,6 +126,7 @@ usage()
       
       --exclude-stage1-path=PATH,PATH do not install anything to PATH and PATH in
                              stage 1
+      --copy-stage1-path=PATH tarball or tree to copy into chroot after stage 1
 EOF
 }
 
@@ -361,7 +363,18 @@ if [ $# != 0 ] ; then
 			EXCLUDE_STAGE1_PATH="$2"
 			shift 2
 		elif [ "$1" != "${1#--exclude-stage1-path=}" ]; then
-			EXCLUDE_STAGE1_PATH="${1#--exclude-stage1-path=}" 
+			EXCLUDE_STAGE1_PATH="${1#--exclude-stage1-path=}"
+			shift 1
+		else
+		       error 1 NEEDARG "option requires an argument %s" "$1"
+		fi
+		;;
+	    --copy-stage1-path|--copy-stage1-path=?*)
+		if [ "$1" = "--copy-stage1-path" -a -n "$2" ]; then
+			COPY_STAGE1_PATH="$2"
+			shift 2
+		elif [ "$1" != "${1#--copy-stage1-path=}" ]; then
+			COPY_STAGE1_PATH="${1#--copy-stage1-path=}"
 			shift 1
 		else
 		       error 1 NEEDARG "option requires an argument %s" "$1" 
@@ -658,7 +671,6 @@ if am_doing_phase first_stage; then
 		echo "$VARIANT"			>"$TARGET/debootstrap/variant"
 		echo "$required"		>"$TARGET/debootstrap/required"
 		echo "$base"			>"$TARGET/debootstrap/base"
-
 		chmod 755 "$TARGET/debootstrap/debootstrap"
 	fi
 fi
@@ -670,6 +682,22 @@ if am_doing_phase second_stage; then
 		all_debs="$required $base"
 	fi
 
+	if [ -n "$COPY_STAGE1_PATH" ]; then
+		if [ -d "$COPY_STAGE1_PATH" ]; then
+			info COPYPATH "Copying files from %s..." "${COPY_STAGE1_PATH}"
+			tar -cf - -C "${COPY_STAGE1_PATH}" . | tar -xf - -C "$TARGET"
+		elif [ -e "$COPY_STAGE1_PATH" ]; then
+			info UNTARPATH "Untarring files from %s..." "${COPY_STAGE1_PATH}"
+			case "$COPY_STAGE1_PATH" in
+				*.tar.gz) cat_cmd=zcat ;;
+				*.tar.xz) cat_cmd=xzcat ;;
+				*.tar) cat_cmd=cat ;;
+				*) error 1 UNKNOWNCONTROLCOMP "Unknown compression type for %s" "$COPY_STAGE1_PATH"
+			esac
+			$cat_cmd "$COPY_STAGE1_PATH" | tar -xf - -C "$TARGET"
+		fi
+	fi
+
 	# second stage uses the chroot to clean itself up -- has to be able to
 	# work from entirely within the chroot (in case we've booted into it,
 	# possibly over NFS eg)
diff --git a/debootstrap.8 b/debootstrap.8
index c8f0722..b1e6270 100644
--- a/debootstrap.8
+++ b/debootstrap.8
@@ -160,6 +160,13 @@ Read the private key from file
 .IP "\fB\-\-exclude\-stage1\-path=PATH,PATH\fP"
 Exclude the paths listed in the comma separated from being unpacked
 during stage 1.
+.IP
+.IP "\fB\-\-copy\-stage1\-path=PATH,PATH\fP"
+If PARM points to a directory, copy the tree below this directory to
+the chroot after stage 1. If PARM points to a tar.{gz,bz2,xz}, unpack
+this tar in the chroot after stage 1. This can, for example be used to
+plant pre-configuration in the chroot that is already used by package
+configuration in stage 2.
 
 .SH EXAMPLES
 .
-- 
2.7.0.rc3

