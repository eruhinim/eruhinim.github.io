diff --git a/cron.daily/apt b/cron.daily/apt
index 75986f5..efce46f 100755
--- a/cron.daily/apt
+++ b/cron.daily/apt
@@ -170,6 +170,7 @@ check_size_constraints()
     # check size
     if [ ! $MaxSize -eq 0 ]; then
 	# maxSize is in MB
+	# TODO Well, no...  1024 -> binary prefixes (MiB, KiB,... :).
 	MaxSize=$(($MaxSize*1024))
 
 	#get current time
@@ -187,7 +188,7 @@ check_size_constraints()
 	    fi
 
 	    # check for MinAge of the file
-	    if [ $MinAge -ne 0 ]; then 
+	    # hfuchs| Moved age check deeper below - doesn't make sense here.
 		# check both ctime and mtime 
 		mtime=$(stat -c %Y $file)
 		ctime=$(stat -c %Z $file)
@@ -196,14 +197,19 @@ check_size_constraints()
 		else
 		    delta=$(($now-$ctime))
 		fi
-		if [ $delta -le $MinAge ]; then
+		# hfuchs| Moved MinAge != 0 check here.
+		if [ $delta -le $MinAge -a $MinAge -ne 0 ]; then
 		    debug_echo "skip remove by archive size:  $file, delta=$delta < $MinAgeSec"
+		    # TODO Why break here?  Just because of one file that's too fresh?
 		    break
 		else
 		    # delete oldest file
+		    # TODO btw: I read somewhere at the top of this file that
+		    # the biggest files are deleted first?  I can't see it
+		    # happening.  Don't relly care, either.  ;)
+		    # TODO Indentation is a bit of a mess down here.
 		    debug_echo "remove by archive size: $file, delta=$delta >= $MinAgeSec (sec), size=$size >= $MaxSize"
 		    rm -f $file
-		fi
 	    fi
 	done
     fi
