=== modified file 'debian/control'
--- debian/control	2011-05-06 14:01:39 +0000
+++ debian/control	2012-12-18 03:29:41 +0000
@@ -4,7 +4,7 @@
 Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
 XSBC-Original-Maintainer: Mathieu Trudel-Lapierre <mathieu.tl@gmail.com>
 Build-Depends: debhelper (>= 7), autotools-dev, autoconf, automake,
- texi2html, texinfo
+ libtool, texi2html, texinfo
 Standards-Version: 3.9.1
 Homepage: http://www.gnu.org/software/acct/
 

=== added file 'debian/patches/cross-build-support.patch'
--- debian/patches/cross-build-support.patch	1970-01-01 00:00:00 +0000
+++ debian/patches/cross-build-support.patch	2012-12-18 01:48:03 +0000
@@ -0,0 +1,241 @@
+Description: remove pointless configure check that breaks cross-building
+ Remove pointless configure check that tries to run a program to define
+ wtmp/acct file paths; we can just as well include this in files.h.in and
+ use the results of the macro checks directly.
+Author: Steve Langasek <steve.langasek@ubuntu.com>
+
+Index: trunk/Makefile.am
+===================================================================
+--- trunk.orig/Makefile.am
++++ trunk/Makefile.am
+@@ -66,11 +66,6 @@
+ SYS_AC = @SYS_AC@
+ SYS_SA = @SYS_SA@
+ 
+-WTMP_FILE_LOC = @WTMP_FILE_LOC@
+-ACCT_FILE_LOC = @ACCT_FILE_LOC@
+-SAVACCT_FILE_LOC = @SAVACCT_FILE_LOC@
+-USRACCT_FILE_LOC = @USRACCT_FILE_LOC@
+-
+ compare-ac: ac
+ 	@echo
+ 	@echo "Running tests for ac"
+Index: trunk/files.h.in
+===================================================================
+--- trunk.orig/files.h.in
++++ trunk/files.h.in
+@@ -30,10 +30,91 @@
+ 
+ #include <utmp.h>
+ 
+-#define WTMP_FILE_LOC "@WTMP_FILE_LOC@"
+-#define ACCT_FILE_LOC "@ACCT_FILE_LOC@"
+-#define SAVACCT_FILE_LOC "@SAVACCT_FILE_LOC@"
+-#define USRACCT_FILE_LOC "@USRACCT_FILE_LOC@"
++#include <stdio.h>
++#include <stdlib.h>
++#include <sys/types.h>
++#include <stdint.h>     /* GNU/kFreeBSD */
++#include <utmp.h>
++
++#ifndef WTMP_FILE
++#  if defined(__FreeBSD__) || defined (__NetBSD__) || defined(__linux__) \
++        || defined(__FreeBSD_kernel__) || defined(__GLIBC__)
++#    define WTMP_FILE "/var/log/wtmp"
++#  else
++#    if defined(sun) || defined(AMIX)
++#      define WTMP_FILE "/var/adm/wtmp"
++#    else
++#      if defined(sgi) || defined(SVR4)
++#        define WTMP_FILE "/usr/adm/wtmp"
++#      else
++#        define WTMP_FILE "/usr/adm/wtmp"
++#      endif
++#    endif
++#  endif
++#endif
++#ifndef ACCT_FILE
++#  if defined(__FreeBSD__) || defined(__linux__) \
++        || defined(__FreeBSD_kernel__) || defined(__GLIBC__)
++#    define ACCT_FILE "/var/log/account/pacct"
++#  else
++#    if defined(__NetBSD__)
++#      define ACCT_FILE "/var/account/acct"
++#    else
++#      if defined(sun) || defined(AMIX)
++#        define ACCT_FILE "/var/adm/pacct"
++#      else
++#        if defined(sgi) || defined(SVR4) || defined(M_XENIX)
++#          define ACCT_FILE "/usr/adm/pacct"
++#        else
++#          define ACCT_FILE "/usr/adm/acct"
++#        endif
++#      endif
++#    endif
++#  endif
++#endif
++
++#ifndef SAVACCT_FILE
++#  if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__linux__) \
++        || defined(__FreeBSD_kernel__) || defined(__GLIBC__)
++#    define SAVACCT_FILE "/var/log/account/savacct"
++#  else
++#    if defined(sun) || defined(AMIX)
++#      define SAVACCT_FILE "/var/adm/savacct"
++#    else
++#      if defined(sgi) || defined(SVR4)
++#        define SAVACCT_FILE "/usr/adm/savacct"
++#      else
++#        define SAVACCT_FILE "/usr/adm/savacct"
++#      endif
++#    endif
++#  endif
++#endif
++
++#ifndef USRACCT_FILE
++#  if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__linux__) \
++        || defined(__FreeBSD_kernel__) || defined(__GLIBC__)
++#    define USRACCT_FILE "/var/log/account/usracct"
++#  else
++#    if defined(sun) || defined(AMIX)
++#      define USRACCT_FILE "/var/adm/usracct"
++#    else
++#      if defined(sgi) || defined(SVR4)
++#        define USRACCT_FILE "/usr/adm/usracct"
++#      else
++#        define USRACCT_FILE "/usr/adm/usracct"
++#      endif
++#    endif
++#  endif
++#endif
++
++#if !defined(WTMP_FILE) || !defined(ACCT_FILE) || !defined(SAVACCT_FILE) \
++    || !defined(USRACCT_FILE)
++#error Could not locate your wtmp and acct files.
++#endif
++#define WTMP_FILE_LOC WTMP_FILE
++#define ACCT_FILE_LOC ACCT_FILE
++#define SAVACCT_FILE_LOC SAVACCT_FILE
++#define USRACCT_FILE_LOC USRACCT_FILE
+ 
+ /* Workaround for a kernel includes problem */
+ #if defined(__linux__) && defined(__alpha__)
+Index: trunk/configure.ac
+===================================================================
+--- trunk.orig/configure.ac
++++ trunk/configure.ac
+@@ -159,101 +159,6 @@
+ 		AC_EGREP_HEADER([comp_t],[sys/acct.h],[AC_DEFINE(HAVE_COMP_T, 1, Define if <sys/acct.h> uses the COMP_T type.)])
+   ) ]
+ )
+-dnl
+-dnl find out where utmp/pacct are stored
+-dnl
+-AC_RUN_IFELSE([AC_LANG_SOURCE([[
+-#include <stdio.h>
+-#include <stdlib.h>
+-#include <sys/types.h>
+-#include <stdint.h>	/* GNU/kFreeBSD */
+-#include <sys/acct.h>
+-#include <utmp.h>
+-
+-#ifndef WTMP_FILE
+-#  if defined(__FreeBSD__) || defined (__NetBSD__) || defined(__linux__) \
+-        || defined(__FreeBSD_kernel__) || defined(__GLIBC__)
+-#    define WTMP_FILE "/var/log/wtmp"
+-#  else
+-#    if defined(sun) || defined(AMIX)
+-#      define WTMP_FILE "/var/adm/wtmp"
+-#    else
+-#      if defined(sgi) || defined(SVR4)
+-#        define WTMP_FILE "/usr/adm/wtmp"
+-#      else
+-#        define WTMP_FILE "/usr/adm/wtmp"
+-#      endif
+-#    endif
+-#  endif
+-#endif
+-
+-#ifndef ACCT_FILE
+-#  if defined(__FreeBSD__) || defined(__linux__) \
+-        || defined(__FreeBSD_kernel__) || defined(__GLIBC__)
+-#    define ACCT_FILE "/var/log/account/pacct"
+-#  else
+-#    if defined(__NetBSD__)
+-#      define ACCT_FILE "/var/account/acct"
+-#    else
+-#      if defined(sun) || defined(AMIX)
+-#        define ACCT_FILE "/var/adm/pacct"
+-#      else
+-#        if defined(sgi) || defined(SVR4) || defined(M_XENIX)
+-#          define ACCT_FILE "/usr/adm/pacct"
+-#        else
+-#          define ACCT_FILE "/usr/adm/acct"
+-#        endif
+-#      endif
+-#    endif
+-#  endif
+-#endif
+-
+-#ifndef SAVACCT_FILE
+-#  if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__linux__) \
+-        || defined(__FreeBSD_kernel__) || defined(__GLIBC__)
+-#    define SAVACCT_FILE "/var/log/account/savacct"
+-#  else
+-#    if defined(sun) || defined(AMIX)
+-#      define SAVACCT_FILE "/var/adm/savacct"
+-#    else
+-#      if defined(sgi) || defined(SVR4)
+-#        define SAVACCT_FILE "/usr/adm/savacct"
+-#      else
+-#        define SAVACCT_FILE "/usr/adm/savacct"
+-#      endif
+-#    endif
+-#  endif
+-#endif
+-
+-#ifndef USRACCT_FILE
+-#  if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__linux__) \
+-        || defined(__FreeBSD_kernel__) || defined(__GLIBC__)
+-#    define USRACCT_FILE "/var/log/account/usracct"
+-#  else
+-#    if defined(sun) || defined(AMIX)
+-#      define USRACCT_FILE "/var/adm/usracct"
+-#    else
+-#      if defined(sgi) || defined(SVR4)
+-#        define USRACCT_FILE "/usr/adm/usracct"
+-#      else
+-#        define USRACCT_FILE "/usr/adm/usracct"
+-#      endif
+-#    endif
+-#  endif
+-#endif
+-
+-main ()
+-{
+-  FILE *fp;
+-  fp = fopen ("locs", "w");
+-  fprintf (fp, "WTMP_FILE_LOC=%s\n", WTMP_FILE);
+-  fprintf (fp, "ACCT_FILE_LOC=%s\n", ACCT_FILE);
+-  fprintf (fp, "SAVACCT_FILE_LOC=%s\n", SAVACCT_FILE);
+-  fprintf (fp, "USRACCT_FILE_LOC=%s\n", USRACCT_FILE);
+-  fclose (fp);
+-  exit(0);
+-}
+-]])],[. ./locs; rm locs],[echo "Error -- could not locate your wtmp and acct files."; exit 1],[echo "Sorry -- you cannot cross-compile this package (FIXME)."; exit 1 ])
+ AC_TYPE_PID_T dnl for sys/acct.h
+ AC_TYPE_UID_T dnl same as above
+ AC_TYPE_SIZE_T
+@@ -290,12 +195,6 @@
+ AC_SUBST(LASTCOMM_MAN)
+ AC_SUBST(SA_MAN)
+ 
+-dnl Substitutions for file locations
+-AC_SUBST(WTMP_FILE_LOC)
+-AC_SUBST(ACCT_FILE_LOC)
+-AC_SUBST(SAVACCT_FILE_LOC)
+-AC_SUBST(USRACCT_FILE_LOC)
+-
+ dnl Dump the makefiles and etc.
+ AC_CONFIG_FILES([Makefile lib/Makefile files.h version.h])
+ AC_OUTPUT

=== added file 'debian/patches/gnulib-c11-compat.patch'
--- debian/patches/gnulib-c11-compat.patch	1970-01-01 00:00:00 +0000
+++ debian/patches/gnulib-c11-compat.patch	2012-12-18 01:35:59 +0000
@@ -0,0 +1,25 @@
+Description: Fix gnulib stdio.h compatibility with C11
+ C11 eliminates gets(), so if we're building C11 source the deprecation
+ warning is redundant and causes a build failure.  Check for the
+ (gcc-specific) _ISOC11_SOURCE define and don't do any gets handling if
+ set.
+Author: Steve Langasek <steve.langasek@ubuntu.com>
+
+Index: trunk/lib/stdio.in.h
+===================================================================
+--- trunk.orig/lib/stdio.in.h
++++ trunk/lib/stdio.in.h
+@@ -138,11 +138,13 @@
+                  "use gnulib module fflush for portable POSIX compliance");
+ #endif
+ 
++#ifndef _ISOC11_SOURCE
+ /* It is very rare that the developer ever has full control of stdin,
+    so any use of gets warrants an unconditional warning.  Assume it is
+    always declared, since it is required by C89.  */
+ #undef gets
+ _GL_WARN_ON_USE (gets, "gets is a security hole - use fgets instead");
++#endif
+ 
+ #if @GNULIB_FOPEN@
+ # if @REPLACE_FOPEN@

=== modified file 'debian/patches/series'
--- debian/patches/series	2011-02-25 20:31:15 +0000
+++ debian/patches/series	2012-12-18 01:32:11 +0000
@@ -7,3 +7,5 @@
 488731-sa-manpage-default-unit.patch
 581421-sa-hz-division.patch
 441927-accton-without-args.patch
+cross-build-support.patch
+gnulib-c11-compat.patch

=== modified file 'debian/rules'
--- debian/rules	2011-05-06 14:01:39 +0000
+++ debian/rules	2012-12-18 02:54:16 +0000
@@ -3,10 +3,9 @@
 DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
 DEB_BUILD_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
 
+CROSS=--build=$(DEB_BUILD_GNU_TYPE)
 ifneq ($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
-	CROSS=CC=$(DEB_HOST_GNU_TYPE)-gcc
-else
-	CROSS=
+	CROSS += --host=$(DEB_HOST_GNU_TYPE)
 endif
 
 clean:
@@ -30,8 +29,8 @@
 ifneq "$(wildcard /usr/share/misc/config.guess)" ""
 	cp -f /usr/share/misc/config.guess config.guess
 endif
-	autoreconf
-	./configure $(CROSS) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info CFLAGS="$(CFLAGS)"
+	autoreconf -f
+	./configure $(CROSS) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info $(shell dpkg-buildflags --export=configure)
 
 build: build-stamp
 build-stamp: config.status

