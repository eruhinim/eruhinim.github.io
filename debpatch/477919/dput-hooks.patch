--- /usr/bin/dput	2008-05-04 12:00:40.000000000 +0200
+++ dput	2008-07-15 18:08:45.000000000 +0200
@@ -105,6 +105,8 @@
     config.set('DEFAULT', 'default_host_main', '')
     config.set('DEFAULT', 'post_upload_command', '')
     config.set('DEFAULT', 'pre_upload_command', '')
+    config.set('DEFAULT', 'post_upload_hook_dir', '/etc/dput/post-upload.d/')
+    config.set('DEFAULT', 'pre_upload_hook_dir', '/etc/dput/pre-upload.d/')
     config.set('DEFAULT', 'ssh_config_options', '')
     config.set('DEFAULT', 'passive_ftp', '1')
     config.set('DEFAULT', 'progress_indicator', '0')
@@ -545,6 +547,20 @@
     if os.system(config.get(host, lookup_command)):
         raise dputhelper.DputUploadFatalException("Error: %s upload command failed."%type)
 
+# Execute hooks, possibly aborting on error
+# first argument is a .changes file, as passed to dput on cmdline
+def execute_hooks(changes, hook_dir, abort_on_error=False):
+    if not os.path.isdir(hook_dir): # nothing to do
+        return
+    cmd = "run-parts --arg=%s" % changes
+    if abort_on_error:
+        cmd += " --exit-on-error"
+    cmd += " " + hook_dir
+    hook_rc = os.system(cmd)
+    if abort_on_error and hook_rc != 0:
+        raise dputhelper.DputUploadFatalException( \
+                "Error: pre-upload hook failed")
+
 # Open a Logfile and check if the user already put
 # this package on the specified host or not:
 def check_upload_logfile(changes_file, host, check_only,
@@ -779,6 +795,8 @@
         if len(config.get(host, 'pre_upload_command')) !=0:
             type = 'pre'
             execute_command(host, debug, type)
+        execute_hooks(package_name, config.get(host, 'pre_upload_hook_dir'),
+                abort_on_error=True)
 
         # Check the upload methods that we have as default and per host
         if debug: print "D: Default Method: %s" % \
@@ -907,6 +925,7 @@
             print "Not running dinstall."
 
         # Post-Upload Command
+        execute_hooks(package_name, config.get(host, 'post_upload_hook_dir'))
         if len(config.get(host, 'post_upload_command')) != 0:
             type = 'post'
             execute_command(host, debug, type)
