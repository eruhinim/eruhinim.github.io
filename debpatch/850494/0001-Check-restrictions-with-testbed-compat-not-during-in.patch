From 0c5413d56960474009e954297ce4b2b1c0ef9d8c Mon Sep 17 00:00:00 2001
From: Simon McVittie <smcv@debian.org>
Date: Mon, 16 Jan 2017 00:01:48 +0000
Subject: [PATCH 1/2] Check restrictions with testbed compat, not during
 initialization

This puts more of the exceptional cases together, and makes more
sense if we are going to allow certain restrictions to be ignored.
---
 lib/testdesc.py | 7 ++++---
 tests/testdesc  | 8 ++++----
 2 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/lib/testdesc.py b/lib/testdesc.py
index 180b70f..ac80d7a 100644
--- a/lib/testdesc.py
+++ b/lib/testdesc.py
@@ -96,9 +96,6 @@ class Test:
         '''
         if '/' in name:
             raise Unsupported(name, 'test name may not contain / character')
-        for r in restrictions:
-            if r not in known_restrictions:
-                raise Unsupported(name, 'unknown restriction %s' % r)
 
         if not ((path is None) ^ (command is None)):
             raise InvalidControl(name, 'Test must have either path or command')
@@ -136,6 +133,10 @@ class Test:
 
         Raise Unsupported exception if there are any.
         '''
+        for r in self.restrictions:
+            if r not in known_restrictions:
+                raise Unsupported(self.name, 'unknown restriction %s' % r)
+
         if 'isolation-container' in self.restrictions and \
            'isolation-container' not in caps and \
            'isolation-machine' not in caps:
diff --git a/tests/testdesc b/tests/testdesc
index b749018..352bdb2 100755
--- a/tests/testdesc
+++ b/tests/testdesc
@@ -136,10 +136,8 @@ class Test(unittest.TestCase):
     def test_unknown_restriction(self):
         '''Test with unknown restriction'''
 
-        with self.assertRaises(testdesc.Unsupported) as cm:
-            testdesc.Test('foo', 'tests/do_foo', None, ['needs-red'], [], [],
-                          [], [])
-        self.assertIn('unknown restriction needs-red', str(cm.exception))
+        testdesc.Test('foo', 'tests/do_foo', None, ['needs-red'], [], [],
+                      [], [])
 
     def test_neither_path_nor_command(self):
         '''Test without path nor command'''
@@ -166,6 +164,8 @@ class Test(unittest.TestCase):
         self.assertRaises(testdesc.Unsupported,
                           t.check_testbed_compat, ['root-on-testbed'])
         t.check_testbed_compat(['isolation-container', 'root-on-testbed'])
+        self.assertRaises(testdesc.Unsupported,
+                          t.check_testbed_compat, ['needs-quantum-computer'])
 
 
 class Debian(unittest.TestCase):
-- 
2.11.0

