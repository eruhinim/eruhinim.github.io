diff --git a/debian/changelog b/debian/changelog
index 50001c2..3abf4c3 100644
--- a/debian/changelog
+++ b/debian/changelog
@@ -1,3 +1,11 @@
+binutils (2.27.90.20161231-1.1) unstable; urgency=medium
+
+  * Non-maintainer upload.
+  * Add upstream suggestion to workaround a bug on mips* which produces
+    invalid dynamic symbols table when --gc-sections is used (Closes: #844227).
+
+ -- Lisandro Damián Nicanor Pérez Meyer <lisandro@debian.org>  Sun, 08 Jan 2017 15:11:02 -0300
+
 binutils (2.27.90.20161231-1) unstable; urgency=medium
 
   * New upstream snapshot, taken from the binutils 2.28 branch.
diff --git a/debian/patches/series b/debian/patches/series
index 282cda7..1490cdc 100644
--- a/debian/patches/series
+++ b/debian/patches/series
@@ -29,3 +29,4 @@ pr20649.diff
 ld-new-dtags-by-default.diff
 
 # patches taken from the trunk
+workaround_mips_dynamic_symbols_table_bug.patch
diff --git a/debian/patches/workaround_mips_dynamic_symbols_table_bug.patch b/debian/patches/workaround_mips_dynamic_symbols_table_bug.patch
new file mode 100644
index 0000000..67f5bd9
--- /dev/null
+++ b/debian/patches/workaround_mips_dynamic_symbols_table_bug.patch
@@ -0,0 +1,30 @@
+Description: Workaround mips* invalid dynamic symbol table when --gc-sections is used since PR ld/13177 fix
+ This patch comes as a workaround of the bug as suggested in
+ https://sourceware.org/bugzilla/show_bug.cgi?id=20828#c10.
+ .
+ I have also restricted the workaround to mips* in order to avoid posible
+ breakage in other archs.
+Origin: https://sourceware.org/bugzilla/show_bug.cgi?id=20828#c10
+Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=844227
+Forwarded: not-needed
+Author: James Cowgill, Lisandro Damián Nicanor Pérez Meyer <lisandro@debian.org>
+
+---
+ bfd/elflink.c |    5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/bfd/elflink.c
++++ b/bfd/elflink.c
+@@ -700,7 +700,12 @@ bfd_elf_record_link_assignment (bfd *out
+        || h->ref_dynamic
+        || bfd_link_dll (info)
+        || elf_hash_table (info)->is_relocatable_executable)
++#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL) || defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
++      && h->dynindx == -1
++      && h->forced_local == 0)
++#else
+       && h->dynindx == -1)
++#endif
+     {
+       if (! bfd_elf_link_record_dynamic_symbol (info, h))
+ 	return FALSE;
