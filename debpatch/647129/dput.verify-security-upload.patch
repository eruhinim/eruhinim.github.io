--- dput-0.9.6.2/dput.orig	2011-12-25 15:34:24.000000000 +0100
+++ dput-0.9.6.2/dput	2011-12-25 23:44:35.000000000 +0100
@@ -266,10 +266,19 @@
                 include_tar = 1
     return (include_orig, include_tar)
 
+def verify_security_upload(host, changes):
+    if changes.has_key('distribution'):
+        if changes.dict['distribution'] in ['stable-security', 'oldstable-security']:
+            if host != 'security-master':
+                print "Security uploads targeted for stable-security or oldstable-security"
+		print "need to be uploaded to the security-master host and not to ftp-master."
+		print "(Override with --force)"
+                sys.exit(1)
+
 # Run some tests on the files before uploading them to 
 # verify that they are in good shape.
 def verify_files(path, filename, host, check_only, check_version,
-                 unsigned_upload, debug):
+                 unsigned_upload, force_upload, debug):
     file_seen = include_orig_tar_gz = include_tar_gz = binary_only = 0
 
     name_of_file = filename
@@ -286,6 +295,10 @@
     changes = parse_changes(chg_fd)
     chg_fd.close
 
+    # Warn on security uploads to ftp-master
+    if not force_upload:
+        verify_security_upload(host, changes)
+
     # Find out if it's a binary only upload or not
     binary_upload = check_upload_variant(changes, debug)
 
@@ -772,7 +785,7 @@
 
         # Run the change file tests.
         verify_files(path, name_of_package, host, check_only, check_version,
-                     unsigned_upload, debug)
+                     unsigned_upload, force_upload, debug)
 
         # Run the lintian test if the user asked us to do so.
         if (call_lintian or
