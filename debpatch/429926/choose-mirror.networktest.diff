Index: choose-mirror.c
===================================================================
--- choose-mirror.c	(revisiÃ³n: 47582)
+++ choose-mirror.c	(copia de trabajo)
@@ -575,9 +575,47 @@
 	}
 }
 
+int check_network (void) {
+	char *hostname;
+	char *proxy;
+	char *proxy_hostname;
+	int valid;
+
+	hostname = add_protocol("hostname");
+	debconf_get(debconf, hostname);
+	free(hostname);
+	hostname = strdup(debconf->value);
+	debconf_get(debconf, proxy);
+	if (debconf->value != NULL && strlen(debconf->value)) {
+            /* Copy the value to proxy_hostname without the protocol specification */ 
+        }
+
+        /* Check if the network interface is up */
+
+        /* Check if the default gateway is up */
+
+        /* IF we have a proxy, check if it is reachable */
+            /* IF it is not, prompt a warning */
+
+        /* IF we do not have a proxy, check if the mirror hostname is
+         * reachable */
+
+        /* IF we cannot reach the mirror, ask the user if he wants to continue
+         * without testing the mirror */
+
+        /* Return 100 if the user acknoledges the fact that he has no network
+         * to prevent doing any more checks */
+
+	free(hostname);
+	free(proxy);
+	free(proxy_hostname);
+        return 0;
+}
+
 int main (int argc, char **argv) {
 	/* Use a state machine with a function to run in each state */
 	int state = 0;
+	int state_return = 0;
 	int (*states[])() = {
 		check_base_on_cd,
 		choose_protocol,
@@ -587,6 +625,7 @@
 		choose_mirror,
 		choose_proxy,
 		set_proxy,
+                check_network,
 		validate_mirror,
 		choose_suite,
 		get_codename,
@@ -604,10 +643,15 @@
 	di_system_init("choose-mirror");
 
 	while (state >= 0 && states[state]) {
-		if (states[state]() != 0) { /* back up to start */
-			state = 0;
+                state_return = states[state]();
+		if (state_return != 0) { 
+		    if (state_return == 100 ) { /* do not do more checks */
+			state = state + 5; /* go to the end of the list */
+                    } else { 
+			state = 0; /* back up to start */
+                    }
 		}
-		else if (debconf_go(debconf)) { /* back up */
+                else if (debconf_go(debconf)) { /* back up */
 			state = state - 1;
 		}
 		else {
