>From 0bbbd11b37cb774279b0436f45813de22fd8b28d Mon Sep 17 00:00:00 2001
From: Jari Aalto <jari.aalto@cante.net>
Date: Wed, 8 Feb 2012 03:12:41 -0500
Subject: [PATCH 1/2] checkbashisms.1: (OPTIONS): Use GNU conventions for
 options
Organization: Private
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit


Signed-off-by: Jari Aalto <jari.aalto@cante.net>
---
 scripts/checkbashisms.1 |   20 ++++++++++----------
 1 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/scripts/checkbashisms.1 b/scripts/checkbashisms.1
index a835d3d..f9aa44a 100644
--- a/scripts/checkbashisms.1
+++ b/scripts/checkbashisms.1
@@ -22,28 +22,28 @@ default allows extensions permitted by Policy but may also provide
 options for stricter checking.
 .SH OPTIONS
 .TP
-.BR \-\-help ", " \-h
-Show a summary of options.
+.BR \-f ", " \-\-force
+Force each script to be checked, even if it would normally not be (for
+instance, it has a bash or non POSIX shell shebang or appears to be a
+shell wrapper).
 .TP
-.BR \-\-newline ", " \-n
+.BR \-n ", " \-\-newline
 Check for "\fBecho \-n\fR" usage (non POSIX but required by Debian Policy 10.4.)
 .TP
-.BR \-\-posix ", " \-p
+.BR \-p\- ", " \-posix
 Check for issues which are non POSIX but required to be supported by Debian
 Policy 10.4 (implies \fB\-n\fR).
 .TP
-.BR \-\-force ", " \-f
-Force each script to be checked, even if it would normally not be (for
-instance, it has a bash or non POSIX shell shebang or appears to be a
-shell wrapper).
-.TP
-.BR \-\-extra ", " \-x
+.BR \-x ", " \-\-extra
 Highlight lines which, whilst they do not contain bashisms, may be
 useful in determining whether a particular issue is a false positive
 which may be ignored.
 For example, the use of "\fB$BASH_ENV\fR" may be preceded by checking
 whether "\fB$BASH\fR" is set.
 .TP
+.BR \-h ", " \-\-help
+Show a summary of options.
+.TP
 .BR \-\-version ", " \-v
 Show version and copyright information.
 .SH "EXIT VALUES"
-- 
1.7.9

