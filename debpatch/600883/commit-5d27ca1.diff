commit 5d27ca131fb933dab7958864d6ccf49f715442a3
Author: David PrÃ©vot <david@tilapin.org>
Date:   Tue Oct 19 18:54:32 2010 -0400

    Apply manual pages conventions
    
    As advised in man(1), always use:
    	B<bold text>	type exactly as shown.
    	I<italic text>	replace with appropriate argument.
    s/debian/Debian/ if needed.
    s/  / / also.
    s/perl/Perl/ s/python/Python/ and s/emacs/Emacs/ too.

diff --git a/debhelper.pod b/debhelper.pod
index b2f130b..1a6e6cd 100644
--- a/debhelper.pod
+++ b/debhelper.pod
@@ -4,26 +4,26 @@ debhelper - the debhelper tool suite
 
 =head1 SYNOPSIS
 
-B<dh_>I<*> [B<-v>] [B<-a>] [B<-i>] [B<-s>] [B<--no-act>] [B<-ppackage>] [B<-Npackage] [-Ptmpdir>]
+B<dh_>I<*> [B<-v>] [B<-a>] [B<-i>] [B<-s>] [B<--no-act>] [B<-p>I<package>] [B<-N>I<package>] [B<-P>I<tmpdir>]
 
 =head1 DESCRIPTION
 
-Debhelper is used to help you build a debian package. The philosophy behind
+Debhelper is used to help you build a Debian package. The philosophy behind
 debhelper is to provide a collection of small, simple, and easily
-understood tools that are used in debian/rules to automate various common
+understood tools that are used in F<debian/rules> to automate various common
 aspects of building a package. This means less work for you, the packager.
-It also, to some degree means that these tools can be changed if debian
+It also, to some degree means that these tools can be changed if Debian
 policy changes, and packages that use them will require only a rebuild to
 comply with the new policy.
 
-A typical debian/rules file that uses debhelper will call several debhelper
+A typical F<debian/rules> file that uses debhelper will call several debhelper
 commands in sequence, or use L<dh(1)> to automate this process. Examples of
 rules files that use debhelper are in F</usr/share/doc/debhelper/examples/>
 
-To create a new debian package using debhelper, you can just copy one of
-the sample rules files and edit it by hand. Or you can try the dh-make
+To create a new Debian package using debhelper, you can just copy one of
+the sample rules files and edit it by hand. Or you can try the B<dh-make>
 package, which contains a L<dh_make|dh_make(1)> command that partially
-automates the process. For a more gentle introduction, the maint-guide debian
+automates the process. For a more gentle introduction, the B<maint-guide> Debian 
 package contains a tutorial about making your first package using debhelper.
 
 =head1 DEBHELPER COMMANDS
@@ -49,7 +49,7 @@ A few debhelper commands are deprecated and should not be used.
 
 =head2 Other Commands
 
-If a program's name starts with "dh_", and the program is not on the above
+If a program's name starts with B<dh_>, and the program is not on the above
 lists, then it is not part of the debhelper package, but it should still
 work like the other programs described on this page.
 
@@ -59,10 +59,10 @@ Many debhelper commands make use of files in F<debian/> to control what they
 do. Besides the common F<debian/changelog> and F<debian/control>, which are
 in all packages, not just those using debhelper, some additional files can
 be used to configure the behavior of specific debhelper commands. These
-files are typically named debian/package.foo (where "package" of course,
+files are typically named debian/I<package>.foo (where I<package> of course,
 is replaced with the package that is being acted on).
 
-For example, dh_installdocs uses files named debian/package.docs to list
+For example, B<dh_installdocs> uses files named F<debian/package.docs> to list
 the documentation files it will install. See the man pages of individual
 commands for details about the names and formats of the files they use.
 Generally, these files will list files to act on, one file per line. Some
@@ -70,22 +70,22 @@ programs in debhelper use pairs of files and destinations or slightly more
 complicated formats.
 
 Note that if a package is the first (or only) binary package listed in
-debian/control, debhelper will use debian/foo if no debian/package.foo
+F<debian/control>, debhelper will use F<debian/foo> if no F<debian/package.foo>
 file can be found.
 
 In some rare cases, you may want to have different versions of these files
-for different architectures or OSes. If files named debian/package.foo.ARCH
-or debian/package.foo.OS exist, where "ARCH" and "OS" are the same as the
-output of  "dpkg-architecture -qDEB_HOST_ARCH" /
-"dpkg-architecture -qDEB_HOST_ARCH_OS",
+for different architectures or OSes. If files named debian/I<package>.foo.I<ARCH>
+or debian/I<package>.foo.I<OS> exist, where I<ARCH> and I<OS> are the same as the
+output of "B<dpkg-architecture -qDEB_HOST_ARCH>" /
+"B<dpkg-architecture -qDEB_HOST_ARCH_OS>",
 then they will be used in preference to other, more general files.
 
 In many cases, these config files are used to specify various types of
 files. Documentation or example files to install, files to move, and so on.
 When appropriate, in cases like these, you can use standard shell wildcard
-characters ('?' and '*' and '[..]' character classes) in the files.
+characters (B<?> and B<*> and B<[>I<..>B<]> character classes) in the files.
 
-You can also put comments in these files; lines beginning with "#" are
+You can also put comments in these files; lines beginning with B<#> are
 ignored.
 
 =head1 SHARED DEBHELPER OPTIONS
@@ -112,19 +112,19 @@ build architecture.
 
 Act on all architecture independent packages.
 
-=item B<->I<ppackage>, B<--package=>I<package>
+=item B<-p>I<package>, B<--package=>I<package>
 
-Act on the package named "package". This option may be specified multiple
+Act on the package named I<package>. This option may be specified multiple
 times to make debhelper operate on a given set of packages.
 
 =item B<-s>, B<--same-arch>
 
-This used to be a smarter version of the -a flag, but the -a flag is now
+This used to be a smarter version of the B<-a> flag, but the B<-a> flag is now
 equally smart.
 
 =item B<-N>I<package>, B<--no-package=>I<package>
 
-Do not act on the specified package even if an -a, -i, or -p option lists
+Do not act on the specified package even if an B<-a>, B<-i>, or B<-p> option lists
 the package as one that should be acted on.
 
 =item B<--remaining-packages>
@@ -137,26 +137,26 @@ process the rest of packages with default settings.
 
 =item B<--ignore=>I<file>
 
-Ignore the specified file. This can be used if debian/ contains a debhelper
+Ignore the specified file. This can be used if F<debian/> contains a debhelper
 config file that a debhelper command should not act on. Note that
-debian/compat, debian/control, and debian/changelog can't be ignored, but
+F<debian/compat>, F<debian/control>, and F<debian/changelog> can't be ignored, but
 then, there should never be a reason to ignore those files.
 
-For example, if upstream ships a debian/init that you don't want
-dh_installinit to install, use --ignore=debian/init
+For example, if upstream ships a F<debian/init> that you don't want
+B<dh_installinit> to install, use B<--ignore=debian/init>
 
 =item B<-P>I<tmpdir>, B<--tmpdir=>I<tmpdir>
 
-Use "tmpdir" for package build directory. The default is debian/<package>
+Use I<tmpdir> for package build directory. The default is debian/I<package>
 
 =item B<--mainpackage=>I<package>
 
 This little-used option changes the package which debhelper considers the
-"main package", that is, the first one listed in debian/control, and the
-one for which debian/foo files can be used instead of the usual
-debian/package.foo files.
+"main package", that is, the first one listed in F<debian/control>, and the
+one for which F<debian/foo> files can be used instead of the usual
+F<debian/package.foo> files.
 
-=item B<-O=>I<option|bundle>
+=item B<-O=>I<option>|I<bundle>
 
 This is used by L<dh(1)> when passing user-specified options to all the
 commands it runs. If the command supports the specified option or option
@@ -175,7 +175,7 @@ option does.
 
 =item B<-n>
 
-Do not modify postinst/postrm/etc scripts.
+Do not modify F<postinst>, F<postrm>, etc. scripts.
 
 =item B<-X>I<item>, B<--exclude=>I<item>
 
@@ -191,7 +191,7 @@ in ALL packages acted on, not just the first.
 
 =head1 BUILD SYSTEM OPTIONS
 
-The following command line options are supported by all of the dh_auto_*
+The following command line options are supported by all of the B<dh_auto_>I<*>
 debhelper programs. These programs support a variety of build systems,
 and normally heuristically determine which to use, and how to use them.
 You can use these command line options to override the default behavior.
@@ -209,7 +209,7 @@ Assume that the original package source tree is at the specified
 I<directory> rather than the top level directory of the Debian
 source package tree.
 
-=item B<-B>[I<directory>], B<--builddirectory>=[I<directory>]
+=item B<-B>[I<directory>], B<--builddirectory=>[I<directory>]
 
 Enable out of source building and use the specified I<directory> as the build
 directory. If I<directory> parameter is omitted, a default build directory
@@ -218,7 +218,7 @@ will chosen.
 If this option is not specified, building will be done in source by default
 unless the build system requires or prefers out of source tree building.
 In such a case, the default build directory will be used even if
-L<--builddirectory> is not specified.
+B<--builddirectory> is not specified.
 
 If the build system prefers out of source tree building but still
 allows in source building, the latter can be re-enabled by passing a build
@@ -228,15 +228,15 @@ directory path that is the same as the source directory path.
 
 Enable parallel builds if underlying build system supports them.
 The number of parallel jobs is controlled by the
-DEB_BUILD_OPTIONS environment variable (L<Debian Policy, section 4.9.1>) at
+B<DEB_BUILD_OPTIONS> environment variable (L<Debian Policy, section 4.9.1>) at
 build time. It might also be subject to a build system specific limit.
 
 If this option is not specified, debhelper currently defaults to not
 allowing parallel package builds.
 
-=item B<--max-parallel>I<=maximum>
+=item B<--max-parallel=>I<maximum>
 
-This option implies L<--parallel> and allows further limiting the number of
+This option implies B<--parallel> and allows further limiting the number of
 jobs that can be used in a parallel build. If the package build is known to
 only work with certain levels of concurrency, you can set this to the maximum
 level that is known to work, or that you wish to support.
@@ -246,7 +246,7 @@ level that is known to work, or that you wish to support.
 List all build systems supported by debhelper on this system. The list
 includes both default and third party build systems (marked as such). Also
 shows which build system would be automatically selected, or which one
-is manually specified with the I<--buildsystem> option.
+is manually specified with the B<--buildsystem> option.
 
 =back
 
@@ -259,8 +259,8 @@ programs will default to acting on all binary packages when run. If your
 source package happens to generate one architecture dependent package, and
 another architecture independent package, this is not the correct behavior,
 because you need to generate the architecture dependent packages in the
-binary-arch debian/rules target, and the architecture independent packages
-in the binary-indep debian/rules target.
+binary-arch F<debian/rules> target, and the architecture independent packages
+in the binary-indep F<debian/rules> target.
 
 To facilitate this, as well as give you more control over which packages
 are acted on by debhelper programs, all debhelper programs accept the
@@ -268,14 +268,14 @@ B<-a>, B<-i>, B<-p>, and B<-s> parameters. These parameters are cumulative.
 If none are given, debhelper programs default to acting on all packages listed
 in the control file.
 
-=head2 Automatic generation of debian install scripts
+=head2 Automatic generation of Debian install scripts
 
-Some debhelper commands will automatically generate parts of debian
+Some debhelper commands will automatically generate parts of Debian
 maintainer scripts. If you want these automatically generated things
-included in your existing debian maintainer scripts, then you need to add
-"#DEBHELPER#" to your scripts, in the place the code should be added.
-"#DEBHELPER#" will be replaced by any auto-generated code when you run
-dh_installdeb. 
+included in your existing Debian maintainer scripts, then you need to add
+B<#DEBHELPER#> to your scripts, in the place the code should be added.
+B<#DEBHELPER#> will be replaced by any auto-generated code when you run
+B<dh_installdeb>.
 
 If a script does not exist at all and debhelper needs to add something to
 it, then debhelper will create the complete script.
@@ -284,7 +284,7 @@ All debhelper commands that automatically generate code in this way let it
 be disabled by the -n parameter (see above).
 
 Note that the inserted code will be shell code, so you cannot directly use
-it in a perl script. If you would like to embed it into a perl script, here
+it in a Perl script. If you would like to embed it into a Perl script, here
 is one way to do that (note that I made sure that $1, $2, etc are set with
 the set command):
 
@@ -306,25 +306,25 @@ things, so debhelper offers a way to automate it.
 
 All commands of this type, besides documenting what dependencies may be
 needed on their man pages, will automatically generate a substvar called
-${misc:Depends}. If you put that token into your debian/control file, it
+B<${misc:Depends}>. If you put that token into your F<debian/control> file, it
 will be expanded to the dependencies debhelper figures you need. 
 
-This is entirely independent of the standard ${shlibs:Depends} generated by
-L<dh_makeshlibs(1)>, and the ${perl:Depends} generated by L<dh_perl(1)>.
+This is entirely independent of the standard B<${shlibs:Depends}> generated by
+L<dh_makeshlibs(1)>, and the B<${perl:Depends}> generated by L<dh_perl(1)>.
 You can choose not to use any of these, if debhelper's guesses don't match
 reality.
 
 =head2 Package build directories
 
 By default, all debhelper programs assume that the temporary directory used
-for assembling the tree of files in a package is debian/<package>.
+for assembling the tree of files in a package is debian/I<package>.
 
 Sometimes, you might want to use some other temporary directory. This is
-supported by the -P flag. For example, "dh_installdocs -Pdebian/tmp", will
-use debian/tmp as the temporary directory. Note that if you use -P, the 
+supported by the B<-P> flag. For example, "B<dh_installdocs -Pdebian/tmp>", will
+use B<debian/tmp> as the temporary directory. Note that if you use B<-P>, the 
 debhelper programs can only be acting on a single package at a time. So if 
 you have a package that builds many binary packages, you will need to also 
-use the -p flag to specify which binary package the debhelper program will
+use the B<-p> flag to specify which binary package the debhelper program will
 act on.
 
 =head2 Debhelper compatibility levels
@@ -337,7 +337,7 @@ introduced. You tell debhelper which compatibility level it should use, and
 it modifies its behavior in various ways.
 
 Tell debhelper what compatibility level to use by writing a number to
-debian/compat. For example, to turn on v8 mode:
+F<debian/compat>. For example, to turn on v8 mode:
 
   % echo 8 > debian/compat
 
@@ -355,15 +355,15 @@ These are the available compatibility levels:
 =item v1
 
 This is the original debhelper compatibility level, and so it is the default
-one. In this mode, debhelper will use debian/tmp as the package tree
+one. In this mode, debhelper will use F<debian/tmp> as the package tree
 directory for the first binary package listed in the control file, while using
-debian/<package> for all other packages listed in the control file.
+debian/I<package> for all other packages listed in the F<control> file.
 
 This mode is deprecated.
 
 =item v2
 
-In this mode, debhelper will consistently use debian/<package>
+In this mode, debhelper will consistently use debian/I<package>
 as the package tree directory for every package that is built.
 
 This mode is deprecated.
@@ -376,16 +376,16 @@ This mode works like v2, with the following additions:
 
 =item -
 
-Debhelper config files support globbing via * and ?, when appropriate. To
+Debhelper config files support globbing via B<*> and B<?>, when appropriate. To
 turn this off and use those characters raw, just prefix with a backslash.
 
 =item -
 
-dh_makeshlibs makes the postinst and postrm scripts call ldconfig.
+B<dh_makeshlibs> makes the F<postinst> and F<postrm> scripts call B<ldconfig>.
 
 =item -
 
-Every file in etc/ is automatically flagged as a conffile by dh_installdeb.
+Every file in F<etc/> is automatically flagged as a conffile by B<dh_installdeb>.
 
 =back
 
@@ -399,22 +399,22 @@ Changes from v3 are:
 
 =item -
 
-dh_makeshlibs -V will not include the debian part of the version number in
+B<dh_makeshlibs -V> will not include the Debian part of the version number in
 the generated dependency line in the shlibs file.
 
 =item -
 
-You are encouraged to put the new ${misc:Depends} into debian/control to
-supplement the ${shlibs:Depends} field.
+You are encouraged to put the new B<${misc:Depends}> into F<debian/control> to
+supplement the B<${shlibs:Depends}> field.
 
 =item -
 
-dh_fixperms will make all files in bin/ directories and in etc/init.d 
+B<dh_fixperms> will make all files in F<bin/> directories and in F<etc/init.d>
 executable.
 
 =item -
 
-dh_link will correct existing links to conform with policy.
+B<dh_link> will correct existing links to conform with policy.
 
 =back
 
@@ -432,16 +432,16 @@ Comments are ignored in debhelper config files.
 
 =item -
 
-dh_strip --dbg-package now specifies the name of a package to put debugging
+B<dh_strip --dbg-package> now specifies the name of a package to put debugging
 symbols in, not the packages to take the symbols from.
 
 =item -
 
-dh_installdocs skips installing empty files.
+B<dh_installdocs> skips installing empty files.
 
 =item -
 
-dh_install errors out if wildcards expand to nothing.
+B<dh_install> errors out if wildcards expand to nothing.
 
 =back
 
@@ -454,23 +454,23 @@ Changes from v5 are:
 =item -
 
 Commands that generate maintainer script fragments will order the
-fragments in reverse order for the prerm and postrm scripts.
+fragments in reverse order for the F<prerm> and F<postrm> scripts.
 
 =item -
 
-dh_installwm will install a slave manpage link for x-window-manager.1.gz,
-if it sees the man page in usr/share/man/man1 in the package build
+B<dh_installwm> will install a slave manpage link for F<x-window-manager.1.gz>,
+if it sees the man page in F<usr/share/man/man1> in the package build
 directory.
 
 =item -
 
-dh_builddeb did not previously delete everything matching
-DH_ALWAYS_EXCLUDE, if it was set to a list of things to exclude, such as
-"CVS:.svn:.git". Now it does.
+B<dh_builddeb> did not previously delete everything matching
+B<DH_ALWAYS_EXCLUDE>, if it was set to a list of things to exclude, such as
+B<CVS:.svn:.git>. Now it does.
 
 =item -
 
-dh_installman allows overwriting existing man pages in the package build
+B<dh_installman> allows overwriting existing man pages in the package build
 directory. In previous compatibility levels it silently refuses to do this.
 
 =back
@@ -483,22 +483,22 @@ Changes from v6 are:
 
 =item -
 
-dh_install, will fall back to looking for files in debian/tmp if it doesn't
+B<dh_install>, will fall back to looking for files in F<debian/tmp> if it doesn't
 find them in the current directory (or wherever you tell it look using
---sourcedir). This allows dh_install to interoperate with dh_auto_install,
-which installs to debian/tmp, without needing any special parameters.
+B<--sourcedir>). This allows B<dh_install> to interoperate with B<dh_auto_install>,
+which installs to F<debian/tmp>, without needing any special parameters.
 
 =item -
 
-dh_clean will read debian/clean and delete files listed there.
+B<dh_clean> will read F<debian/clean> and delete files listed there.
 
 =item -
 
-dh_clean will delete toplevel *-stamp files.
+B<dh_clean> will delete toplevel F<*-stamp> files.
 
 =item -
 
-dh_installchangelogs will guess at what file is the upstream changelog if
+B<dh_installchangelogs> will guess at what file is the upstream changelog if
 none is specified.
 
 =back
@@ -517,20 +517,20 @@ Commands will fail rather than warning when they are passed unknown options.
 
 =item -
 
-dh_makeshlibs will run dpkg-gensymbols on all shared libraries that it
-generates shlibs files for. So -X can be used to exclude libraries.
-Also, libraries in unusual locations that dpkg-gensymbols would not
+B<dh_makeshlibs> will run B<dpkg-gensymbols> on all shared libraries that it
+generates shlibs files for. So B<-X> can be used to exclude libraries.
+Also, libraries in unusual locations that B<dpkg-gensymbols> would not
 have processed before will be passed to it, a behavior change that 
 can cause some packages to fail to build.
 
 =item -
 
-dh requires the sequence to run be specified as the first parameter, and
-any switches come after it. Ie, use "dh $@ --foo", not "dh --foo $@"
+B<dh> requires the sequence to run be specified as the first parameter, and
+any switches come after it. Ie, use "B<dh $@ --foo>", not "B<dh --foo $@>".
 
 =item
 
-dh_auto_* prefer to use perl's Module::Build in preference to Makefile.PL.
+B<dh_auto_>I<*> prefer to use Perl's B<Module::Build> in preference to F<Makefile.PL>.
 
 =back
 
@@ -539,22 +539,22 @@ dh_auto_* prefer to use perl's Module::Build in preference to Makefile.PL.
 =head2 udebs
 
 Debhelper includes support for udebs. To create a udeb with debhelper,
-add "Package-Type: udeb" to the package's stanza in debian/control, and
+add "B<Package-Type: udeb>" to the package's stanza in F<debian/control>, and
 build-depend on debhelper (>= 4.2). Debhelper will try to create udebs that
 comply with debian-installer policy, by making the generated package files
-end in ".udeb", not installing any documentation into a udeb, skipping over
-preinst, postrm, prerm, and config scripts, etc.
+end in F<.udeb>, not installing any documentation into a udeb, skipping over
+F<preinst>, F<postrm>, F<prerm>, and F<config> scripts, etc.
 
 =head2 Other notes
 
 In general, if any debhelper program needs a directory to exist under
-debian/, it will create it. I haven't bothered to document this in all the
-man pages, but for example, dh_installdeb knows to make debian/<package>/DEBIAN/
-before trying to put files there, dh_installmenu knows you need a
-debian/<package>/usr/share/menu/ before installing the menu files, etc.
+B<debian/>, it will create it. I haven't bothered to document this in all the
+man pages, but for example, B<dh_installdeb> knows to make debian/I<package>/DEBIAN/
+before trying to put files there, B<dh_installmenu> knows you need a
+debian/I<package>/usr/share/menu/ before installing the menu files, etc.
 
 Once your package uses debhelper to build, be sure to add
-debhelper to your Build-Depends line in debian/control. You should
+debhelper to your Build-Depends line in F<debian/control>. You should
 build-depend on a version of debhelper equal to (or greater than) the
 debhelper compatibility level your package uses. So if your package used
 compatibility level 7:
@@ -565,46 +565,46 @@ compatibility level 7:
 
 =over 4
 
-=item DH_VERBOSE
+=item B<DH_VERBOSE>
 
-Set to 1 to enable verbose mode. Debhelper will output every command it runs
+Set to B<1> to enable verbose mode. Debhelper will output every command it runs
 that modifies files on the build system.
 
-=item DH_COMPAT
+=item B<DH_COMPAT>
 
 Temporarily specifies what compatibility level debhelper should run at,
-overriding any value in debian/compat.
+overriding any value in F<debian/compat>.
 
-=item DH_NO_ACT
+=item B<DH_NO_ACT>
 
-Set to 1 to enable no-act mode.
+Set to B<1> to enable no-act mode.
 
-=item DH_OPTIONS
+=item B<DH_OPTIONS>
 
 Anything in this variable will be prepended to the command line arguments
 of all debhelper commands. Command-specific options will be ignored by 
 commands that do not support them. 
 
-This is useful in some situations, for example, if you need to pass -p to
-all debhelper commands that will be run. One good way to set DH_OPTIONS is
-by using "Target-specific Variable Values" in your debian/rules file. See
+This is useful in some situations, for example, if you need to pass B<-p> to
+all debhelper commands that will be run. One good way to set B<DH_OPTIONS> is
+by using "Target-specific Variable Values" in your F<debian/rules> file. See
 the make documentation for details on doing this.
 
-=item DH_ALWAYS_EXCLUDE
+=item B<DH_ALWAYS_EXCLUDE>
 
-If set, this adds the value the variable is set to to the -X options of all
-commands that support the -X option. Moreover, dh_builddeb will rm -rf
+If set, this adds the value the variable is set to to the B<-X> options of all
+commands that support the B<-X> option. Moreover, B<dh_builddeb> will B<rm -rf>
 anything that matches the value in your package build tree.
 
 This can be useful if you are doing a build from a CVS source tree, in
-which case setting DH_ALWAYS_EXCLUDE=CVS will prevent any CVS directories
+which case setting B<DH_ALWAYS_EXCLUDE=CVS> will prevent any CVS directories
 from sneaking into the package you build. Or, if a package has a source
 tarball that (unwisely) includes CVS directories, you might want to export
-DH_ALWAYS_EXCLUDE=CVS in debian/rules, to make it take effect wherever
+B<DH_ALWAYS_EXCLUDE=CVS> in F<debian/rules>, to make it take effect wherever
 your package is built.
 
 Multiple things to exclude can be separated with colons, as in
-DH_ALWAYS_EXCLUDE=CVS:.svn
+B<DH_ALWAYS_EXCLUDE=CVS:.svn>
 
 =back
 
@@ -614,7 +614,7 @@ DH_ALWAYS_EXCLUDE=CVS:.svn
 
 =item F</usr/share/doc/debhelper/examples/>
 
-A set of example debian/rules files that use debhelper.
+A set of example F<debian/rules> files that use debhelper.
 
 =item L<http://kitenet.net/~joey/code/debhelper/>
 
diff --git a/dh b/dh
index 08a66bb..f267a32 100755
--- a/dh
+++ b/dh
@@ -11,21 +11,21 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh> sequence [B<--with> I<addon>[,I<addon>,...]] [B<--list>] [B<--until> I<cmd>] [B<--before> I<cmd>] [B<--after> I<cmd>] [B<--remaining>] [S<I<debhelper options>>]
+B<dh> I<sequence> [B<--with> I<addon>[B<,>I<addon> ...]] [B<--list>] [B<--until> I<cmd>] [B<--before> I<cmd>] [B<--after> I<cmd>] [B<--remaining>] [S<I<debhelper options>>]
 
 =head1 DESCRIPTION
 
-dh runs a sequence of debhelper commands. The supported sequences
-correspond to the targets of a debian/rules file: "build", "clean",
-"install", "binary-arch", "binary-indep", and "binary".
+B<dh> runs a sequence of debhelper commands. The supported I<sequence>s
+correspond to the targets of a F<debian/rules> file: B<build>, B<clean>,
+B<install>, B<binary-arch>, B<binary-indep>, and B<binary>.
 
-Commands in the binary-indep sequence are passed the "-i" option to ensure
+Commands in the B<binary-indep> sequence are passed the B<-i> option to ensure
 they only work on binary independent packages, and commands in the
-binary-arch sequences are passed the "-a" option to ensure they only work
+B<binary-arch> sequences are passed the B<-a> option to ensure they only work
 on architecture dependent packages.
 
-If debian/rules contains a target with a name like "override_I<dh_command>",
-then when it would normally run I<dh_command>, dh will instead call that
+If F<debian/rules> contains a target with a name like B<override_>I<dh_command>,
+then when it would normally run I<dh_command>, B<dh> will instead call that
 target. The override target can then run the command with additional options,
 or run entirely different commands instead. See examples below. (Note that to
 use this feature, you should Build-Depend on debhelper 7.0.50 or above.)
@@ -34,18 +34,18 @@ use this feature, you should Build-Depend on debhelper 7.0.50 or above.)
 
 =over 4
 
-=item B<--with> I<addon>[,I<addon>,...]
+=item B<--with> I<addon>[B<,>I<addon> ...]
 
 Add the debhelper commands specified by the given addon to appropriate places
 in the sequence of commands that is run. This option can be repeated more
 than once, or multiple addons can be listed, separated by commas.
 This is used when there is a third-party package that provides
-debhelper commands. See the PROGRAMMING file for documentation about
+debhelper commands. See the F<PROGRAMMING> file for documentation about
 the sequence addon interface.
 
 =item B<--without> I<addon>
 
-The inverse of --with, disables using the given addon.
+The inverse of B<--with>, disables using the given addon.
 
 =item B<--list>, B<-l>
 
@@ -73,8 +73,8 @@ Prints commands that would run for a given sequence, but does not run them.
 
 =back
 
-All other options passed to dh are passed on to each command it runs. This
-can be used to set an option like "-v" or "-X" or "-N", as well as for more
+All other options passed to B<dh> are passed on to each command it runs. This
+can be used to set an option like B<-v> or B<-X> or B<-N>, as well as for more
 specialised options.
 
 In the above options, I<cmd> can be a full name of a debhelper command, or
@@ -160,23 +160,23 @@ after a particular debhelper command is run.
 		dh_fixperms
 		chmod 4755 debian/foo/usr/bin/foo
 
-If your package is a python package, dh will use dh_pysupport by
-default. This is how to use dh_pycentral instead.
+If your package is a Python package, B<dh> will use B<dh_pysupport> by
+default. This is how to use B<dh_pycentral> instead.
 
 	#!/usr/bin/make -f
 	%:
 		dh $@ --with python-central
 
-If your package uses autotools and you want to freshen config.sub and
-config.guess with newer versions from the autotools-dev package
-at build time, you can use some commands provided in autotools-dev
+If your package uses autotools and you want to freshen F<config.sub> and
+F<config.guess> with newer versions from the B<autotools-dev> package
+at build time, you can use some commands provided in B<autotools-dev>
 that automate it, like this.
 
 	#!/usr/bin/make -f
 	%:
 		dh $@ --with autotools_dev
 
-Here is how to force use of perl's Module::Build build system,
+Here is how to force use of Perl's B<Module::Build> build system,
 which can be necessary if debhelper wrongly detects that the package
 uses MakeMaker.
 
@@ -184,14 +184,14 @@ uses MakeMaker.
 	%:
 		dh $@ --buildsystem=perl_build
 
-To patch your package using quilt, you can tell dh to use quilt's dh
+To patch your package using quilt, you can tell B<dh> to use quilt's B<dh>
 sequence addons like this:
 	
 	#!/usr/bin/make -f
 	%:
 		dh $@ --with quilt
 
-Here is an example of overriding where the dh_auto_* commands find
+Here is an example of overriding where the B<dh_auto_>I<*> commands find
 the package's source, for a package where the source is located in a
 subdirectory.
 
@@ -199,21 +199,21 @@ subdirectory.
 	%:
 		dh $@ --sourcedirectory=src
 
-And here is an example of how to tell the dh_auto_* commands to build
-in a subdirectory, which will be removed on clean.
+And here is an example of how to tell the B<dh_auto_>I<*> commands to build
+in a subdirectory, which will be removed on B<clean>.
 
 	#!/usr/bin/make -f
 	%:
 		dh $@ --builddirectory=build
 
 If your package can be built in parallel, you can support parallel building
-as follows. Then I<dpkg-buildpackage -j> will work.
+as follows. Then B<dpkg-buildpackage -j> will work.
 
 	#!/usr/bin/make -f
 	%:
 		dh $@ --parallel
 
-Here is a way to prevent dh from running several commands that you don't
+Here is a way to prevent B<dh> from running several commands that you don't
 want it to run, by defining empty override targets for each command.
 
 	#!/usr/bin/make -f
@@ -238,11 +238,11 @@ L<dh_listpackages(1)> to test what is being built. For example:
 	endif
 
 Finally, remember that you are not limited to using override targets in the
-rules file when using dh. You can also explicitly define any of the regular
+rules file when using B<dh>. You can also explicitly define any of the regular
 rules file targets when it makes sense to do so. A common reason to do this
-is if your package needs different build-arch and build-indep targets. For
+is if your package needs different B<build-arch> and B<build-indep> targets. For
 example, a package with a long document build process can put it in
-build-indep to avoid build daemons redundantly building the documentation.
+B<build-indep> to avoid build daemons redundantly building the documentation.
 
 	#!/usr/bin/make -f
 	%:
@@ -256,19 +256,19 @@ build-indep to avoid build daemons redundantly building the documentation.
 
 =head1 INTERNALS
 
-If you're curious about dh's internals, here's how it works under the hood.
+If you're curious about B<dh>'s internals, here's how it works under the hood.
 
 Each debhelper command will record when it's successfully run in
-debian/package.debhelper.log. (Which dh_clean deletes.) So dh can tell
+F<debian/package.debhelper.log>. (Which B<dh_clean> deletes.) So B<dh> can tell
 which commands have already been run, for which packages, and skip running
 those commands again.
 
-Each time dh is run, it examines the log, and finds the last logged command
+Each time B<dh> is run, it examines the log, and finds the last logged command
 that is in the specified sequence. It then continues with the next command
 in the sequence. The B<--until>, B<--before>, B<--after>, and B<--remaining>
 options can override this behavior.
 
-dh uses the DH_INTERNAL_OPTIONS environment variable to pass information
+B<dh> uses the B<DH_INTERNAL_OPTIONS> environment variable to pass information
 through to debhelper commands that are run inside override targets. The
 contents (and indeed, existence) of this environment variable, as the name
 might suggest, is subject to change at any time.
diff --git a/dh_auto_build b/dh_auto_build
index 250c7d9..dccd04a 100755
--- a/dh_auto_build
+++ b/dh_auto_build
@@ -15,27 +15,27 @@ B<dh_auto_build> [S<I<build system options>>] [S<I<debhelper options>>] [S<B<-->
 
 =head1 DESCRIPTION
 
-dh_auto_build is a debhelper program that tries to automatically build a
+B<dh_auto_build> is a debhelper program that tries to automatically build a
 package. It does so by running the appropriate command for the build system
-it detects the package uses. For example, if a Makefile is found, this is
-done by running make (or MAKE, if the environment variable is set). If
-there's a setup.py, or Build.PL, it is run to build the package.
+it detects the package uses. For example, if a F<Makefile> is found, this is
+done by running B<make> (or B<MAKE>, if the environment variable is set). If
+there's a F<setup.py>, or F<Build.PL>, it is run to build the package.
 
 This is intended to work for about 90% of packages. If it doesn't work,
-you're encouraged to skip using dh_auto_build at all, and just run the
+you're encouraged to skip using B<dh_auto_build> at all, and just run the
 build process manually.
 
 =head1 OPTIONS
 
-See L<debhelper(7)/BUILD SYSTEM OPTIONS> for a list of common build
+See L<debhelper(7)/B<BUILD SYSTEM OPTIONS>> for a list of common build
 system selection and control options.
 
 =over 4
 
 =item B<--> I<params>
 
-Pass "params" to the program that is run. These can be used to supplement
-or override any standard parameters that dh_auto_build passes.
+Pass I<params> to the program that is run. These can be used to supplement
+or override any standard parameters that B<dh_auto_build> passes.
 
 =back
 
diff --git a/dh_auto_clean b/dh_auto_clean
index 8603b11..e736c9a 100755
--- a/dh_auto_clean
+++ b/dh_auto_clean
@@ -15,28 +15,28 @@ B<dh_auto_clean> [S<I<build system options>>] [S<I<debhelper options>>] [S<B<-->
 
 =head1 DESCRIPTION
 
-dh_auto_clean is a debhelper program that tries to automatically clean up
+B<dh_auto_clean> is a debhelper program that tries to automatically clean up
 after a package build. It does so by running the appropriate command for
 the build system it detects the package uses. For example, if there's a
-Makefile and it contains a "distclean", "realclean", or "clean" target,
-then this is  done by running make (or MAKE, if the environment variable is
-set). If there is a setup.py or Build.PL, it is run to clean the package.
+F<Makefile> and it contains a B<distclean>, B<realclean>, or B<clean> target,
+then this is done by running B<make> (or B<MAKE>, if the environment variable is
+set). If there is a F<setup.py> or F<Build.PL>, it is run to clean the package.
 
 This is intended to work for about 90% of packages. If it doesn't work, or
 tries to use the wrong clean target, you're encouraged to skip using
-dh_auto_clean at all, and just run make clean manually.
+B<dh_auto_clean> at all, and just run B<make clean> manually.
 
 =head1 OPTIONS
 
-See L<debhelper(7)/BUILD SYSTEM OPTIONS> for a list of common build
+See L<debhelper(7)/B<BUILD SYSTEM OPTIONS>> for a list of common build
 system selection and control options.
 
 =over 4
 
 =item B<--> I<params>
 
-Pass "params" to the program that is run. These can be used to supplement
-or override the any standard parameters that dh_auto_clean passes.
+Pass I<params> to the program that is run. These can be used to supplement
+or override the any standard parameters that B<dh_auto_clean> passes.
 
 =back
 
diff --git a/dh_auto_configure b/dh_auto_configure
index 6b6b58f..daf5ed0 100755
--- a/dh_auto_configure
+++ b/dh_auto_configure
@@ -15,30 +15,30 @@ B<dh_auto_configure> [S<I<build system options>>] [S<I<debhelper options>>] [S<B
 
 =head1 DESCRIPTION
 
-dh_auto_configure is a debhelper program that tries to automatically
+B<dh_auto_configure> is a debhelper program that tries to automatically
 configure a package prior to building. It does so by running the
 appropriate command for the build system it detects the package uses.
-For example, it looks for and runs a ./configure script, Makefile.PL,
-Build.PL, or cmake. A standard set of parameters is determined and passed
+For example, it looks for and runs a F<./configure> script, F<Makefile.PL>,
+F<Build.PL>, or F<cmake>. A standard set of parameters is determined and passed
 to the program that is run. Some build systems, such as make, do not
-need a configure step; for these dh_auto_configure will exit without
+need a configure step; for these B<dh_auto_configure> will exit without
 doing anything.
 
 This is intended to work for about 90% of packages. If it doesn't work,
-you're encouraged to skip using dh_auto_configure at all, and just run
-./configure or its equivalent manually.
+you're encouraged to skip using B<dh_auto_configure> at all, and just run
+F<./configure> or its equivalent manually.
 
 =head1 OPTIONS
 
-See L<debhelper(7)/BUILD SYSTEM OPTIONS> for a list of common build
+See L<debhelper(7)/B<BUILD SYSTEM OPTIONS>> for a list of common build
 system selection and control options.
 
 =over 4
 
 =item B<--> I<params>
 
-Pass "params" to the program that is run, after the standard
-parameters that dh_auto_configure passes. This can be used to supplement
+Pass I<params> to the program that is run, after the standard
+parameters that B<dh_auto_configure> passes. This can be used to supplement
 or override those parameters. For example:
 
   dh_auto_configure -- --with-foo --enable-bar
diff --git a/dh_auto_install b/dh_auto_install
index a5d483b..ccb1143 100755
--- a/dh_auto_install
+++ b/dh_auto_install
@@ -18,31 +18,31 @@ B<dh_auto_install> [S<I<build system options>>] [S<I<debhelper options>>] [S<B<-
 
 =head1 DESCRIPTION
 
-dh_auto_install is a debhelper program that tries to automatically install
+B<dh_auto_install> is a debhelper program that tries to automatically install
 built files. It does so by running the appropriate command for the build
-system it detects the package uses. For example, if there's a Makefile and
-it contains a "install" target, then this is done by running make (or MAKE,
-if the environment variable is set). If there is a setup.py or Build.PL,
+system it detects the package uses. For example, if there's a F<Makefile> and
+it contains a B<install> target, then this is done by running B<make> (or B<MAKE>,
+if the environment variable is set). If there is a F<setup.py> or F<Build.PL>,
 it is used. Note that the Ant build system does not support installation,
-so dh_auto_install will not install files built using Ant.
+so B<dh_auto_install> will not install files built using Ant.
 
-Unless --destdir option is specified, the files are installed into
-debian/<package>/ if there is only one binary package. In the multiple binary
-package case, the files are instead installed into debian/tmp/, and should be
+Unless B<--destdir> option is specified, the files are installed into
+debian/I<package>/ if there is only one binary package. In the multiple binary
+package case, the files are instead installed into F<debian/tmp/>, and should be
 moved from there to the appropriate package build directory using
 L<dh_install(1)>.
 
-DESTDIR is used to tell make where to install the files. 
-If the Makefile was generated by MakeMaker from a Makefile.PL, it will
-automatically set PREFIX=/usr too, since such Makefiles need that.
+B<DESTDIR> is used to tell make where to install the files. 
+If the Makefile was generated by MakeMaker from a F<Makefile.PL>, it will
+automatically set B<PREFIX=/usr> too, since such Makefiles need that.
 
 This is intended to work for about 90% of packages. If it doesn't work, or
 tries to use the wrong install target, you're encouraged to skip using
-dh_auto_install at all, and just run make install manually.
+B<dh_auto_install> at all, and just run make install manually.
 
 =head1 OPTIONS
 
-See L<debhelper(7)/BUILD SYSTEM OPTIONS> for a list of common build
+See L<debhelper(7)/B<BUILD SYSTEM OPTIONS>> for a list of common build
 system selection and control options.
 
 =over 4
@@ -51,12 +51,12 @@ system selection and control options.
 
 Install files into the specified I<directory>. If this option is not specified,
 destination directory is determined automatically as described in the
-L</DESCRIPTION> section.
+L</B<DESCRIPTION>> section.
 
 =item B<--> I<params>
 
-Pass "params" to the program that is run. These can be used to supplement
-or override the any standard parameters that dh_auto_install passes.
+Pass I<params> to the program that is run. These can be used to supplement
+or override the any standard parameters that B<dh_auto_install> passes.
 
 =back
 
diff --git a/dh_auto_test b/dh_auto_test
index 6caf393..ab361cc 100755
--- a/dh_auto_test
+++ b/dh_auto_test
@@ -15,35 +15,35 @@ B<dh_auto_test> [S<I<build system options>>] [S<I<debhelper options>>] [S<B<-->
 
 =head1 DESCRIPTION
 
-dh_auto_test is a debhelper program that tries to automatically run a
+B<dh_auto_test> is a debhelper program that tries to automatically run a
 package's test suite. It does so by running the appropriate command for the
 build system it detects the package uses. For example, if there's a
-Makefile and it contains a "test" or "check" target, then this is  done by
-running make (or MAKE, if the environment variable is set). If the test
+Makefile and it contains a B<test> or B<check> target, then this is done by
+running B<make> (or B<MAKE>, if the environment variable is set). If the test
 suite fails, the command will exit nonzero. If there's no test suite, it
 will exit zero without doing anything.
 
 This is intended to work for about 90% of packages with a test suite. If it
-doesn't work, you're encouraged to skip using dh_auto_test at all, and
+doesn't work, you're encouraged to skip using B<dh_auto_test> at all, and
 just run the test suite manually.
 
 =head1 OPTIONS
 
-See L<debhelper(7)/BUILD SYSTEM OPTIONS> for a list of common build
+See L<debhelper(7)/B<BUILD SYSTEM OPTIONS>> for a list of common build
 system selection and control options.
 
 =over 4
 
 =item B<--> I<params>
 
-Pass "params" to the program that is run. These can be used to supplement
-or override the any standard parameters that dh_auto_test passes.
+Pass I<params> to the program that is run. These can be used to supplement
+or override the any standard parameters that B<dh_auto_test> passes.
 
 =back
 
 =head1 NOTES
 
-If the DEB_BUILD_OPTIONS environment variable contains "nocheck", no
+If the B<DEB_BUILD_OPTIONS> environment variable contains B<nocheck>, no
 tests will be performed.
 
 =cut
diff --git a/dh_bugfiles b/dh_bugfiles
index 2e90e43..4444f0f 100755
--- a/dh_bugfiles
+++ b/dh_bugfiles
@@ -15,7 +15,7 @@ B<dh_bugfiles> [B<-A>] [S<I<debhelper options>>]
 
 =head1 DESCRIPTION
 
-dh_bugfiles is a debhelper program that is responsible for installing
+B<dh_bugfiles> is a debhelper program that is responsible for installing
 bug reporting customization files (bug scripts and/or bug control files
 and/or presubj files) into package build directories.
 
@@ -53,8 +53,8 @@ F<usr/share/bug/package/presubj> in the package build directory.
 
 =item B<-A>, B<--all>
 
-Install debian/bug-* files to ALL packages acted on when respective
-debian/package.bug-* files do not exist. Normally, debian/bug-* will
+Install F<debian/bug-*> files to ALL packages acted on when respective
+F<debian/package.bug-*> files do not exist. Normally, F<debian/bug-*> will
 be installed to the first package only.
 
 =back
diff --git a/dh_builddeb b/dh_builddeb
index 3477f25..b15c943 100755
--- a/dh_builddeb
+++ b/dh_builddeb
@@ -2,7 +2,7 @@
 
 =head1 NAME
 
-dh_builddeb - build debian binary packages
+dh_builddeb - build Debian binary packages
 
 =cut
 
@@ -15,7 +15,7 @@ B<dh_builddeb> [S<I<debhelper options>>] [B<--destdir=>I<directory>] [B<--filena
 
 =head1 DESCRIPTION
 
-dh_builddeb simply calls L<dpkg-deb(1)> to build a debian package or
+B<dh_builddeb> simply calls L<dpkg-deb(1)> to build a Debian package or
 packages.
 
 =head1 OPTIONS
@@ -24,8 +24,8 @@ packages.
 
 =item B<--destdir=>I<directory>
 
-Use this if you want the generated .deb files to be put in a directory
-other than the default of ".."
+Use this if you want the generated F<.deb> files to be put in a directory
+other than the default of "F<..>".
 
 =item B<--filename=>I<name>
 
diff --git a/dh_clean b/dh_clean
index 2fca781..dc29e36 100755
--- a/dh_clean
+++ b/dh_clean
@@ -11,28 +11,28 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_clean> [S<I<debhelper options>>] [B<-k>] [B<-d>] [B<-X>I<item>] [S<I<file ...>>]
+B<dh_clean> [S<I<debhelper options>>] [B<-k>] [B<-d>] [B<-X>I<item>] [S<I<file> ...>]
 
 =head1 DESCRIPTION
 
-dh_clean is a debhelper program that is responsible for cleaning up after a
+B<dh_clean> is a debhelper program that is responsible for cleaning up after a
 package is built. It removes the package build directories, and removes some
-other files including debian/files, and any detritus left behind by other
+other files including F<debian/files>, and any detritus left behind by other
 debhelper commands. It also removes common files that should not appear in a
-debian diff:
+Debian diff:
   #*# *~ DEADJOE *.orig *.rej *.SUMS TAGS .deps/* *.P *-stamp
 
 It does not run "make clean" to clean up after the build process. Use
 L<dh_auto_clean(1)> to do things like that.
 
-dh_clean (or "dh clean") should be the last debhelper command run in the
-clean target in debian/rules.
+B<dh_clean> (or "B<dh clean>") should be the last debhelper command run in the
+B<clean> target in F<debian/rules>.
 
 =head1 FILES
 
 =over 4
 
-=item debian/clean
+=item F<debian/clean>
 
 Can list other files to be removed.
 
@@ -53,13 +53,13 @@ at all.
 
 =item B<-X>I<item> B<--exclude=>I<item>
 
-Exclude files that contain "item" anywhere in their filename from being
+Exclude files that contain I<item> anywhere in their filename from being
 deleted, even if they would normally be deleted. You may use this option
 multiple times to build up a list of things to exclude.
 
-=item I<file ...>
+=item I<file> ...
 
-Delete these files too.
+Delete these I<file>s too.
 
 =back
 
diff --git a/dh_compress b/dh_compress
index 8367b27..14dfdb3 100755
--- a/dh_compress
+++ b/dh_compress
@@ -12,21 +12,21 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_compress> [S<I<debhelper options>>] [B<-X>I<item>] [B<-A>] [S<I<file ...>>]
+B<dh_compress> [S<I<debhelper options>>] [B<-X>I<item>] [B<-A>] [S<I<file> ...>]
 
 =head1 DESCRIPTION
 
-dh_compress is a debhelper program that is responsible for compressing
+B<dh_compress> is a debhelper program that is responsible for compressing
 the files in package build directories, and makes sure that any symlinks
 that pointed to the files before they were compressed are updated to point
 to the new files.
 
-By default, dh_compress compresses files that debian policy mandates should
-be compressed, namely all files in usr/share/info, usr/share/man,
-files in usr/share/doc that are larger than 4k in size,
-(except the copyright file, .html and .css files, image files, and files
+By default, B<dh_compress> compresses files that Debian policy mandates should
+be compressed, namely all files in F<usr/share/info>, F<usr/share/man>,
+files in F<usr/share/doc> that are larger than 4k in size,
+(except the F<copyright> file, F<.html> and F<.css> files, image files, and files
 that appear to be already compressed based on their extensions), and all
-changelog files. Plus PCF fonts underneath usr/share/fonts/X11/
+F<changelog> files. Plus PCF fonts underneath F<usr/share/fonts/X11/>
 
 =head1 FILES
 
@@ -39,8 +39,8 @@ These files are deprecated.
 If this file exists, the default files are not compressed. Instead, the
 file is ran as a shell script, and all filenames that the shell script
 outputs will be compressed. The shell script will be run from inside the
-package build directory. Note though that using -X is a much better idea in
-general; you should only use a debian/package.compress file if you really
+package build directory. Note though that using B<-X> is a much better idea in
+general; you should only use a F<debian/package.compress> file if you really
 need to.
 
 =back
@@ -51,8 +51,8 @@ need to.
 
 =item B<-X>I<item>, B<--exclude=>I<item>
 
-Exclude files that contain "item" anywhere in their filename from being
-compressed. For example, -X.tiff will exclude tiff files from compression.
+Exclude files that contain F<item> anywhere in their filename from being
+compressed. For example, B<-X.tiff> will exclude TIFF files from compression.
 You may use this option multiple times to build up a list of things to
 exclude.
 
@@ -61,7 +61,7 @@ exclude.
 Compress all files specified by command line parameters in ALL packages
 acted on.
 
-=item I<file ...>
+=item I<file> ...
 
 Add these files to the list of files to compress.
 
diff --git a/dh_desktop b/dh_desktop
index f0488c5..075597f 100755
--- a/dh_desktop
+++ b/dh_desktop
@@ -15,11 +15,11 @@ B<dh_desktop> [S<I<debhelper options>>]
 
 =head1 DESCRIPTION
 
-dh_desktop was a debhelper program that registers .desktop files.
+B<dh_desktop> was a debhelper program that registers F<.desktop> files.
 However, it no longer does anything, and is now deprecated.
 
-If a package ships desktop files, they just need to be installed in the
-correct location (/usr/share/applications) and they will be registered by
+If a package ships F<desktop> files, they just need to be installed in the
+correct location (F</usr/share/applications>) and they will be registered by
 the appropriate tools for the corresponding desktop environments.
 
 =cut
diff --git a/dh_fixperms b/dh_fixperms
index 65beac6..3730b49 100755
--- a/dh_fixperms
+++ b/dh_fixperms
@@ -15,17 +15,17 @@ B<dh_fixperms> [S<I<debhelper options>>] [B<-X>I<item>]
 
 =head1 DESCRIPTION
 
-dh_fixperms is a debhelper program that is responsible for setting the
+B<dh_fixperms> is a debhelper program that is responsible for setting the
 permissions of files and directories in package build directories to a
 sane state -- a state that complies with Debian policy.
 
-dh_fixperms makes all files in usr/share/doc in the package build directory
-(excluding files in the examples/ directory) be mode 644. It also changes
+B<dh_fixperms> makes all files in F<usr/share/doc> in the package build directory
+(excluding files in the F<examples/> directory) be mode 644. It also changes
 the permissions of all man pages to mode 644. It makes all files be owned
 by root, and it removes group and other write permission from all files. It
-removes execute permissions from any libraries, headers, perl modules, or
-desktop files that have it set. It makes all files in the standard bin and
-sbin directories, usr/games/ and etc/init.d executable (since v4). Finally,
+removes execute permissions from any libraries, headers, Perl modules, or
+desktop files that have it set. It makes all files in the standard F<bin> and
+F<sbin> directories, F<usr/games/> and F<etc/init.d> executable (since v4). Finally,
 it removes the setuid and setgid bits from all files in the package.
 
 =head1 OPTIONS
@@ -34,7 +34,7 @@ it removes the setuid and setgid bits from all files in the package.
 
 =item B<-X>I<item>, B<--exclude> I<item>
 
-Exclude files that contain "item" anywhere in their filename from having
+Exclude files that contain I<item> anywhere in their filename from having
 their permissions changed. You may use this option multiple times to build
 up a list of things to exclude.
 
diff --git a/dh_gconf b/dh_gconf
index 021a592..1f3070e 100755
--- a/dh_gconf
+++ b/dh_gconf
@@ -11,14 +11,14 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_gconf> [S<I<debhelper options>>] [B<--priority=<number>>]
+B<dh_gconf> [S<I<debhelper options>>] [B<--priority=>I<priority>]
 
 =head1 DESCRIPTION
 
-dh_gconf is a debhelper program that is responsible for installing GConf
+B<dh_gconf> is a debhelper program that is responsible for installing GConf
 defaults files and registering GConf schemas.
 
-An appropriate dependency on gconf2 will be generated in ${misc:Depends}.
+An appropriate dependency on gconf2 will be generated in B<${misc:Depends}>.
 
 =head1 FILES
 
@@ -26,13 +26,13 @@ An appropriate dependency on gconf2 will be generated in ${misc:Depends}.
 
 =item debian/I<package>.gconf-defaults
 
-Installed into usr/share/gconf/defaults/10_package in the package build
-directory, with "I<package>" replaced by the package name.
+Installed into F<usr/share/gconf/defaults/10_package> in the package build
+directory, with I<package> replaced by the package name.
 
 =item debian/I<package>.gconf-mandatory
 
-Installed into usr/share/gconf/mandatory/10_package in the package build
-directory, with "I<package>" replaced by the package name.
+Installed into F<usr/share/gconf/mandatory/10_package> in the package build
+directory, with I<package> replaced by the package name.
 
 =back
 
@@ -43,9 +43,9 @@ directory, with "I<package>" replaced by the package name.
 =item B<--priority> I<priority>
 
 Use I<priority> (which should be a 2-digit number) as the defaults
-priority instead of 10. Higher values than ten can be used by 
-derived distributions (20), CDD distributions (50), or site-specific
-packages (90).
+priority instead of B<10>. Higher values than ten can be used by 
+derived distributions (B<20>), CDD distributions (B<50>), or site-specific
+packages (B<90>).
 
 =back
 
diff --git a/dh_gencontrol b/dh_gencontrol
index 52e944c..32b8563 100755
--- a/dh_gencontrol
+++ b/dh_gencontrol
@@ -15,8 +15,8 @@ B<dh_gencontrol> [S<I<debhelper options>>] [S<B<--> I<params>>]
 
 =head1 DESCRIPTION
 
-dh_gencontrol is a debhelper program that is responsible for generating
-control files, and installing them into the DEBIAN directory with the
+B<dh_gencontrol> is a debhelper program that is responsible for generating
+control files, and installing them into the I<DEBIAN> directory with the
 proper permissions.
 
 This program is merely a wrapper around L<dpkg-gencontrol(1)>, which calls
@@ -29,9 +29,9 @@ useful flags.
 
 =item B<--> I<params>
 
-Pass "params" to L<dpkg-gencontrol(1)>.
+Pass I<params> to L<dpkg-gencontrol(1)>.
 
-=item B<-u>I<params>, B<--dpkg-gencontrol-params>=I<params>
+=item B<-u>I<params>, B<--dpkg-gencontrol-params=>I<params>
 
 This is another way to pass I<params> to L<dpkg-gencontrol(1)>.
 It is deprecated; use B<--> instead.
diff --git a/dh_icons b/dh_icons
index 4afbf7c..3ac091a 100755
--- a/dh_icons
+++ b/dh_icons
@@ -16,11 +16,11 @@ B<dh_icons> [S<I<debhelper options>>] [B<-n>]
 
 =head1 DESCRIPTION
 
-dh_icons is a debhelper program that updates Freedesktop icon caches
-when needed, using the update-icon-caches program provided by GTK+2.12.
+B<dh_icons> is a debhelper program that updates Freedesktop icon caches
+when needed, using the B<update-icon-caches> program provided by GTK+2.12.
 Currently this program does not handle installation of the files, though it
 may do so at a later date. It takes care of adding maintainer script
-fragments to call F<update-icon-caches>.
+fragments to call B<update-icon-caches>.
 
 =head1 OPTIONS
 
diff --git a/dh_install b/dh_install
index c35c892..1748fc2 100755
--- a/dh_install
+++ b/dh_install
@@ -12,28 +12,28 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_install> [B<-X>I<item>] [B<--autodest>] [B<--sourcedir=>I<dir>] [S<I<debhelper options>>] [S<I<file [...] dest>>]
+B<dh_install> [B<-X>I<item>] [B<--autodest>] [B<--sourcedir=>I<dir>] [S<I<debhelper options>>] [S<I<file> ... I<dest>>]
 
 =head1 DESCRIPTION
 
-dh_install is a debhelper program that handles installing files into package
-build directories. There are many dh_install* commands that handle installing
+B<dh_install> is a debhelper program that handles installing files into package
+build directories. There are many B<dh_install>I<*> commands that handle installing
 specific types of files such as documentation, examples, man pages, and so on,
 and they should be used when possible as they often have extra intelligence for
-those particular tasks. dh_install, then, is useful for installing everything
+those particular tasks. B<dh_install>, then, is useful for installing everything
 else, for which no particular intelligence is needed. It is a replacement for
-the old dh_movefiles command.
+the old B<dh_movefiles> command.
 
 This program may be used in one of two ways. If you just have a file or two
-that the upstream Makefile does not install for you, you can run dh_install
+that the upstream Makefile does not install for you, you can run B<dh_install>
 on them to move them into place. On the other hand, maybe you have a large
 package that builds multiple binary packages. You can use the upstream
-Makefile to install it all into debian/tmp, and then use dh_install to copy
+F<Makefile> to install it all into F<debian/tmp>, and then use B<dh_install> to copy
 directories and files from there into the proper package build directories.
 
-From debhelper compatibility level 7 on, dh_install will fall back to
-looking in debian/tmp for files, if it doesn't find them in the current
-directory (or whereever you've told it to look using --sourcedir).
+From debhelper compatibility level 7 on, B<dh_install> will fall back to
+looking in F<debian/tmp> for files, if it doesn't find them in the current
+directory (or whereever you've told it to look using B<--sourcedir>).
 
 =head1 FILES
 
@@ -57,7 +57,7 @@ the files to install (in v3 mode and above).
 
 =item B<--list-missing>
 
-This option makes dh_install keep track of the files it installs, and then at
+This option makes B<dh_install> keep track of the files it installs, and then at
 the end, compare that list with the files in the source directory. If any of
 the files (and symlinks) in the source directory were not installed to
 somewhere, it will warn on stderr about that.
@@ -65,50 +65,51 @@ somewhere, it will warn on stderr about that.
 This may be useful if you have a large package and want to make sure that
 you don't miss installing newly added files in new upstream releases.
 
-Note that files that are excluded from being moved via the -X option are not
+Note that files that are excluded from being moved via the B<-X> option are not
 warned about.
 
 =item B<--fail-missing>
 
-This option is like --list-missing, except if a file was missed, it will
+This option is like B<--list-missing>, except if a file was missed, it will
 not only list the missing files, but also fail with a nonzero exit code. 
 
-=item B<-Xitem>, B<--exclude=item>
+=item B<-X>I<item>, B<--exclude=>I<item>
 
-Exclude files that contain "item" anywhere in their filename from
+Exclude files that contain I<item> anywhere in their filename from
 being installed.
 
-=item B<--sourcedir=dir>
+=item B<--sourcedir=>I<dir>
 
 Look in the specified directory for files to be installed.
 
-Note that this is not the same as the --sourcedirectory option used
-by the dh_auto_* commands. You rarely need to use this option, since
-dh_install automatically looks for files in debian/tmp in debhelper
+Note that this is not the same as the B<--sourcedirectory> option used
+by the B<dh_auto_>I<*> commands. You rarely need to use this option, since
+B<dh_install> automatically looks for files in F<debian/tmp> in debhelper
+
 compatibility level 7 and above.
 
 =item B<--autodest>
 
 Guess as the destination directory to install things to. If this is
 specified, you should not list destination directories in
-debian/package.install files or on the command line. Instead, dh_install
+F<debian/package.install> files or on the command line. Instead, B<dh_install>
 will guess as follows:
 
-Strip off debian/tmp (or the sourcedir if one is given) from the front of
+Strip off F<debian/tmp> (or the sourcedir if one is given) from the front of
 the filename, if it is present, and install into the dirname of the
-filename. So if the filename is debian/tmp/usr/bin, then that directory
-will be copied to debian/package/usr/. If the filename is
-debian/tmp/etc/passwd, it will be copied to debian/package/etc/.
+filename. So if the filename is F<debian/tmp/usr/bin>, then that directory
+will be copied to F<debian/package/usr/>. If the filename is
+F<debian/tmp/etc/passwd>, it will be copied to F<debian/package/etc/>.
 
 Note that if you list exactly one filename or wildcard-pattern on a line by
 itself in a
-debian/package.install file, with no explicit destination, then dh_install
+F<debian/package.install> file, with no explicit destination, then B<dh_install>
 will automatically guess the destination even if this flag is not set.
 
-=item I<file [...] dest>
+=item I<file> ... I<dest>
 
 Lists files (or directories) to install and where to install them to.
-The files will be installed into the first package dh_install acts on.
+The files will be installed into the first package F<dh_install> acts on.
 
 =back
 
@@ -251,20 +252,20 @@ if ($dh{LIST_MISSING} || $dh{FAIL_MISSING}) {
 
 =head1 EXAMPLE
 
-Suppose your package's upstream Makefile installs a binary, a man page, and
-a library into appropriate subdirectories of debian/tmp. You want to put
+Suppose your package's upstream F<Makefile> installs a binary, a man page, and
+a library into appropriate subdirectories of F<debian/tmp>. You want to put
 the library into package libfoo, and the rest into package foo. Your rules
-file will run "dh_install --sourcedir=debian/tmp". Make debian/foo.install
+file will run "B<dh_install --sourcedir=debian/tmp>". Make F<debian/foo.install>
 contain:
 
   usr/bin
   usr/share/man/man1
 
-While debian/libfoo.install contains:
+While F<debian/libfoo.install> contains:
 
   usr/lib/libfoo*.so.*
 
-If you want a libfoo-dev package too, debian/libfoo-dev.install might contain:
+If you want a libfoo-dev package too, F<debian/libfoo-dev.install> might contain:
 
   usr/include
   usr/lib/libfoo*.so
@@ -272,7 +273,7 @@ If you want a libfoo-dev package too, debian/libfoo-dev.install might contain:
 
 =head1 LIMITATIONS
 
-dh_install cannot rename files or directories, it can only install them
+B<dh_install> cannot rename files or directories, it can only install them
 with the names they already have into wherever you want in the package
 build tree.
   
diff --git a/dh_installcatalogs b/dh_installcatalogs
index f991a7c..b33f897 100755
--- a/dh_installcatalogs
+++ b/dh_installcatalogs
@@ -17,7 +17,7 @@ B<dh_installcatalogs> [S<I<debhelper options>>] [B<-n>]
 
 =head1 DESCRIPTION
 
-dh_installcatalogs is a debhelper program that installs and
+B<dh_installcatalogs> is a debhelper program that installs and
 registers SGML catalogs. It complies with the Debian XML/SGML policy.
 
 Catalogs will be registered in a supercatalog, in
@@ -26,10 +26,10 @@ F</etc/sgml/I<package>.cat>.
 This command automatically adds maintainer script snippets for
 registering and unregistering the catalogs and supercatalogs (unless
 B<-n> is used). These snippets are inserted into the maintainer scripts
-by dh_installdeb; see L<dh_installdeb(1)> for an explanation of
+by B<dh_installdeb>; see L<dh_installdeb(1)> for an explanation of
 Debhelper maintainer script snippets.
 
-A dependency on B<sgml-base> will be added to C<${misc:Depends}>, so be
+A dependency on B<sgml-base> will be added to B<${misc:Depends}>, so be
 sure your package uses that variable in F<debian/control>.
 
 =head1 FILES
@@ -38,10 +38,10 @@ sure your package uses that variable in F<debian/control>.
 
 =item debian/I<package>.sgmlcatalogs
 
-Lists the catalogs to be installed per package.  Each line in that file
-should be of the form C<source dest>, where C<source> indicates where the
-catalog resides in the source tree, and C<dest> indicates the destination
-location for the catalog under the package build area.  C<dest> should
+Lists the catalogs to be installed per package. Each line in that file
+should be of the form C<I<source> I<dest>>, where I<source> indicates where the
+catalog resides in the source tree, and I<dest> indicates the destination
+location for the catalog under the package build area. I<dest> should
 start with F</usr/share/sgml/>.
 
 =back
diff --git a/dh_installchangelogs b/dh_installchangelogs
index a6dcc68..4620473 100755
--- a/dh_installchangelogs
+++ b/dh_installchangelogs
@@ -15,27 +15,27 @@ B<dh_installchangelogs> [S<I<debhelper options>>] [B<-k>] [B<-X>I<item>] [I<upst
 
 =head1 DESCRIPTION
 
-dh_installchangelogs is a debhelper program that is responsible for
+B<dh_installchangelogs> is a debhelper program that is responsible for
 installing changelogs into package build directories.
 
-An upstream changelog file may be specified as an option. If none is
+An upstream F<changelog> file may be specified as an option. If none is
 specified, it looks for files with names that seem likely to be changelogs.
 (In compatibility level 7 and above.)
 
-If there is an upstream changelog file, it will be be installed as
-usr/share/doc/package/changelog in the package build directory. If the
-changelog is a html file (determined by file extension), it will be
-installed as usr/share/doc/package/changelog.html instead, and will be
-converted to plain text with html2text to generate
-usr/share/doc/package/changelog.
+If there is an upstream F<changelog> file, it will be be installed as
+F<usr/share/doc/package/changelog> in the package build directory. If the
+changelog is a F<html> file (determined by file extension), it will be
+installed as F<usr/share/doc/package/changelog.html> instead, and will be
+converted to plain text with B<html2text> to generate
+F<usr/share/doc/package/changelog>.
 
 =head1 FILES
 
 =over 4
 
-=item debian/changelog
+=item F<debian/changelog>
 
-=item debian/NEWS
+=item F<debian/NEWS>
 
 =item debian/I<package>.changelog
 
@@ -45,11 +45,11 @@ Automatically installed into usr/share/doc/I<package>/
 in the package build directory.
 
 Use the package specific name if I<package> needs a different
-NEWS or changelog file.
+F<NEWS> or F<changelog> file.
 
-The changelog file is installed with a name of changelog
-for native packages, and changelog.Debian for non-native packages.
-The NEWS file is always installed with a name of NEWS.Debian.
+The F<changelog> file is installed with a name of changelog
+for native packages, and F<changelog.Debian> for non-native packages.
+The F<NEWS> file is always installed with a name of F<NEWS.Debian>.
 
 =back
 
@@ -60,14 +60,14 @@ The NEWS file is always installed with a name of NEWS.Debian.
 =item B<-k>, B<--keep>
 
 Keep the original name of the upstream changelog. This will be accomplished
-by installing the upstream changelog as "changelog", and making a symlink from
-that to the original name of the changelog file. This can be useful if the
+by installing the upstream changelog as F<changelog>, and making a symlink from
+that to the original name of the F<changelog> file. This can be useful if the
 upstream changelog has an unusual name, or if other documentation in the
-package refers to the changelog file.
+package refers to the F<changelog> file.
 
-=item B<-Xitem>, B<--exclude=item>
+=item B<-X>I<item>, B<--exclude=>I<item>
 
-Exclude upstream changelog files that contain "item" anywhere in their
+Exclude upstream F<changelog> files that contain I<item> anywhere in their
 filename from being installed.
 
 =item I<upstream>
diff --git a/dh_installcron b/dh_installcron
index 52248e6..694e288 100755
--- a/dh_installcron
+++ b/dh_installcron
@@ -15,7 +15,7 @@ B<dh_installcron> [S<B<debhelper options>>] [B<--name=>I<name>]
 
 =head1 DESCRIPTION
 
-dh_installcron is a debhelper program that is responsible for installing
+B<dh_installcron> is a debhelper program that is responsible for installing
 cron scripts.
 
 =head1 FILES
@@ -32,7 +32,7 @@ cron scripts.
 
 =item debian/I<package>.cron.d
 
-Installed into the appropriate etc/cron.*/ directory in the package
+Installed into the appropriate F<etc/cron.*/> directory in the package
 build directory.
 
 =back
@@ -43,8 +43,8 @@ build directory.
 
 =item B<--name=>I<name>
 
-Look for files named debian/package.name.cron.* and install them as
-etc/cron.*/name, instead of using the usual files and installing them
+Look for files named F<debian/package.name.cron.*> and install them as
+F<etc/cron.*/name>, instead of using the usual files and installing them
 as the package name.
 
 =back
diff --git a/dh_installdeb b/dh_installdeb
index 35c9016..58057b3 100755
--- a/dh_installdeb
+++ b/dh_installdeb
@@ -15,8 +15,8 @@ B<dh_installdeb> [S<I<debhelper options>>]
 
 =head1 DESCRIPTION
 
-dh_installdeb is a debhelper program that is responsible for installing
-files into the DEBIAN directories in package build directories with the
+B<dh_installdeb> is a debhelper program that is responsible for installing
+files into the F<DEBIAN> directories in package build directories with the
 correct permissions.
 
 =head1 FILES
@@ -31,7 +31,7 @@ correct permissions.
 
 =item I<package>.prerm
 
-These maintainer scripts are installed into the DEBIAN directory.
+These maintainer scripts are installed into the F<DEBIAN> directory.
 
 Inside the scripts, the token B<#DEBHELPER#> is replaced with
 shell script snippets generated by other debhelper commands.
@@ -40,13 +40,13 @@ shell script snippets generated by other debhelper commands.
 
 =item I<package>.shlibs
 
-These control files are installed into the DEBIAN directory.
+These control files are installed into the F<DEBIAN> directory.
 
 =item I<package>.conffiles
 
-This control file will be installed into the DEBIAN directory.
+This control file will be installed into the F<DEBIAN> directory.
 
-In v3 compatibility mode and higher, all files in the etc/ directory in a
+In v3 compatibility mode and higher, all files in the F<etc/> directory in a
 package will automatically be flagged as conffiles by this program, so
 there is no need to list them manually here.
 
diff --git a/dh_installdebconf b/dh_installdebconf
index 3e51f8e..5645884 100755
--- a/dh_installdebconf
+++ b/dh_installdebconf
@@ -15,20 +15,20 @@ B<dh_installdebconf> [S<I<debhelper options>>] [B<-n>] [S<B<--> I<params>>]
 
 =head1 DESCRIPTION
 
-dh_installdebconf is a debhelper program that is responsible for installing
+B<dh_installdebconf> is a debhelper program that is responsible for installing
 files used by debconf into package build directories.
 
-It also automatically generates the postrm commands needed to interface
+It also automatically generates the F<postrm> commands needed to interface
 with debconf. The commands are added to the maintainer scripts by
-dh_installdeb. See L<dh_installdeb(1)> for an explanation of how that
+B<dh_installdeb>. See L<dh_installdeb(1)> for an explanation of how that
 works.
 
 Note that if you use debconf, your package probably needs to depend on it
-(it will be added to ${misc:Depends} by this program).
+(it will be added to B<${misc:Depends}> by this program).
 
-Note that for your config script to be called by dpkg, your postinst
-needs to source debconf's confmodule. dh_installdebconf does not
-install this statement into the postinst automatically as it it too
+Note that for your config script to be called by B<dpkg>, your F<postinst>
+needs to source debconf's confmodule. B<dh_installdebconf> does not
+install this statement into the F<postinst> automatically as it it too
 hard to do it right.
 
 =head1 FILES
@@ -37,7 +37,7 @@ hard to do it right.
 
 =item debian/I<package>.config
 
-This is the debconf config script, and is installed into the DEBIAN
+This is the debconf F<config> script, and is installed into the F<DEBIAN>
 directory in the package build directory.
 
 Inside the script, the token B<#DEBHELPER#> is replaced with
@@ -45,16 +45,16 @@ shell script snippets generated by other debhelper commands.
 
 =item debian/I<package>.templates
 
-This is the debconf templates file, and is installed into the DEBIAN
+This is the debconf F<templates> file, and is installed into the F<DEBIAN>
 directory in the package build directory.
 
-=item debian/po/
+=item F<debian/po/>
 
 If this directory is present, this program will automatically use
 L<po2debconf(1)> to generate merged templates
 files that include the translations from there.
 
-For this to work, your package should build-depend on po-debconf.
+For this to work, your package should build-depend on F<po-debconf>.
 
 =back
 
@@ -64,11 +64,11 @@ For this to work, your package should build-depend on po-debconf.
 
 =item B<-n>, B<--noscripts>
 
-Do not modify postrm script.
+Do not modify F<postrm> script.
 
 =item B<--> I<params>
 
-Pass the params to po2debconf.
+Pass the params to B<po2debconf>.
 
 =back
 
diff --git a/dh_installdirs b/dh_installdirs
index f48989a..b0572ca 100755
--- a/dh_installdirs
+++ b/dh_installdirs
@@ -11,11 +11,11 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_installdirs> [S<I<debhelper options>>] [B<-A>] [S<I<dir ...>>]
+B<dh_installdirs> [S<I<debhelper options>>] [B<-A>] [S<I<dir> ...>]
 
 =head1 DESCRIPTION
 
-dh_installdirs is a debhelper program that is responsible for creating
+B<dh_installdirs> is a debhelper program that is responsible for creating
 subdirectories in package build directories.
 
 =head1 FILES
@@ -37,10 +37,10 @@ Lists directories to be created in I<package>.
 Create any directories specified by command line parameters in ALL packages
 acted on, not just the first.
 
-=item I<dir ...>
+=item I<dir> ...
 
 Create these directories in the package build directory of the first
-package acted on. (Or in all packages if -A is specified.)
+package acted on. (Or in all packages if B<-A> is specified.)
 
 =back
 
diff --git a/dh_installdocs b/dh_installdocs
index 640848f..581d635 100755
--- a/dh_installdocs
+++ b/dh_installdocs
@@ -11,12 +11,12 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_installdocs> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<file ...>>]
+B<dh_installdocs> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<file> ...>]
 
 =head1 DESCRIPTION
 
-dh_installdocs is a debhelper program that is responsible for installing
-documentation into usr/share/doc/package in package build directories.
+B<dh_installdocs> is a debhelper program that is responsible for installing
+documentation into F<usr/share/doc/package> in package build directories.
 
 =head1 FILES
 
@@ -26,11 +26,11 @@ documentation into usr/share/doc/package in package build directories.
 
 List documentation files to be installed into I<package>.
 
-=item debian/copyright
+=item F<debian/copyright>
 
-=item debian/README.Debian
+=item F<debian/README.Debian>
 
-=item debian/TODO
+=item F<debian/TODO>
 
 =item debian/I<package>.copyright
 
@@ -41,13 +41,13 @@ List documentation files to be installed into I<package>.
 Each of these files is automatically installed if present. Use the package
 specific name if I<package> needs a different version of the file.
 
-Note that debian/README.debian is also installed as README.Debian,
-and debian/TODO will be installed as TODO.Debian in non-native packages.
+Note that F<debian/README.debian> is also installed as F<README.Debian>,
+and F<debian/TODO> will be installed as F<TODO.Debian> in non-native packages.
 
 =item debian/I<package>.doc-base
 
 Installed as doc-base control files. Note that the doc-id will be
-determined from the "Document:" entry in the doc-base control file in
+determined from the B<Document:> entry in the doc-base control file in
 question.
 
 =item debian/I<package>.doc-base.*
@@ -66,9 +66,9 @@ doc-base files, and can name them like this.
 Install all files specified by command line parameters in ALL packages
 acted on.
 
-=item B<-Xitem>, B<--exclude=item>
+=item B<-X>I<item>, B<--exclude=>I<item>
 
-Exclude files that contain "item" anywhere in their filename from
+Exclude files that contain I<item> anywhere in their filename from
 being installed. Note that this includes doc-base files.
 
 =item B<--link-doc=>I<package>
@@ -82,14 +82,14 @@ be a binary package that comes from the same source package.
 debhelper will try to avoid installing files into linked documentation
 directories that would cause conflicts with the linked package. The B<-A>
 option will have no effect on packages with linked documentation
-directories, and copyright, changelog, README.Debian, and TODO files will
+directories, and F<copyright>, F<changelog>, F<README.Debian>, and F<TODO> files will
 not be installed.
 
 (An older method to accomplish the same thing, which is still supported,
 is to make the documentation directory of a package be a dangling symlink,
-before calling dh_installdocs.)
+before calling B<dh_installdocs>.)
 
-=item I<file ...>
+=item I<file> ...
 
 Install these files as documentation into the first package acted on. (Or
 in all packages if B<-A> is specified).
@@ -98,7 +98,7 @@ in all packages if B<-A> is specified).
 
 =head1 EXAMPLES
 
-This is an example of a debian/package.docs file:
+This is an example of a F<debian/package.docs> file:
 
   README
   TODO
@@ -109,8 +109,8 @@ This is an example of a debian/package.docs file:
 
 =head1 NOTES
 
-Note that dh_installdocs will happily copy entire directory hierarchies if
-you ask it to (similar to cp -a). If it is asked to install a
+Note that B<dh_installdocs> will happily copy entire directory hierarchies if
+you ask it to (similar to B<cp -a>). If it is asked to install a
 directory, it will install the complete contents of the directory.
 
 Note that this command is not idempotent. L<dh_prep(1)> should be called
diff --git a/dh_installemacsen b/dh_installemacsen
index 08dd97a..ee64212 100755
--- a/dh_installemacsen
+++ b/dh_installemacsen
@@ -2,7 +2,7 @@
 
 =head1 NAME
 
-dh_installemacsen - register an emacs add on package
+dh_installemacsen - register an Emacs add on package
 
 =cut
 
@@ -15,13 +15,13 @@ B<dh_installemacsen> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] [B<-
 
 =head1 DESCRIPTION
 
-dh_installemacsen is a debhelper program that is responsible for installing
-files used by the debian emacsen-common package into package build
+B<dh_installemacsen> is a debhelper program that is responsible for installing
+files used by the Debian B<emacsen-common> package into package build
 directories.
 
-It also automatically generates the postinst and prerm commands needed to
-register a package as an emacs add on package. The commands are added to
-the maintainer scripts by dh_installdeb. See L<dh_installdeb(1)>
+It also automatically generates the F<postinst> and F<prerm> commands needed to
+register a package as an Emacs add on package. The commands are added to
+the maintainer scripts by B<dh_installdeb>. See L<dh_installdeb(1)>
 for an explanation of how this works.
 
 =head1 FILES
@@ -30,18 +30,18 @@ for an explanation of how this works.
 
 =item debian/I<package>.emacsen-install
 
-Installed into usr/lib/emacsen-common/packages/install/package in the
+Installed into F<usr/lib/emacsen-common/packages/install/package> in the
 package build directory.
 
 =item debian/I<package>.emacsen-remove
 
-Installed into usr/lib/emacsen-common/packages/remove/package in the
+Installed into F<usr/lib/emacsen-common/packages/remove/package> in the
 package build directory.
 
 =item debian/I<package>.emacsen-startup
 
 Installed into etc/emacs/site-start.d/50I<package>.el in the package
-build directory. Use --priority to use a different priority than 50.
+build directory. Use B<--priority> to use a different priority than 50.
 
 =back
 
@@ -51,16 +51,16 @@ build directory. Use --priority to use a different priority than 50.
 
 =item B<-n>, B<--noscripts>
 
-Do not modify postinst/prerm scripts.
+Do not modify F<postinst>/F<prerm> scripts.
 
 =item B<--priority=>I<n>
 
-Sets the priority number of a site-start.d file. Default is 50.
+Sets the priority number of a F<site-start.d> file. Default is 50.
 
 =item B<--flavor=>I<foo>
 
-Sets the flavor a site-start.d file will be installed in. Default is
-"emacs", alternatives include "xemacs" and "emacs20".
+Sets the flavor a F<site-start.d> file will be installed in. Default is
+B<emacs>, alternatives include B<xemacs> and B<emacs20>.
 
 =back
 
diff --git a/dh_installexamples b/dh_installexamples
index 8e9431a..a39aa59 100755
--- a/dh_installexamples
+++ b/dh_installexamples
@@ -11,12 +11,12 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_installexamples> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<file ...>>]
+B<dh_installexamples> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<file> ...>]
 
 =head1 DESCRIPTION
 
-dh_installexamples is a debhelper program that is responsible for
-installing examples into usr/share/doc/package/examples in package
+B<dh_installexamples> is a debhelper program that is responsible for
+installing examples into F<usr/share/doc/package/examples> in package
 build directories.
 
 =head1 FILES
@@ -38,22 +38,22 @@ Lists example files or directories to be installed.
 Install any files specified by command line parameters in ALL packages
 acted on.
 
-=item B<-Xitem>, B<--exclude=item>
+=item B<-X>I<item>, B<--exclude=>I<item>
 
-Exclude files that contain "item" anywhere in their filename from
+Exclude files that contain I<item> anywhere in their filename from
 being installed.
 
-=item I<file ...>
+=item I<file> ...
 
 Install these files (or directories) as examples into the first package
-acted on. (Or into all packages if -A is specified.)
+acted on. (Or into all packages if B<-A> is specified.)
 
 =back
 
 =head1 NOTES
 
-Note that dh_installexamples will happily copy entire directory hierarchies
-if you ask it to (similar to cp -a). If it is asked to install a
+Note that B<dh_installexamples> will happily copy entire directory hierarchies
+if you ask it to (similar to B<cp -a>). If it is asked to install a
 directory, it will install the complete contents of the directory.
 
 =cut
diff --git a/dh_installifupdown b/dh_installifupdown
index e394e3f..2ea74f4 100755
--- a/dh_installifupdown
+++ b/dh_installifupdown
@@ -15,8 +15,8 @@ B<dh_installifupdown> [S<I<debhelper options>>] [B<--name=>I<name>]
 
 =head1 DESCRIPTION
 
-dh_installifupdown is a debhelper program that is responsible for installing
-if-up, if-down, if-pre-up, and if-post-down hook scripts into package build
+B<dh_installifupdown> is a debhelper program that is responsible for installing
+F<if-up>, F<if-down>, F<if-pre-up>, and F<if-post-down> hook scripts into package build
 directories.
 
 =head1 FILES
@@ -42,8 +42,8 @@ the package build directory.
 
 =item B<--name=>I<name>
 
-Look for files named debian/package.name.if-* and install them as
-etc/network/if-*/name, instead of using the usual files and installing them
+Look for files named F<debian/package.name.if-*> and install them as
+F<etc/network/if-*/name>, instead of using the usual files and installing them
 as the package name.
 
 =back
diff --git a/dh_installinfo b/dh_installinfo
index 6afe340..91ca96b 100755
--- a/dh_installinfo
+++ b/dh_installinfo
@@ -11,12 +11,12 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_installinfo> [S<I<debhelper options>>] [B<-A>] [S<I<file ...>>]
+B<dh_installinfo> [S<I<debhelper options>>] [B<-A>] [S<I<file> ...>]
 
 =head1 DESCRIPTION
 
-dh_installinfo is a debhelper program that is responsible for installing
-info files into usr/share/info in the package build directory.
+B<dh_installinfo> is a debhelper program that is responsible for installing
+info files into F<usr/share/info> in the package build directory.
 
 =head1 FILES
 
@@ -37,10 +37,10 @@ List info files to be installed.
 Install all files specified by command line parameters in ALL packages
 acted on.
 
-=item I<file ...>
+=item I<file> ...
 
 Install these info files into the first package acted on. (Or in
-all packages if -A is specified).
+all packages if B<-A> is specified).
 
 =back
 
diff --git a/dh_installinit b/dh_installinit
index c053132..7dc4861 100755
--- a/dh_installinit
+++ b/dh_installinit
@@ -15,13 +15,13 @@ B<dh_installinit> [S<I<debhelper options>>] [B<--name=>I<name>] [B<-n>] [B<-R>]
 
 =head1 DESCRIPTION
 
-dh_installinit is a debhelper program that is responsible for installing
+B<dh_installinit> is a debhelper program that is responsible for installing
 upstart job files or init scripts with associated defaults files into package
 build directories, and in the former case providing compatibility handling
 for non-upstart systems.
 
-It also automatically generates the postinst and postrm and prerm commands
-needed to set up the symlinks in /etc/rc*.d/ and to start and stop the init
+It also automatically generates the F<postinst> and F<postrm> and F<prerm> commands
+needed to set up the symlinks in F</etc/rc*.d/> and to start and stop the init
 scripts.
 
 =head1 FILES
@@ -51,17 +51,17 @@ build directory.
 
 =item B<-n>, B<--noscripts>
 
-Do not modify postinst/postrm/prerm scripts.
+Do not modify F<postinst>/F<postrm>/F<prerm> scripts.
 
 =item B<-o>, B<--onlyscripts>
 
-Only modify postinst/postrm/prerm scripts, do not actually install any init
-script, default files, or upstart job.  May be useful if the init script or
+Only modify F<postinst>/F<postrm>/F<prerm> scripts, do not actually install any init
+script, default files, or upstart job. May be useful if the init script or
 upstart job is shipped and/or installed by upstream in a way that doesn't
-make it easy to let dh_installinit find it.
+make it easy to let B<dh_installinit> find it.
 
 If no upstart job file is installed in the target directory when
-dh_installinit --onlyscripts is called, this program will assume that an
+B<dh_installinit --onlyscripts> is called, this program will assume that an
 init script is being installed and not provide the compatibility symlinks
 or upstart dependencies.
 
@@ -69,7 +69,7 @@ or upstart dependencies.
 
 Do not stop the init script until after the package upgrade has been
 completed. This is different than the default behavior, which stops the
-script in the prerm, and starts it again in the postinst.
+script in the F<prerm>, and starts it again in the F<postinst>.
 
 This can be useful for daemons that should not have a possibly long
 downtime during upgrade. But you should make sure that the daemon will not
@@ -83,50 +83,50 @@ Do not stop init script on upgrade.
 =item B<--no-start>
 
 Do not start the init script on install or upgrade, or stop it on removal.
-Only call update-rc.d. Useful for rcS scripts.
+Only call B<update-rc.d>. Useful for rcS scripts.
 
 =item B<-d>, B<--remove-d>
 
-Remove trailing "d" from the name of the package, and use the result for the
-filename the upstart job file is installed as in etc/init/ , or for the
+Remove trailing B<d> from the name of the package, and use the result for the
+filename the upstart job file is installed as in F<etc/init/> , or for the
 filename the init script is installed as in etc/init.d and the default file
-is installed as in etc/default/ . This may be useful for daemons with names
-ending in "d". (Note: this takes precedence over the --init-script parameter
+is installed as in F<etc/default/> . This may be useful for daemons with names
+ending in B<d>. (Note: this takes precedence over the B<--init-script> parameter
 described below.)
 
 =item B<-u>I<params> B<--update-rcd-params=>I<params>
 
 =item B<--> I<params>
 
-Pass "params" to L<update-rc.d(8)>. If not specified, "defaults" will be
+Pass I<params> to L<update-rc.d(8)>. If not specified, B<defaults> will be
 passed to L<update-rc.d(8)>.
 
 =item B<--name=>I<name>
 
 Install the upstart job file or the init script (and default file) using the
 filename I<name> instead of the default filename, which is the package name.
-When this parameter is used, dh_installinit looks for and installs files
-named debian/package.name.upstart, debian/package.name.init and
-debian/package.name.default, instead of the usual debian/package.upstart,
-debian/package.init and debian/package.default.
+When this parameter is used, B<dh_installinit> looks for and installs files
+named F<debian/package.name.upstart>, F<debian/package.name.init> and
+F<debian/package.name.default>, instead of the usual F<debian/package.upstart>,
+F<debian/package.init> and F<debian/package.default>.
 
 =item B<--init-script=>I<scriptname>
 
-Use "scriptname" as the filename the init script is installed as in
-etc/init.d/ (and also use it as the filename for the defaults file, if it
-is installed). If you use this parameter, dh_installinit will look to see
-if a file in the debian/ directory exists that looks like
-"package.scriptname" and if so will install it as the init script in
+Use I<scriptname> as the filename the init script is installed as in
+F<etc/init.d/> (and also use it as the filename for the defaults file, if it
+is installed). If you use this parameter, B<dh_installinit> will look to see
+if a file in the F<debian/> directory exists that looks like
+F<package.scriptname> and if so will install it as the init script in
 preference to the files it normally installs.
 
-This parameter is deprecated, use the --name parameter instead.  This
+This parameter is deprecated, use the B<--name> parameter instead. This
 parameter will be ignored completely for upstart jobs.
 
 =item B<--error-handler=>I<function>
 
-Call the named shell function if running the init script fails. The
-function should be provided in the prerm and postinst scripts, before the
-#DEBHELPER# token.
+Call the named shell I<function> if running the init script fails. The
+function should be provided in the F<prerm> and F<postinst> scripts, before the
+B<#DEBHELPER#> token.
 
 =back
 
diff --git a/dh_installlogcheck b/dh_installlogcheck
index 1ee5d15..b6956fa 100755
--- a/dh_installlogcheck
+++ b/dh_installlogcheck
@@ -11,11 +11,11 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_installlogcheck> [S<B<debhelper options>>]
+B<dh_installlogcheck> [S<I<debhelper options>>]
 
 =head1 DESCRIPTION
 
-dh_installlogcheck is a debhelper program that is responsible for
+B<dh_installlogcheck> is a debhelper program that is responsible for
 installing logcheck rule files.
 
 =head1 FILES
@@ -35,7 +35,7 @@ installing logcheck rule files.
 =item debian/I<package>.logcheck.ignore.paranoid
 
 Each of these files, if present, are installed into corresponding
-subdirectories of etc/logcheck/ in package build directories.
+subdirectories of F<etc/logcheck/> in package build directories.
 
 =back
 
diff --git a/dh_installlogrotate b/dh_installlogrotate
index 9cf1533..17b2a5a 100755
--- a/dh_installlogrotate
+++ b/dh_installlogrotate
@@ -15,9 +15,9 @@ B<dh_installlogrotate> [S<I<debhelper options>>] [B<--name=>I<name>]
 
 =head1 DESCRIPTION
 
-dh_installlogrotate is a debhelper program that is responsible for installing
-logrotate config files into etc/logrotate.d in package build directories.
-Files named debian/package.logrotate are installed.
+B<dh_installlogrotate> is a debhelper program that is responsible for installing
+logrotate config files into F<etc/logrotate.d> in package build directories.
+Files named F<debian/package.logrotate> are installed.
 
 =head1 OPTIONS
 
@@ -25,8 +25,8 @@ Files named debian/package.logrotate are installed.
 
 =item B<--name=>I<name>
 
-Look for files named debian/package.name.logrotate and install them as
-etc/logrotate.d/name, instead of using the usual files and installing them
+Look for files named F<debian/package.name.logrotate> and install them as
+F<etc/logrotate.d/name>, instead of using the usual files and installing them
 as the package name.
 
 =back
diff --git a/dh_installman b/dh_installman
index 703b70b..fb7c8eb 100755
--- a/dh_installman
+++ b/dh_installman
@@ -12,37 +12,37 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_installman> [S<I<debhelper options>>] [S<I<manpage ...>>]
+B<dh_installman> [S<I<debhelper options>>] [S<I<manpage> ...>]
 
 =head1 DESCRIPTION
 
-dh_installman is a debhelper program that handles installing
+B<dh_installman> is a debhelper program that handles installing
 man pages into the correct locations in package build directories. You tell
 it what man pages go in your packages, and it figures out where to
-install them based on the section field in their .TH line. If you have a
-properly formatted .TH line, your man page will be installed into the right
+install them based on the section field in their B<.TH> line. If you have a
+properly formatted B<.TH> line, your man page will be installed into the right
 directory, with the right name (this includes proper handling of pages
-with a subsection, like "3perl", which are placed in man3, and given an
-extension of ".3perl"). If your .TH line is incorrect or missing, the program
+with a subsection, like B<3perl>, which are placed in F<man3>, and given an
+extension of F<.3perl>). If your B<.TH> line is incorrect or missing, the program
 may guess wrong based on the file extension.
 
 It also supports translated man pages, by looking for extensions
-like .ll.8 and .ll_LL.8, or by use of the --language switch.
+like F<.ll.8> and F<.ll_LL.8>, or by use of the B<--language> switch.
 
-If dh_installman seems to install a man page into the wrong section or with
+If B<dh_installman> seems to install a man page into the wrong section or with
 the wrong extension, this is because the man page has the wrong section
-listed in its .TH line. Edit the man page and correct the section, and
-dh_installman will follow suit.  See L<man(7)> for details about the .TH
-section. If dh_installman seems to install a man page into a directory
-like /usr/share/man/pl/man1/, that is because your program has a
-name like "foo.pl", and dh_installman assumes that means it is translated
-into Polish. Use --language=C to avoid this.
-
-After the man page installation step, dh_installman will check to see if
+listed in its B<.TH> line. Edit the man page and correct the section, and
+B<dh_installman> will follow suit. See L<man(7)> for details about the B<.TH>
+section. If B<dh_installman> seems to install a man page into a directory
+like F</usr/share/man/pl/man1/>, that is because your program has a
+name like F<foo.pl>, and B<dh_installman> assumes that means it is translated
+into Polish. Use B<--language=C> to avoid this.
+
+After the man page installation step, B<dh_installman> will check to see if
 any of the man pages in the temporary directories of any of the packages it
-is acting on contain ".so" links. If so, it changes them to symlinks.
+is acting on contain F<.so> links. If so, it changes them to symlinks.
 
-Also, dh_installman will use man to guess the character encoding of each
+Also, B<dh_installman> will use man to guess the character encoding of each
 manual page and convert it to UTF-8. If the guesswork fails for some
 reason, you can override it using an encoding declaration. See
 L<manconv(1)> for details.
@@ -66,15 +66,15 @@ Lists man pages to be installed.
 Install all files specified by command line parameters in ALL packages
 acted on.
 
-=item B<--language>=ll
+=item B<--language=>I<ll>
 
 Use this to specify that the man pages being acted on are written in the
 specified language.
 
-=item I<manpage ...>
+=item I<manpage> ...
 
 Install these man pages into the first package acted on. (Or in all
-packages if -A is specified).
+packages if B<-A> is specified).
 
 =back
 
diff --git a/dh_installmanpages b/dh_installmanpages
index 90c453c..cc6a6f6 100755
--- a/dh_installmanpages
+++ b/dh_installmanpages
@@ -12,36 +12,36 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_installmanpages> [S<I<debhelper options>>] [S<I<file ...>>]
+B<dh_installmanpages> [S<I<debhelper options>>] [S<I<file> ...>]
 
 =head1 DESCRIPTION
 
-dh_installmanpages is a debhelper program that is responsible for
-automatically installing man pages into usr/share/man/
+B<dh_installmanpages> is a debhelper program that is responsible for
+automatically installing man pages into F<usr/share/man/>
 in package build directories.
 
 This is a DWIM-style program, with an interface unlike the rest of
 debhelper. It is deprecated, and you are encouraged to use
 L<dh_installman(1)> instead.
 
-dh_installmanpages scans the current directory and all subdirectories for
+B<dh_installmanpages> scans the current directory and all subdirectories for
 filenames that look like man pages. (Note that only real files are looked
 at; symlinks are ignored.) It uses L<file(1)> to verify that the files are
 in the correct format. Then, based on the files' extensions, it installs 
 them into the correct man directory.
 
-All filenames specified as parameters will be skipped by dh_installmanpages.
+All filenames specified as parameters will be skipped by B<dh_installmanpages>.
 This is useful if by default it installs some man pages that you do not
 want to be installed.
 
-After the man page installation step, dh_installmanpages will check to see
-if any of the man pages are ".so" links. If so, it changes them to symlinks.
+After the man page installation step, B<dh_installmanpages> will check to see
+if any of the man pages are F<.so> links. If so, it changes them to symlinks.
 
 =head1 OPTIONS
 
 =over 4
 
-=item I<file ...>
+=item I<file> ...
 
 Do not install these files as man pages, even if they look like valid man
 pages.
@@ -50,12 +50,12 @@ pages.
 
 =head1 BUGS
 
-dh_installmanpages will install the man pages it finds into B<all> packages
+B<dh_installmanpages> will install the man pages it finds into B<all> packages
 you tell it to act on, since it can't tell what package the man
-pages belong in. This is almost never what you really want (use -p to work
+pages belong in. This is almost never what you really want (use B<-p> to work
 around this, or use the much better L<dh_installman(1)> program instead).
 
-Files ending in I<.man> will be ignored.
+Files ending in F<.man> will be ignored.
 
 Files specified as parameters that contain spaces in their filenames will
 not be processed properly.
diff --git a/dh_installmenu b/dh_installmenu
index c1a609a..689c0b2 100755
--- a/dh_installmenu
+++ b/dh_installmenu
@@ -2,7 +2,7 @@
 
 =head1 NAME
 
-dh_installmenu - install debian menu files into package build directories
+dh_installmenu - install Debian menu files into package build directories
 
 =cut
 
@@ -15,11 +15,11 @@ B<dh_installmenu> [S<B<debhelper options>>] [B<-n>]
 
 =head1 DESCRIPTION
 
-dh_installmenu is a debhelper program that is responsible for installing
-files used by the debian menu package into package build directories.
+B<dh_installmenu> is a debhelper program that is responsible for installing
+files used by the Debian B<menu> package into package build directories.
 
-It also automatically generates the postinst and postrm commands needed to
-interface with the debian menu package. These commands are inserted into
+It also automatically generates the F<postinst> and F<postrm> commands needed to
+interface with the Debian B<menu> package. These commands are inserted into
 the maintainer scripts by L<dh_installdeb(1)>.
 
 =head1 FILES
@@ -44,7 +44,7 @@ in the package build directory.
 
 =item B<-n>, B<--noscripts>
 
-Do not modify postinst/postrm scripts.
+Do not modify F<postinst>/F<postrm> scripts.
 
 =back
 
diff --git a/dh_installmime b/dh_installmime
index 6886975..0ac46c7 100755
--- a/dh_installmime
+++ b/dh_installmime
@@ -15,11 +15,11 @@ B<dh_installmime> [S<I<debhelper options>>] [B<-n>]
 
 =head1 DESCRIPTION
 
-dh_installmime is a debhelper program that is responsible for installing
+B<dh_installmime> is a debhelper program that is responsible for installing
 mime files into package build directories.
 
-It also automatically generates the postinst and postrm commands needed to
-interface with the debian mime-support and shared-mime-info packages. These
+It also automatically generates the F<postinst> and F<postrm> commands needed to
+interface with the debian B<mime-support> and B<shared-mime-info> packages. These
 commands are inserted into the maintainer scripts by L<dh_installdeb(1)>.
 
 =head1 FILES
@@ -44,7 +44,7 @@ directory.
 
 =item B<-n>, B<--noscripts>
 
-Do not modify postinst/postrm scripts.
+Do not modify F<postinst>/F<postrm> scripts.
 
 =back
 
diff --git a/dh_installmodules b/dh_installmodules
index 6799a12..bee1072 100755
--- a/dh_installmodules
+++ b/dh_installmodules
@@ -17,12 +17,12 @@ B<dh_installmodules> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>]
 
 =head1 DESCRIPTION
 
-dh_installmodules is a debhelper program that is responsible for
+B<dh_installmodules> is a debhelper program that is responsible for
 registering kernel modules.
 
 Kernel modules are searched for in the package build directory and if
-found, postinst and postrm commands are automatically generated to 
-run depmod and register the modules when the package is installed. 
+found, F<postinst> and F<postrm> commands are automatically generated to 
+run B<depmod> and register the modules when the package is installed. 
 These commands are inserted into the maintainer scripts by
 L<dh_installdeb(1)>.
 
@@ -37,7 +37,7 @@ Installed to etc/modprobe.d/I<package>.conf in the package build directory.
 =item debian/I<package>.modules
 
 These files were installed for use by modutils, but are now not used
-and dh_installmodules will warn if these files are present.
+and B<dh_installmodules> will warn if these files are present.
 
 =back
 
@@ -47,11 +47,11 @@ and dh_installmodules will warn if these files are present.
 
 =item B<-n>, B<--noscripts>
 
-Do not modify postinst/postrm scripts.
+Do not modify F<postinst>/F<postrm> scripts.
 
 =item B<--name=>I<name>
 
-When this parameter is used, dh_installmodules looks for and
+When this parameter is used, B<dh_installmodules> looks for and
 installs files named debian/I<package>.I<name>.modprobe instead
 of the usual debian/I<package>.modprobe
 
diff --git a/dh_installpam b/dh_installpam
index 90e31b2..c707386 100755
--- a/dh_installpam
+++ b/dh_installpam
@@ -15,7 +15,7 @@ B<dh_installpam> [S<I<debhelper options>>] [B<--name=>I<name>]
 
 =head1 DESCRIPTION
 
-dh_installpam is a debhelper program that is responsible for installing
+B<dh_installpam> is a debhelper program that is responsible for installing
 files used by PAM into package build directories.
 
 =head1 FILES
diff --git a/dh_installppp b/dh_installppp
index 60c5ccc..6762d14 100755
--- a/dh_installppp
+++ b/dh_installppp
@@ -15,7 +15,7 @@ B<dh_installppp> [S<I<debhelper options>>] [B<--name=>I<name>]
 
 =head1 DESCRIPTION
 
-dh_installppp is a debhelper program that is responsible for installing
+B<dh_installppp> is a debhelper program that is responsible for installing
 ppp ip-up and ip-down scripts into package build directories.
 
 =head1 FILES
@@ -38,8 +38,8 @@ Installed into etc/ppp/ip-down.d/I<package> in the package build directory.
 
 =item B<--name=>I<name>
 
-Look for files named debian/package.name.ppp.ip-* and install them as
-etc/ppp/ip-*/name, instead of using the usual files and installing them
+Look for files named F<debian/package.name.ppp.ip-*> and install them as
+F<etc/ppp/ip-*/name>, instead of using the usual files and installing them
 as the package name.
 
 =back
diff --git a/dh_installudev b/dh_installudev
index 9bfd662..f7e46a2 100755
--- a/dh_installudev
+++ b/dh_installudev
@@ -16,11 +16,11 @@ B<dh_installudev> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>] [B<--pri
 
 =head1 DESCRIPTION
 
-dh_installudev is a debhelper program that is responsible for
-installing udev rules files.
+B<dh_installudev> is a debhelper program that is responsible for
+installing B<udev> rules files.
 
-Code is added to the preinst and postinst to handle the upgrade from the
-old udev rules file location.
+Code is added to the F<preinst> and F<postinst> to handle the upgrade from the
+old B<udev> rules file location.
 
 =head1 FILES
 
@@ -28,7 +28,7 @@ old udev rules file location.
 
 =item debian/I<package>.udev
 
-Installed into lib/udev/rules.d/ in the package build directory.
+Installed into F<lib/udev/rules.d/> in the package build directory.
 
 =back
 
@@ -38,17 +38,17 @@ Installed into lib/udev/rules.d/ in the package build directory.
 
 =item B<--name=>I<name>
 
-When this parameter is used, dh_installudev looks for and
+When this parameter is used, B<dh_installudev> looks for and
 installs files named debian/I<package>.I<name>.udev instead of the usual
 debian/I<package>.udev.
 
 =item B<--priority=>I<priority>
 
-Sets the priority string of the rules.d symlink. Default is 60.
+Sets the priority string of the F<rules.d> symlink. Default is 60.
 
 =item B<-n>, B<--noscripts>
 
-Do not modify postinst/postrm scripts.
+Do not modify F<postinst>/F<postrm> scripts.
 
 =back
 
diff --git a/dh_installwm b/dh_installwm
index 43f561d..bebd4e2 100755
--- a/dh_installwm
+++ b/dh_installwm
@@ -11,15 +11,15 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_installwm> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] [S<I<wm ...>>]
+B<dh_installwm> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] [S<I<wm> ...>]
 
 =head1 DESCRIPTION
 
-dh_installwm is a debhelper program that is responsible for
-generating the postinst and postrm commands that register a window manager
+B<dh_installwm> is a debhelper program that is responsible for
+generating the F<postinst> and F<postrm> commands that register a window manager
 with L<update-alternatives(8)>. The window manager's man page is also 
 registered as a slave symlink (in v6 mode and up), if it is found in 
-usr/share/man/man1/ in the package build directory.
+F<usr/share/man/man1/> in the package build directory.
 
 =head1 FILES
 
@@ -43,9 +43,9 @@ calculating the correct value.
 
 =item B<-n>, B<--noscripts>
 
-Do not modify postinst/postrm scripts. Turns this command into a no-op.
+Do not modify F<postinst>/F<postrm> scripts. Turns this command into a no-op.
 
-=item I<wm ...>
+=item I<wm> ...
 
 Window manager programs to register.
 
diff --git a/dh_installxfonts b/dh_installxfonts
index 25e073b..d247bfa 100755
--- a/dh_installxfonts
+++ b/dh_installxfonts
@@ -15,23 +15,23 @@ B<dh_installxfonts> [S<I<debhelper options>>]
 
 =head1 DESCRIPTION
 
-dh_installxfonts is a debhelper program that is responsible for
-registering X fonts, so their corresponding fonts.dir, fonts.alias,
-and fonts.scale be rebuilt properly at install time.
+B<dh_installxfonts> is a debhelper program that is responsible for
+registering X fonts, so their corresponding F<fonts.dir>, F<fonts.alias>,
+and F<fonts.scale> be rebuilt properly at install time.
 
 Before calling this program, you should have installed any X fonts provided
 by your package into the appropriate location in the package build
-directory, and if you have fonts.alias or fonts.scale files, you should
-install them into the correct location under etc/X11/fonts in your
+directory, and if you have F<fonts.alias> or F<fonts.scale> files, you should
+install them into the correct location under F<etc/X11/fonts> in your
 package build directory.
 
-Your package should depend on xfonts-utils so that the
-update-fonts-* commands are available. (This program adds that dependency to
-${misc:Depends}.)
+Your package should depend on B<xfonts-utils> so that the
+B<update-fonts->I<*> commands are available. (This program adds that dependency to
+B<${misc:Depends}>.)
 
-This program automatically generates the postinst and postrm commands needed
+This program automatically generates the F<postinst> and F<postrm> commands needed
 to register X fonts. These commands are inserted into the maintainer
-scripts by dh_installdeb. See L<dh_installdeb(1)> for an explanation of how
+scripts by B<dh_installdeb>. See L<dh_installdeb(1)> for an explanation of how
 this works.
 
 =head1 NOTES
diff --git a/dh_link b/dh_link
index b035a73..5691a60 100755
--- a/dh_link
+++ b/dh_link
@@ -12,14 +12,14 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_link> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<source destination ...>>]
+B<dh_link> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<source destination> ...>]
 
 =head1 DESCRIPTION
 
-dh_link is a debhelper program that creates symlinks in package build
+B<dh_link> is a debhelper program that creates symlinks in package build
 directories.
 
-dh_link accepts a list of pairs of source and destination files. The source
+B<dh_link> accepts a list of pairs of source and destination files. The source
 files are the already existing files that will be symlinked from. The
 destination files are the symlinks that will be created. There B<must> be
 an equal number of source and destination files specified.
@@ -28,13 +28,13 @@ Be sure you B<do> specify the full filename to both the source and
 destination files (unlike you would do if you were using something like
 L<ln(1)>).
 
-dh_link will generate symlinks that comply with debian policy - absolute
+B<dh_link> will generate symlinks that comply with Debian policy - absolute
 when policy says they should be absolute, and relative links with as short
 a path as possible. It will also create any subdirectories it needs to to put
 the symlinks in.
 
-dh_link also scans the package build tree for existing symlinks which do not
-conform to debian policy, and corrects them (v4 or later).
+B<dh_link> also scans the package build tree for existing symlinks which do not
+conform to Debian policy, and corrects them (v4 or later).
 
 =head1 FILES
 
@@ -57,16 +57,16 @@ whitespace.
 Create any links specified by command line parameters in ALL packages
 acted on, not just the first.
 
-=item B<-Xitem>, B<--exclude=item>
+=item B<-X>I<item>, B<--exclude=>I<item>
 
-Do not correct symlinks that contain "item" anywhere in their filename from
-being corrected to comply with debian policy.
+Do not correct symlinks that contain I<item> anywhere in their filename from
+being corrected to comply with Debian policy.
 
-=item I<source destination ...>
+=item I<source destination> ...
 
-Create a file named "destination" as a link to a file named "source". Do
+Create a file named I<destination> as a link to a file named I<source>. Do
 this in the package build directory of the first package acted on.
-(Or in all packages if -A is specified.)
+(Or in all packages if B<-A> is specified.)
 
 =back
 
@@ -74,13 +74,13 @@ this in the package build directory of the first package acted on.
 
  dh_link usr/share/man/man1/foo.1 usr/share/man/man1/bar.1
 
-Make bar.1 be a symlink to foo.1
+Make F<bar.1> be a symlink to F<foo.1>
 
  dh_link var/lib/foo usr/lib/foo \
    usr/share/man/man1/foo.1 usr/share/man/man1/bar.1
 
-Make /usr/lib/foo/ be a link to /var/lib/foo/, and bar.1 be a symlink to
-the foo.1
+Make F</usr/lib/foo/> be a link to F</var/lib/foo/>, and F<bar.1> be a symlink to
+the F<foo.1>
 
 =cut
 
diff --git a/dh_lintian b/dh_lintian
index ca68f73..5540ec3 100755
--- a/dh_lintian
+++ b/dh_lintian
@@ -15,7 +15,7 @@ B<dh_lintian> [S<I<debhelper options>>]
 
 =head1 DESCRIPTION
 
-dh_lintian is a debhelper program that is responsible for installing
+B<dh_lintian> is a debhelper program that is responsible for installing
 override files used by lintian into package build directories.
 
 =head1 FILES
@@ -28,7 +28,7 @@ Installed into usr/share/lintian/overrides/I<package> in the package
 build directory. This file is used to suppress erroneous lintian
 diagnostics.
 
-=item debian/source.lintian-overrides
+=item F<debian/source.lintian-overrides>
 
 These files are not installed, but will be scanned by lintian to provide
 overrides for the source package.
diff --git a/dh_listpackages b/dh_listpackages
index 79b664b..8550b56 100755
--- a/dh_listpackages
+++ b/dh_listpackages
@@ -15,7 +15,7 @@ B<dh_listpackages> [S<I<debhelper options>>]
 
 =head1 DESCRIPTION
 
-dh_listpackages is a debhelper program that outputs a list of all binary
+B<dh_listpackages> is a debhelper program that outputs a list of all binary
 packages debhelper commands will act on. If you pass it some options, it
 will change the list to match the packages other debhelper commands would
 act on if passed the same options.
diff --git a/dh_makeshlibs b/dh_makeshlibs
index acec308..c52ef7d 100755
--- a/dh_makeshlibs
+++ b/dh_makeshlibs
@@ -15,10 +15,10 @@ B<dh_makeshlibs> [S<I<debhelper options>>] [B<-m>I<major>] [B<-V>I<[dependencies
 
 =head1 DESCRIPTION
 
-dh_makeshlibs is a debhelper program that automatically scans for shared
+B<dh_makeshlibs> is a debhelper program that automatically scans for shared
 libraries, and generates a shlibs file for the libraries it finds.
 
-It also adds a call to ldconfig in the postinst and postrm scripts (in
+It also adds a call to ldconfig in the F<postinst> and F<postrm> scripts (in
 v3 mode and above only) to any packages in which it finds shared libraries.
 
 =head1 FILES
@@ -41,7 +41,7 @@ to provide different symbols files for different architectures.
 
 =item B<-m>I<major>, B<--major=>I<major>
 
-Instead of trying to guess the major number of the library with objdump,
+Instead of trying to guess the major number of the library with /postobjdump,
 use the major number specified after the -m parameter. This is much less
 useful than it used to be, back in the bad old days when this program
 looked at library filenames rather than using objdump.
@@ -53,15 +53,15 @@ looked at library filenames rather than using objdump.
 By default, the shlibs file generated by this program does not make packages
 depend on any particular version of the package containing the shared
 library. It may be necessary for you to add some version dependancy
-information to the shlibs file. If -V is specified with no dependency
+information to the shlibs file. If B<-V> is specified with no dependency
 information, the current upstream version of the package is plugged into a
-dependency that looks like "packagename (>= packageversion)". Note that in
-debhelper compatibility levels before v4, the debian part of the package
-version number is also included. If -V is specified with parameters, the
+dependency that looks like "I<packagename> B<(=E<gt>> I<packageversion>B<)>". Note that in
+debhelper compatibility levels before v4, the Debian part of the package
+version number is also included. If B<-V> is specified with parameters, the
 parameters can be used to specify the exact dependency information needed
 (be sure to include the package name).
 
-Beware of using -V without any parameters; this is a conservative setting
+Beware of using B<-V> without any parameters; this is a conservative setting
 that always ensures that other packages' shared library dependencies are at
 least as tight as they need to be (unless your library is prone to changing
 ABI without updating the upstream version number), so that if the
@@ -71,21 +71,21 @@ be upgraded.
 
 =item B<-n>, B<--noscripts>
 
-Do not modify postinst/postrm scripts.
+Do not modify F<postinst>/F<postrm> scripts.
 
 =item B<-X>I<item>, B<--exclude=>I<item>
 
-Exclude files that contain "item" anywhere in their filename or directory 
+Exclude files that contain I<item> anywhere in their filename or directory 
 from being treated as shared libraries.
 
 =item B<--add-udeb=>I<udeb>
 
-Create an additional line for udebs in the shlibs file and use "udeb" as the
+Create an additional line for udebs in the shlibs file and use I<udeb> as the
 package name for udebs to depend on instead of the regular library package.
 
 =item B<--> I<params>
 
-Pass "params" to L<dpkg-gensymbols(1)>.
+Pass I<params> to L<dpkg-gensymbols(1)>.
 
 =back
 
@@ -93,19 +93,19 @@ Pass "params" to L<dpkg-gensymbols(1)>.
 
 =over 4
 
-=item dh_makeshlibs
+=item B<dh_makeshlibsW
 
-Assuming this is a package named libfoobar1, generates a shlibs file that
+Assuming this is a package named F<libfoobar1>, generates a shlibs file that
 looks something like:
  libfoobar 1 libfoobar1
 
-=item dh_makeshlibs -V
+=item B<dh_makeshlibs -V>
 
 Assuming the current version of the package is 1.1-3, generates a shlibs
 file that looks something like:
  libfoobar 1 libfoobar1 (>= 1.1)
 
-=item dh_makeshlibs -V 'libfoobar1 (>= 1.0)'
+=item B<dh_makeshlibs -V 'libfoobar1 (E<gt>= 1.0)'>
 
 Generates a shlibs file that looks something like:
   libfoobar 1 libfoobar1 (>= 1.0)
diff --git a/dh_md5sums b/dh_md5sums
index 56d1252..a31d715 100755
--- a/dh_md5sums
+++ b/dh_md5sums
@@ -16,12 +16,12 @@ B<dh_md5sums> [S<I<debhelper options>>] [B<-x>] [B<-X>I<item>] [B<--include-conf
 
 =head1 DESCRIPTION
 
-dh_md5sums is a debhelper program that is responsible for generating
-a DEBIAN/md5sums file, which lists the md5sums of each file in the package.
-These files are used by the debsums package.
+B<dh_md5sums> is a debhelper program that is responsible for generating
+a F<DEBIAN/md5sums> file, which lists the md5sums of each file in the package.
+These files are used by the B<debsums> package.
 
-All files in DEBIAN/ are omitted from the md5sums file, as are all
-conffiles (unless you use the --include-conffiles switch).
+All files in F<DEBIAN/> are omitted from the F<md5sums> file, as are all
+conffiles (unless you use the B<--include-conffiles> switch).
 
 The md5sums file is installed with proper permissions and ownerships.
 
@@ -32,11 +32,11 @@ The md5sums file is installed with proper permissions and ownerships.
 =item B<-x>, B<--include-conffiles>
 
 Include conffiles in the md5sums list. Note that this information is
-redundant since it is included elsewhere in debian packages.
+redundant since it is included elsewhere in Debian packages.
 
 =item B<-X>I<item>, B<--exclude=>I<item>
 
-Exclude files that contain "item" anywhere in their filename from
+Exclude files that contain I<item> anywhere in their filename from
 being listed in the md5sums file.
 
 =back
diff --git a/dh_movefiles b/dh_movefiles
index 03957a0..b146b8e 100755
--- a/dh_movefiles
+++ b/dh_movefiles
@@ -11,17 +11,17 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_movefiles> [S<I<debhelper options>>] [B<--sourcedir=>I<dir>] [B<-X>I<item>] S<I<file ...>>]
+B<dh_movefiles> [S<I<debhelper options>>] [B<--sourcedir=>I<dir>] [B<-X>I<item>] S<I<file> ...>]
 
 =head1 DESCRIPTION
 
-dh_movefiles is a debhelper program that is responsible for moving files
-out of debian/tmp or some other directory and into other package build
-directories. This may be useful if your package has a Makefile that installs
-everything into debian/tmp, and you need to break that up into subpackages.
+B<dh_movefiles> is a debhelper program that is responsible for moving files
+out of F<debian/tmp> or some other directory and into other package build
+directories. This may be useful if your package has a F<Makefile> that installs
+everything into F<debian/tmp>, and you need to break that up into subpackages.
 
-Note: dh_install is a much better program, and you are recommended to use
-it instead of dh_movefiles.
+Note: B<dh_install> is a much better program, and you are recommended to use
+it instead of B<dh_movefiles>.
 
 =head1 FILES
 
@@ -30,7 +30,7 @@ it instead of dh_movefiles.
 =item debian/I<package>.files
 
 Lists the files to be moved into a package, separated by whitespace. The
-filenames listed should be relative to debian/tmp/. You can also list
+filenames listed should be relative to F<debian/tmp/>. You can also list
 directory names, and the whole directory will be moved.
 
 =back
@@ -41,35 +41,35 @@ directory names, and the whole directory will be moved.
 
 =item B<--sourcedir=>I<dir>
 
-Instead of moving files out of debian/tmp (the default), this option makes
+Instead of moving files out of F<debian/tmp> (the default), this option makes
 it move files out of some other directory. Since the entire contents of
-the sourcedir is moved, specifying something like --sourcedir=/ is very
+the sourcedir is moved, specifying something like B<--sourcedir=/> is very
 unsafe, so to prevent mistakes, the sourcedir must be a relative filename;
-it cannot begin with a `/'.
+it cannot begin with a `B</>'.
 
 =item B<-Xitem>, B<--exclude=item>
 
-Exclude files that contain "item" anywhere in their filename from
+Exclude files that contain B<item> anywhere in their filename from
 being installed.
 
-=item I<file ...>
+=item I<file> ...
 
 Lists files to move. The filenames listed should be relative to
-debian/tmp/. You can also list directory names, and the whole directory will
-be moved. It is an error to list files here unless you use -p, -i, or -a to
-tell dh_movefiles which subpackage to put them in.
+F<debian/tmp/>. You can also list directory names, and the whole directory will
+be moved. It is an error to list files here unless you use B<-p>, B<-i>, or B<-a> to
+tell B<dh_movefiles> which subpackage to put them in.
 
 =back
 
 =head1 NOTES
 
-Note that files are always moved out of debian/tmp by default (even if you
+Note that files are always moved out of F<debian/tmp> by default (even if you
 have instructed debhelper to use a compatibility level higher than one,
 which does not otherwise use debian/tmp for anything at all). The idea
 behind this is that the package that is being built can be told to install
-into debian/tmp, and then files can be moved by dh_movefiles from that
+into F<debian/tmp>, and then files can be moved by B<dh_movefiles> from that
 directory. Any files or directories that remain are ignored, and get
-deleted by dh_clean later.
+deleted by B<dh_clean> later.
 
 =cut
 
diff --git a/dh_perl b/dh_perl
index 5739ca9..bf2506c 100755
--- a/dh_perl
+++ b/dh_perl
@@ -2,7 +2,7 @@
 
 =head1 NAME
 
-dh_perl - calculates perl dependencies and cleans up after MakeMaker
+dh_perl - calculates Perl dependencies and cleans up after MakeMaker
 
 =cut
 
@@ -13,20 +13,20 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_perl> [S<I<debhelper options>>] [B<-d>] [S<I<library dirs ...>>]
+B<dh_perl> [S<I<debhelper options>>] [B<-d>] [S<I<library dirs> ...>]
 
 =head1 DESCRIPTION
 
-dh_perl is a debhelper program that is responsible for generating
-the ${perl:Depends} substitutions and adding them to substvars files.
+B<dh_perl> is a debhelper program that is responsible for generating
+the B<${perl:Depends}> substitutions and adding them to substvars files.
 
-The program will look at perl scripts and modules in your package,
-and will use this information to generate a dependency on perl or
-perlapi. The dependency will be substituted into your package's control
-file wherever you place the token "${perl:Depends}".
+The program will look at Perl scripts and modules in your package,
+and will use this information to generate a dependency on B<perl> or
+B<perlapi>. The dependency will be substituted into your package's F<control>
+file wherever you place the token B<${perl:Depends}>.
 
-dh_perl also cleans up empty directories that MakeMaker can generate when
-installing perl modules.
+B<dh_perl> also cleans up empty directories that MakeMaker can generate when
+installing Perl modules.
 
 =head1 OPTIONS
 
@@ -34,26 +34,26 @@ installing perl modules.
 
 =item B<-d>
 
-In some specific cases you may want to depend on perl-base rather than the
-full perl package. If so, you can pass the -d option to make dh_perl generate
+In some specific cases you may want to depend on B<perl-base> rather than the
+full B<perl> package. If so, you can pass the -d option to make B<dh_perl> generate
 a dependency on the correct base package. This is only necessary for some
 packages that are included in the base system.
 
-Note that this flag may cause no dependency on perl-base to be generated at
-all. perl-base is Essential, so its dependency can be left out, unless a
+Note that this flag may cause no dependency on B<perl-base> to be generated at
+all. B<perl-base> is Essential, so its dependency can be left out, unless a
 versioned dependency is needed.
 
 =item B<-V>
 
 By default, scripts and architecture independent modules don't depend
-on any specific version of perl.  The -V option causes the current
-version of the perl (or perl-base with -d) package to be specified.
+on any specific version of B<perl>. The B<-V> option causes the current
+version of the B<perl> (or B<perl-base> with B<-d>) package to be specified.
 
 =item I<library dirs>
 
-If your package installs perl modules in non-standard
-directories, you can make dh_perl check those directories by passing their
-names on the command line. It will only check the vendorlib and vendorarch
+If your package installs Perl modules in non-standard
+directories, you can make B<dh_perl> check those directories by passing their
+names on the command line. It will only check the F<vendorlib> and F<vendorarch>
 directories by default.
 
 =back
diff --git a/dh_prep b/dh_prep
index bee9658..33a6fa6 100755
--- a/dh_prep
+++ b/dh_prep
@@ -15,12 +15,12 @@ B<dh_prep> [S<I<debhelper options>>] [B<-X>I<item>]
 
 =head1 DESCRIPTION
 
-dh_prep is a debhelper program that performs some file cleanups in
-preparation for building a binary package. (This is what dh_clean -k
-used to do.) It removes the package build directories, debian/tmp,
+B<dh_prep> is a debhelper program that performs some file cleanups in
+preparation for building a binary package. (This is what B<dh_clean -k>
+used to do.) It removes the package build directories, F<debian/tmp>,
 and some temp files that are generated when building a binary package.
 
-It is typically run at the top of the binary-arch and binary-indep targets,
+It is typically run at the top of the B<binary-arch> and B<binary-indep> targets,
 or at the top of a target such as install that they depend on.
 
 =head1 OPTIONS
@@ -29,7 +29,7 @@ or at the top of a target such as install that they depend on.
 
 =item B<-X>I<item> B<--exclude=>I<item>
 
-Exclude files that contain "item" anywhere in their filename from being
+Exclude files that contain F<item> anywhere in their filename from being
 deleted, even if they would normally be deleted. You may use this option
 multiple times to build up a list of things to exclude.
 
diff --git a/dh_python b/dh_python
index d7a4bed..6f6689a 100755
--- a/dh_python
+++ b/dh_python
@@ -2,7 +2,7 @@
 
 =head1 NAME
 
-dh_python - calculates python dependencies and adds postinst and prerm python scripts (deprecated)
+dh_python - calculates Python dependencies and adds postinst and prerm Python scripts (deprecated)
 
 =cut
 
@@ -12,29 +12,29 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_python> [S<I<debhelper options>>] [B<-n>] [B<-V> I<version>] [S<I<module dirs ...>>]
+B<dh_python> [S<I<debhelper options>>] [B<-n>] [B<-V> I<version>] [S<I<module dirs> ...>]
 
 =head1 DESCRIPTION
 
-Note: This program is deprecated. You should use dh_pysupport or
-dh_pycentral instead. This program will do nothing if debian/pycompat
-or a Python-Version control file field exists.
+Note: This program is deprecated. You should use B<dh_pysupport> or
+B<dh_pycentral> instead. This program will do nothing if F<debian/pycompat>
+or a B<Python-Version> F<control> file field exists.
 
-dh_python is a debhelper program that is responsible for generating the
-${python:Depends} substitutions and adding them to substvars files. It
-will also add a postinst and a prerm script if required.
+B<dh_python> is a debhelper program that is responsible for generating the
+B<${python:Depends}> substitutions and adding them to substvars files. It
+will also add a F<postinst> and a F<prerm> script if required.
 
-The program will look at python scripts and modules in your package, and
-will use this information to generate a dependency on python, with the
-current major version, or on pythonX.Y if your scripts or modules need a
-specific python version. The dependency will be substituted into your
-package's control file wherever you place the token "${python:Depends}".
+The program will look at Python scripts and modules in your package, and
+will use this information to generate a dependency on B<python>, with the
+current major version, or on B<python>I<X>B<.>I<Y> if your scripts or modules need a
+specific B<python> version. The dependency will be substituted into your
+package's F<control> file wherever you place the token B<${python:Depends}>.
 
 If some modules need to be byte-compiled at install time, appropriate
-postinst and prerm scripts will be generated. If already byte-compiled
+F<postinst> and F<prerm> scripts will be generated. If already byte-compiled
 modules are found, they are removed.
 
-If you use this program, your package should build-depend on python.
+If you use this program, your package should build-depend on B<python>.
 
 =head1 OPTIONS
 
@@ -42,24 +42,24 @@ If you use this program, your package should build-depend on python.
 
 =item I<module dirs>
 
-If your package installs python modules in non-standard directories, you
-can make dh_python check those directories by passing their names on the
-command line. By default, it will check /usr/lib/site-python,
-/usr/lib/$PACKAGE, /usr/share/$PACKAGE, /usr/lib/games/$PACKAGE,
-/usr/share/games/$PACKAGE and /usr/lib/python?.?/site-packages.
+If your package installs Python modules in non-standard directories, you
+can make F<dh_python> check those directories by passing their names on the
+command line. By default, it will check F</usr/lib/site-python,
+/usr/lib/$PACKAGE>, F</usr/share/$PACKAGE>, F</usr/lib/games/$PACKAGE>,
+F</usr/share/games/$PACKAGE> and F</usr/lib/python?.?/site-packages>.
 
-Note: only /usr/lib/site-python, /usr/lib/python?.?/site-packages and the
-extra names on the command line are searched for binary (.so) modules.
+Note: only F</usr/lib/site-python>, F</usr/lib/python?.?/site-packages> and the
+extra names on the command line are searched for binary (F<.so>) modules.
 
 =item B<-V> I<version>
 
-If the .py files your package ships are meant to be used by a specific
-pythonX.Y version, you can use this option to specify the desired version,
-such as 2.3. Do not use if you ship modules in /usr/lib/site-python.
+If the F<.py> files your package ships are meant to be used by a specific
+B<python>I<X>B<.>I<Y> version, you can use this option to specify the desired version,
+such as B<2.3>. Do not use if you ship modules in F</usr/lib/site-python>.
 
 =item B<-n>, B<--noscripts>
 
-Do not modify postinst/postrm scripts.
+Do not modify F<postinst>/F<postrm> scripts.
 
 =back
 
diff --git a/dh_scrollkeeper b/dh_scrollkeeper
index c40e77d..fb04e6e 100755
--- a/dh_scrollkeeper
+++ b/dh_scrollkeeper
@@ -15,7 +15,7 @@ B<dh_scrollkeeper> [S<I<debhelper options>>] [B<-n>] [S<I<directory>>]
 
 =head1 DESCRIPTION
 
-dh_scrollkeeper was a debhelper program that handled 
+B<dh_scrollkeeper> was a debhelper program that handled 
 registering OMF files for ScrollKeeper. However, it no longer does
 anything, and is now deprecated.
 
diff --git a/dh_shlibdeps b/dh_shlibdeps
index 34120c3..e941af6 100755
--- a/dh_shlibdeps
+++ b/dh_shlibdeps
@@ -16,11 +16,11 @@ B<dh_shlibdeps> [S<I<debhelper options>>] [B<-L>I<package>] [B<-l>I<directory>]
 
 =head1 DESCRIPTION
 
-dh_shlibdeps is a debhelper program that is responsible for calculating
+B<dh_shlibdeps> is a debhelper program that is responsible for calculating
 shared library dependencies for packages.
 
 This program is merely a wrapper around L<dpkg-shlibdeps(1)> that calls it
-once for each package listed in the control file, passing it
+once for each package listed in the F<control> file, passing it
 a list of ELF executables and shared libraries it has found.
 
 =head1 OPTIONS
@@ -29,38 +29,38 @@ a list of ELF executables and shared libraries it has found.
 
 =item B<-X>I<item>, B<--exclude=>I<item>
 
-Exclude files that contain "item" anywhere in their filename from being
-passed to dpkg-shlibdeps. This will make their dependencies be ignored.
+Exclude files that contain F<item> anywhere in their filename from being
+passed to B<dpkg-shlibdeps>. This will make their dependencies be ignored.
 This may be useful in some situations, but use it with caution. This option
 may be used more than once to exclude more than one thing.
 
 =item B<--> I<params>
 
-Pass "params" to L<dpkg-shlibdeps(1)>.
+Pass I<params> to L<dpkg-shlibdeps(1)>.
 
 =item B<-u>I<params>, B<--dpkg-shlibdeps-params=>I<params>
 
 This is another way to pass I<params> to L<dpkg-shlibdeps(1)>.
 It is deprecated; use B<--> instead.
 
-=item B<-l>I<directory>[:directory:directory:..]
+=item B<-l>I<directory>[B<:>I<directory> ...]
 
-With recent versions of dpkg-shlibdeps, this option is generally not
+With recent versions of B<dpkg-shlibdeps>, this option is generally not
 needed.
 
-Before dpkg-shlibdeps is run, LD_LIBRARY_PATH will have added to it the 
+Before B<dpkg-shlibdeps> is run, B<LD_LIBRARY_PATH> will have added to it the 
 specified directory (or directories -- separate with colons). With recent
-versions of dpkg-shlibdeps, this is mostly only useful for packages that
+versions of B<dpkg-shlibdeps>, this is mostly only useful for packages that
 build multiple flavors of the same library, or other situations where
 the library is installed into a directory not on the regular library search
 path.
 
 =item B<-L>I<package>, B<--libpackage=>I<package>
 
-With recent versions of dpkg-shlibdeps, this option is generally not
+With recent versions of B<dpkg-shlibdeps>, this option is generally not
 needed, unless your package builds multiple flavors of the same library.
 
-It tells dpkg-shlibdeps (via its -S parameter) to look first in the package
+It tells B<dpkg-shlibdeps> (via its B<-S> parameter) to look first in the package
 build directory for the specified package, when searching for libraries,
 symbol files, and shlibs files.
 
@@ -70,18 +70,18 @@ symbol files, and shlibs files.
 
 Suppose that your source package produces libfoo1, libfoo-dev, and
 libfoo-bin binary packages. libfoo-bin links against libfoo1, and should
-depend on it. In your rules file, first run dh_makeshlibs, then dh_shlibdeps:
+depend on it. In your rules file, first run B<dh_makeshlibs>, then B<dh_shlibdeps>:
 
 	dh_makeshlibs
 	dh_shlibdeps
 
 This will have the effect of generating automatically a shlibs file for
 libfoo1, and using that file and the libfoo1 library in the
-debian/libfoo1/usr/lib directory to calculate shared library dependency
+F<debian/libfoo1/usr/lib> directory to calculate shared library dependency
 information.
 
 If a libbar1 package is also produced, that is an alternate build of
-libfoo, and is installed into /usr/lib/bar/, you can make libfoo-bin depend
+libfoo, and is installed into F</usr/lib/bar/>, you can make libfoo-bin depend
 on libbar1 as follows:
 
 	dh_shlibdeps -Llibbar1 -l/usr/lib/bar
diff --git a/dh_strip b/dh_strip
index 0da2e1e..3acf6a7 100755
--- a/dh_strip
+++ b/dh_strip
@@ -12,25 +12,25 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_strip> [S<I<debhelper options>>] [B<-X>I<item>] [--dbg-package=package] [--keep-debug]
+B<dh_strip> [S<I<debhelper options>>] [B<-X>I<item>] [B<--dbg-package=>I<package>] [B<--keep-debug>]
 
 =head1 DESCRIPTION
 
-dh_strip is a debhelper program that is responsible for stripping
+B<dh_strip> is a debhelper program that is responsible for stripping
 executables, shared libraries, and static libraries that are not used for
 debugging.
 
 This program examines your package build directories and works out what
 to strip on its own. It uses L<file(1)> and file permissions and filenames
-to figure out what files are shared libraries (*.so), executable binaries,
-and static (lib*.a) and debugging libraries (lib*_g.a, debug/*.so), and
+to figure out what files are shared libraries (F<*.so>), executable binaries,
+and static (F<lib*.a>) and debugging libraries (F<lib*_g.a>, F<debug/*.so>), and
 strips each as much as is possible. (Which is not at all for debugging
 libraries.) In general it seems to make very good guesses, and will do the
 right thing in almost all cases.
 
 Since it is very hard to automatically guess if a file is a
-module, and hard to determine how to strip a module, dh_strip does not
-currently deal with stripping binary modules such as .o files.
+module, and hard to determine how to strip a module, B<dh_strip> does not
+currently deal with stripping binary modules such as F<.o> files.
 
 =head1 OPTIONS
 
@@ -38,36 +38,36 @@ currently deal with stripping binary modules such as .o files.
 
 =item B<-X>I<item>, B<--exclude=>I<item>
 
-Exclude files that contain "item" anywhere in their filename from being
+Exclude files that contain I<item> anywhere in their filename from being
 stripped. You may use this option multiple times to build up a list of
 things to exclude.
 
 =item B<--dbg-package=>I<package>
 
-Causes dh_strip to save debug symbols stripped from the packages it acts on
+Causes B<dh_strip> to save debug symbols stripped from the packages it acts on
 as independent files in the package build directory of the specified debugging
 package.
 
 For example, if your packages are libfoo and foo and you want to include a
-foo-dbg package with debugging symbols, use dh_strip --dbg-package=foo-dbg.
+I<foo-dbg> package with debugging symbols, use B<dh_strip --dbg-package=>I<foo-dbg>.
 
 Note that this option behaves significantly different in debhelper
 compatibility levels 4 and below. Instead of specifying the name of a debug
 package to put symbols in, it specifies a package (or packages) which
 should have separated debug symbols, and the separated symbols are placed
-in packages with "-dbg" added to their name.
+in packages with B<-dbg> added to their name.
 
 =item B<-k>, B<--keep-debug>
 
 Debug symbols will be retained, but split into an independent
-file in usr/lib/debug/ in the package build directory. --dbg-package
+file in F<usr/lib/debug/> in the package build directory. B<--dbg-package>
 is easier to use than this option, but this option is more flexible.
 
 =back
 
 =head1 NOTES
 
-If the DEB_BUILD_OPTIONS environment variable contains "nostrip", nothing
+If the B<DEB_BUILD_OPTIONS> environment variable contains B<nostrip>, nothing
 will be stripped, in accordance with Debian policy (section 10.1
 "Binaries").
 
diff --git a/dh_suidregister b/dh_suidregister
index 5af99e7..7f6cd40 100755
--- a/dh_suidregister
+++ b/dh_suidregister
@@ -18,8 +18,8 @@ and should not be used.
 =head1 CONVERTING TO STATOVERRIDE
 
 Converting a package that uses this program to use the new statoverride
-mechanism is easy. Just remove the call to dh_suidregister from
-debian/rules, and add a versioned conflicts into your control file, as
+mechanism is easy. Just remove the call to B<dh_suidregister> from
+F<debian/rules>, and add a versioned conflicts into your F<control> file, as
 follows:
 
   Conflicts: suidmanager (<< 0.50)
diff --git a/dh_testdir b/dh_testdir
index 67ab9ea..8e12489 100755
--- a/dh_testdir
+++ b/dh_testdir
@@ -2,7 +2,7 @@
 
 =head1 NAME
 
-dh_testdir - test directory before building debian package
+dh_testdir - test directory before building Debian package
 
 =cut
 
@@ -11,12 +11,12 @@ use Debian::Debhelper::Dh_Lib;
 
 =head1 SYNOPSIS
 
-B<dh_testdir> [S<I<debhelper options>>] [S<I<file ...>>]
+B<dh_testdir> [S<I<debhelper options>>] [S<I<file> ...>]
 
 =head1 DESCRIPTION
 
-dh_testdir tries to make sure that you are in the correct directory when
-building a debian package. It makes sure that the file debian/control
+B<dh_testdir> tries to make sure that you are in the correct directory when
+building a Debian package. It makes sure that the file F<debian/control>
 exists, as well as any other files you specify. If not,
 it exits with an error.
 
@@ -24,7 +24,7 @@ it exits with an error.
 
 =over 4
 
-=item I<file ...>
+=item I<file> ...
 
 Test for the existence of these files too.
 
diff --git a/dh_testroot b/dh_testroot
index 717d884..c010dd5 100755
--- a/dh_testroot
+++ b/dh_testroot
@@ -10,7 +10,7 @@ B<dh_testroot> [S<I<debhelper options>>]
 
 =head1 DESCRIPTION
 
-dh_testroot simply checks to see if you are root. If not, it exits with an
+B<dh_testroot> simply checks to see if you are root. If not, it exits with an
 error. Debian packages must be built as root, though you can use 
 L<fakeroot(1)>
 
diff --git a/dh_undocumented b/dh_undocumented
index 32cfbd8..03a4ea7 100755
--- a/dh_undocumented
+++ b/dh_undocumented
@@ -15,9 +15,9 @@ Do not run!
 
 =head1 DESCRIPTION
 
-This program used to make symlinks to the undocumented.7 man page for man
+This program used to make symlinks to the F<undocumented.7> man page for man
 pages not present in a package. Debian policy now frowns on use of the
-undocumented.7 man page, and so this program does nothing, and should not
+F<undocumented.7> man page, and so this program does nothing, and should not
 be used.
 
 =cut
diff --git a/dh_usrlocal b/dh_usrlocal
index db7dfcd..e92d909 100755
--- a/dh_usrlocal
+++ b/dh_usrlocal
@@ -18,23 +18,23 @@ B<dh_usrlocal> [S<I<debhelper options>>] [B<-n>]
 
 =head1 DESCRIPTION
 
-dh_usrlocal is a debhelper program that can be used for building packages
-that will provide a subdirectory in /usr/local when installed.
+B<dh_usrlocal> is a debhelper program that can be used for building packages
+that will provide a subdirectory in F</usr/local> when installed.
 
-It finds subdirectories of usr/local in the package build directory, and
+It finds subdirectories of F<usr/local> in the package build directory, and
 removes them, replacing them with maintainer script snippets (unless B<-n>
 is used) to create the directories at install time, and remove them when
 the package is removed, in a manner compliant with Debian policy. These
-snippets are inserted into the maintainer scripts by dh_installdeb. See
-L<dh_installdeb(1)> for an explanation of Debhelper maintainer script
+snippets are inserted into the maintainer scripts by B<dh_installdeb>. See
+L<dh_installdeb(1)> for an explanation of debhelper maintainer script
 snippets.
 
 If the directories found in the build tree have unusual owners, groups, or
 permissions, then those values will be preserved in the directories made by
-the postinst script. However, as a special exception, if a directory is owned
+the F<postinst> script. However, as a special exception, if a directory is owned
 by root.root, it will be treated as if it is owned by root.staff and is mode
 2775. This is useful, since that is the group and mode policy recommends for
-directories in /usr/local.
+directories in F</usr/local>.
 
 =head1 OPTIONS
 
