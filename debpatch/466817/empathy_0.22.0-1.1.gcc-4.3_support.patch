--- empathy-0.22.0.orig/libempathy-gtk/empathy-preferences.c
+++ empathy-0.22.0/libempathy-gtk/empathy-preferences.c
@@ -82,15 +82,19 @@
 static void     preferences_themes_setup                 (EmpathyPreferences      *preferences);
 static void     preferences_widget_sync_bool             (const gchar            *key,
 							  GtkWidget              *widget);
+#ifdef COMMENTED_OUT
 static void     preferences_widget_sync_int              (const gchar            *key,
 							  GtkWidget              *widget);
+#endif /* COMMENTED_OUT */
 static void     preferences_widget_sync_string           (const gchar            *key,
 							  GtkWidget              *widget);
 static void     preferences_widget_sync_string_combo     (const gchar            *key,
 							  GtkWidget              *widget);
+#ifdef COMMENTED_OUT
 static void     preferences_notify_int_cb                (EmpathyConf             *conf,
 							  const gchar            *key,
 							  gpointer                user_data);
+#endif /* COMMENTED_OUT */
 static void     preferences_notify_string_cb             (EmpathyConf             *conf,
 							  const gchar            *key,
 							  gpointer                user_data);
@@ -103,12 +107,14 @@
 static void     preferences_notify_sensitivity_cb        (EmpathyConf             *conf,
 							  const gchar            *key,
 							  gpointer                user_data);
+#ifdef COMMENTED_OUT
 static void     preferences_hookup_spin_button           (EmpathyPreferences      *preferences,
 							  const gchar            *key,
 							  GtkWidget              *widget);
 static void     preferences_hookup_entry                 (EmpathyPreferences      *preferences,
 							  const gchar            *key,
 							  GtkWidget              *widget);
+#endif /* COMMENTED_OUT */
 static void     preferences_hookup_toggle_button         (EmpathyPreferences      *preferences,
 							  const gchar            *key,
 							  GtkWidget              *widget);
@@ -121,10 +127,12 @@
 static void     preferences_hookup_sensitivity           (EmpathyPreferences      *preferences,
 							  const gchar            *key,
 							  GtkWidget              *widget);
+#ifdef COMMENTED_OUT
 static void     preferences_spin_button_value_changed_cb (GtkWidget              *button,
 							  gpointer                user_data);
 static void     preferences_entry_value_changed_cb       (GtkWidget              *entry,
 							  gpointer                user_data);
+#endif /* COMMENTED_OUT */
 static void     preferences_toggle_button_toggled_cb     (GtkWidget              *button,
 							  gpointer                user_data);
 static void     preferences_radio_button_toggled_cb      (GtkWidget              *button,
@@ -487,6 +495,7 @@
 	}
 }
 
+#ifdef COMMENTED_OUT
 static void
 preferences_widget_sync_int (const gchar *key, GtkWidget *widget)
 {
@@ -498,6 +507,7 @@
 		}
 	}
 }
+#endif /* COMMENTED_OUT */
 
 static void
 preferences_widget_sync_string (const gchar *key, GtkWidget *widget)
@@ -579,6 +589,7 @@
 	g_free (value);
 }
 
+#ifdef COMMENTED_OUT
 static void
 preferences_notify_int_cb (EmpathyConf  *conf,
 			   const gchar *key,
@@ -586,6 +597,7 @@
 {
 	preferences_widget_sync_int (key, user_data);	
 }
+#endif /* COMMENTED_OUT */
 
 static void
 preferences_notify_string_cb (EmpathyConf  *conf,
@@ -630,6 +642,7 @@
 						  GUINT_TO_POINTER (id));
 }
 
+#ifdef COMMENTED_OUT
 static void
 preferences_hookup_spin_button (EmpathyPreferences *preferences,
 				const gchar       *key,
@@ -690,6 +703,7 @@
 		preferences_add_id (preferences, id);
 	}
 }
+#endif /* COMMENTED_OUT */
 
 static void
 preferences_hookup_toggle_button (EmpathyPreferences *preferences,
@@ -794,6 +808,7 @@
 	}
 }
 
+#ifdef COMMENTED_OUT
 static void
 preferences_spin_button_value_changed_cb (GtkWidget *button,
 					  gpointer   user_data)
@@ -819,6 +834,7 @@
 				 key,
 				 gtk_entry_get_text (GTK_ENTRY (entry)));
 }
+#endif /* COMMENTED_OUT */
 
 static void
 preferences_toggle_button_toggled_cb (GtkWidget *button,
